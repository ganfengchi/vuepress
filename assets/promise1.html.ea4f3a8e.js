import{_ as n,o as s,c as a,b as t}from"./app.e16a8a63.js";const p={},e=t(`<h3 id="\u4F60\u8BF4\u4F60\u4F1A-promise-\u90A3\u4F60\u89E3\u51B3\u4E00\u4E0B\u9879\u76EE\u4E2D\u7684\u8FD9\u4E94\u4E2A\u96BE\u9898-\u8F6C\u8F7D\u81EA\u6398\u91D1" tabindex="-1"><a class="header-anchor" href="#\u4F60\u8BF4\u4F60\u4F1A-promise-\u90A3\u4F60\u89E3\u51B3\u4E00\u4E0B\u9879\u76EE\u4E2D\u7684\u8FD9\u4E94\u4E2A\u96BE\u9898-\u8F6C\u8F7D\u81EA\u6398\u91D1" aria-hidden="true">#</a> \u4F60\u8BF4\u4F60\u4F1A Promise\uFF1F\u90A3\u4F60\u89E3\u51B3\u4E00\u4E0B\u9879\u76EE\u4E2D\u7684\u8FD9\u4E94\u4E2A\u96BE\u9898\uFF1F \u8F6C\u8F7D\u81EA\u6398\u91D1</h3><h3 id="\u524D\u8A00" tabindex="-1"><a class="header-anchor" href="#\u524D\u8A00" aria-hidden="true">#</a> \u524D\u8A00</h3><blockquote><p>\u5927\u5BB6\u597D\uFF0C\u6211\u662F\u6797\u4E09\u5FC3\uFF0C\u7528\u6700\u901A\u4FD7\u6613\u61C2\u7684\u8BDD\u8BB2\u6700\u96BE\u7684\u77E5\u8BC6\u70B9\u662F\u6211\u7684\u5EA7\u53F3\u94ED\uFF0C\u57FA\u7840\u662F\u8FDB\u9636\u7684\u524D\u63D0\u662F\u6211\u7684\u521D\u5FC3\uFF0C\u4F17\u6240\u5468\u77E5\u54C8\uFF0CPromise \u5728\u54B1\u4EEC\u7684\u5F00\u53D1\u4E2D\u662F\u76F8\u5F53\u7684\u91CD\u8981\uFF0C\u6211\u89C9\u5F97\u5BF9\u4E8E Promise \u7684\u4F7F\u7528\u7B49\u7EA7\uFF0C\u53EF\u4EE5\u5206\u4E3A\u4E09\u4E2A\u7B49\u7EA7 1\u3001\u638C\u63E1 Promise \u7684\u57FA\u672C\u4F7F\u7528 2\u3001\u638C\u63E1 Promise \u7684\u57FA\u672C\u539F\u7406 3\u3001\u5728\u9879\u76EE\u4E2D\u80FD\u7075\u6D3B\u8FD0\u7528 Promise \u89E3\u51B3\u4E00\u4E9B\u95EE\u9898</p></blockquote><p>\u7B2C\u4E00\u70B9\u7684\u8BDD\uFF0C\u5176\u5B9E\u5C31\u662F\u80FD\u638C\u63E1 Promise \u7684\u4E00\u4E9B\u57FA\u672C\u4F7F\u7528\u65B9\u6CD5\u4EE5\u53CA\u4E00\u4E9B\u65B9\u6CD5\uFF0C\u5982 then\u3001catch\u3001all\u3001race\u3001finally\u3001allSettled\u3001any\u3001resolve \u7B49\u7B49<br> \u7B2C\u4E8C\u70B9\u7684\u8BDD\uFF0C\u5C31\u662F\u8981\u80FD\u7B80\u5355\u5B9E\u73B0\u4E00\u4E0B Promise \u7684\u539F\u7406\uFF0C\u8FD9\u80FD\u4F7F\u6211\u4EEC\u5BF9 Promise \u7684\u90A3\u4E9B\u5E38\u7528\u65B9\u6CD5\u6709\u66F4\u597D\u7684\u7406\u89E3<br> \u7B2C\u4E09\u70B9\u7684\u8BDD\uFF0C\u5C31\u662F\u8981\u80FD\u7075\u6D3B Promise \u89E3\u51B3\u54B1\u4EEC\u5F00\u53D1\u4E2D\u7684\u4E00\u4E9B\u95EE\u9898\uFF0C\u4ECA\u5929\u6211\u5C31\u7ED9\u5927\u5BB6\u8BF4\u4E00\u4E0B\u6211\u7528 Promise \u5728\u9879\u76EE\u5F00\u53D1\u4E2D\u89E3\u51B3\u4E86\u4EC0\u4E48\u95EE\u9898\u5427\uFF01<br></p><h3 id="\u63A5\u53E3\u8BF7\u6C42\u8D85\u65F6" tabindex="-1"><a class="header-anchor" href="#\u63A5\u53E3\u8BF7\u6C42\u8D85\u65F6" aria-hidden="true">#</a> \u63A5\u53E3\u8BF7\u6C42\u8D85\u65F6</h3><p>\u987E\u540D\u601D\u4E49\uFF0C\u5C31\u662F\u7ED9\u5B9A\u4E00\u4E2A\u65F6\u95F4\uFF0C\u5982\u679C\u63A5\u53E3\u8BF7\u6C42\u8D85\u8FC7\u8FD9\u4E2A\u65F6\u95F4\u7684\u8BDD\u5C31\u62A5\u9519 1\u3001\u81EA\u5DF1\u5B9E\u73B0 \u5B9E\u73B0\u601D\u8DEF\u5C31\u662F\uFF1A\u63A5\u53E3\u8BF7\u6C42\u548C\u5EF6\u65F6\u51FD\u6570\u8D5B\u8DD1\uFF0C\u5E76\u4F7F\u7528\u4E00\u4E2A Promise \u5305\u7740\uFF0C\u7531\u4E8E Promise \u7684\u72B6\u6001\u662F\u4E0D\u53EF\u9006\u7684\uFF0C\u6240\u4EE5\u5982\u679C\u63A5\u53E3\u8BF7\u6C42\u5148\u8DD1\u5B8C\u5219\u8BF4\u660E\u672A\u8D85\u65F6\u4E14 Promise \u7684\u72B6\u6001\u662F fulfilled\uFF0C\u53CD\u4E4B\uFF0C\u5EF6\u65F6\u51FD\u6570\u5148\u8DD1\u5B8C\u5219\u8BF4\u660E\u8D85\u65F6\u4E86\u4E14 Promise \u7684\u72B6\u6001\u662F rejetced\uFF0C\u6700\u540E\u6839\u636E Promise \u7684\u72B6\u6001\u6765\u5224\u65AD\u6709\u65E0\u8D85\u65F6</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">/**
 * \u6A21\u62DF\u5EF6\u65F6
 * @param {number} delay \u5EF6\u8FDF\u65F6\u95F4
 * @returns {Promise&lt;any&gt;}
 */</span>
<span class="token keyword">function</span> <span class="token function">sleep</span><span class="token punctuation">(</span>delay<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>_<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;\u8D85\u65F6\u55BD&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> delay<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * \u6A21\u62DF\u8BF7\u6C42
 */</span>
<span class="token keyword">function</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5047\u8BBE\u8BF7\u6C42\u9700\u8981 1s</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;\u6210\u529F\u55BD&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * \u5224\u65AD\u662F\u5426\u8D85\u65F6
 * @param {() =&gt; Promise&lt;any&gt;} requestFn \u8BF7\u6C42\u51FD\u6570
 * @param {number} delay \u5EF6\u8FDF\u65F6\u957F
 * @returns {Promise&lt;any&gt;}
 */</span>
<span class="token keyword">function</span> <span class="token function">timeoutPromise</span><span class="token punctuation">(</span>requestFn<span class="token punctuation">,</span> delay<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> promises <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token function">requestFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">sleep</span><span class="token punctuation">(</span>delay<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> promise <span class="token keyword">of</span> promises<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8D85\u65F6\u5219\u6267\u884C\u5931\u8D25\uFF0C\u4E0D\u8D85\u65F6\u5219\u6267\u884C\u6210\u529F</span>
      promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
        <span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2\u3001promise-race" tabindex="-1"><a class="header-anchor" href="#_2\u3001promise-race" aria-hidden="true">#</a> 2\u3001Promise.race</h3><p>\u5176\u5B9E timeoutPromise \u4E2D\u7684\u4EE3\u7801\u53EF\u4EE5\u4F7F\u7528 Promise.race \u6765\u4EE3\u66FF\uFF0C\u662F\u540C\u6837\u7684\u6548\u679C</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">timeoutPromise</span><span class="token punctuation">(</span>requestFn<span class="token punctuation">,</span> delay<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679C\u5148\u8FD4\u56DE\u7684\u662F\u5EF6\u8FDFPromise\u5219\u8BF4\u660E\u8D85\u65F6\u4E86</span>
  <span class="token keyword">return</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">requestFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">sleep</span><span class="token punctuation">(</span>delay<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-\u6D4B\u8BD5" tabindex="-1"><a class="header-anchor" href="#_3-\u6D4B\u8BD5" aria-hidden="true">#</a> 3.\u6D4B\u8BD5</h3><div class="language-TS ext-TS line-numbers-mode"><pre class="language-TS"><code>// \u8D85\u65F6
timeoutPromise(request, 500).catch(err =&gt; console.log(err)) // \u8D85\u65F6\u55BD

// \u4E0D\u8D85\u65F6
timeoutPromise(request, 2000).then(res =&gt; console.log(res)) // \u6210\u529F\u55BD
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>#\u8F6C\u76D8\u62BD\u5956 \u6211\u4EEC\u5E73\u65F6\u5728\u8F6C\u76D8\u62BD\u5956\u65F6\uFF0C\u4E00\u822C\u90FD\u662F\u5F00\u59CB\u8F6C\u52A8\u7684\u540C\u65F6\u4E5F\u53D1\u8D77\u63A5\u53E3\u8BF7\u6C42\uFF0C\u6240\u4EE5\u6709\u4E24\u79CD\u53EF\u80FD</p><p>1\u3001\u8F6C\u76D8\u8F6C\u5B8C\uFF0C\u63A5\u53E3\u8FD8\u6CA1\u8BF7\u6C42\u56DE\u6765\uFF0C\u8FD9\u662F\u4E0D\u6B63\u5E38\u7684<br> 2\u3001\u8F6C\u76D8\u8F6C\u5B8C\u524D\uFF0C\u63A5\u53E3\u5C31\u8BF7\u6C42\u5B8C\u6BD5\uFF0C\u8FD9\u662F\u6B63\u5E38\u7684\uFF0C\u4F46\u662F\u9700\u8981\u4FDD\u8BC1\u8BF7\u6C42\u56DE\u8C03\u8DDF\u8F6C\u76D8\u8F6C\u5B8C\u56DE\u8C03\u540C\u65F6\u6267\u884C<br></p><h3 id="_1\u3001\u8F6C\u76D8\u8F6C\u5B8C-\u63A5\u53E3\u8FD8\u6CA1\u8BF7\u6C42\u56DE\u6765" tabindex="-1"><a class="header-anchor" href="#_1\u3001\u8F6C\u76D8\u8F6C\u5B8C-\u63A5\u53E3\u8FD8\u6CA1\u8BF7\u6C42\u56DE\u6765" aria-hidden="true">#</a> 1\u3001\u8F6C\u76D8\u8F6C\u5B8C\uFF0C\u63A5\u53E3\u8FD8\u6CA1\u8BF7\u6C42\u56DE\u6765</h3><p>\u4E3B\u8981\u95EE\u9898\u5C31\u662F\uFF0C\u600E\u4E48\u5224\u65AD\u63A5\u53E3\u8BF7\u6C42\u65F6\u95F4\u662F\u5426\u8D85\u8FC7\u8F6C\u76D8\u8F6C\u5B8C\u6240\u9700\u65F6\u95F4\uFF0C\u54B1\u4EEC\u5176\u5B9E\u53EF\u4EE5\u7528\u5230\u4E0A\u4E00\u4E2A\u77E5\u8BC6\u70B9\u63A5\u53E3\u8BF7\u6C42\u8D85\u65F6\uFF0C\u90FD\u662F\u4E00\u6837\u7684\u9053\u7406\u3002\u5982\u679C\u8F6C\u76D8\u8F6C\u5B8C\u6240\u9700\u65F6\u95F4\u662F 2500ms\uFF0C\u90A3\u54B1\u4EEC\u53EF\u4EE5\u9650\u5B9A\u63A5\u53E3\u8BF7\u6C42\u9700\u8981\u63D0\u524D 1000ms \u8BF7\u6C42\u56DE\u6765\uFF0C\u4E5F\u5C31\u662F\u63A5\u53E3\u8BF7\u6C42\u7684\u8D85\u65F6\u65F6\u95F4\u4E3A 2500ms - 1000ms = 1500ms</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">/**
 * \u6A21\u62DF\u5EF6\u65F6
 * @param {number} delay \u5EF6\u8FDF\u65F6\u95F4
 * @returns {Promise&lt;any&gt;}
 */</span>
<span class="token keyword">function</span> <span class="token function">sleep</span><span class="token punctuation">(</span>delay<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>_<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;\u8D85\u65F6\u55BD&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> delay<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * \u6A21\u62DF\u8BF7\u6C42
 */</span>
<span class="token keyword">function</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;\u6210\u529F\u55BD&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * \u5224\u65AD\u662F\u5426\u8D85\u65F6
 * @param {() =&gt; Promise&lt;any&gt;} requestFn \u8BF7\u6C42\u51FD\u6570
 * @param {number} delay \u5EF6\u8FDF\u65F6\u957F
 * @returns {Promise&lt;any&gt;}
 */</span>
<span class="token keyword">function</span> <span class="token function">timeoutPromise</span><span class="token punctuation">(</span>requestFn<span class="token punctuation">,</span> delay<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">requestFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">sleep</span><span class="token punctuation">(</span>delay<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2\u3001\u8F6C\u76D8\u8F6C\u5B8C\u524D-\u63A5\u53E3\u5C31\u8BF7\u6C42\u5B8C\u6BD5" tabindex="-1"><a class="header-anchor" href="#_2\u3001\u8F6C\u76D8\u8F6C\u5B8C\u524D-\u63A5\u53E3\u5C31\u8BF7\u6C42\u5B8C\u6BD5" aria-hidden="true">#</a> 2\u3001\u8F6C\u76D8\u8F6C\u5B8C\u524D\uFF0C\u63A5\u53E3\u5C31\u8BF7\u6C42\u5B8C\u6BD5</h3><p>\u54B1\u4EEC\u786E\u4FDD\u4E86\u63A5\u53E3\u8BF7\u6C42\u53EF\u4EE5\u5728\u8F6C\u76D8\u8F6C\u5B8C\u4E4B\u524D\u8BF7\u6C42\u56DE\u6765\uFF0C\u4F46\u662F\u8FD8\u6709\u4E00\u4E2A\u95EE\u9898\uFF0C\u5C31\u662F\u9700\u8981\u4FDD\u8BC1\u8BF7\u6C42\u56DE\u8C03\u8DDF\u8F6C\u76D8\u8F6C\u5B8C\u56DE\u8C03\u540C\u65F6\u6267\u884C\uFF0C\u56E0\u4E3A\u867D\u7136\u63A5\u53E3\u8BF7\u6C42\u8BF7\u6C42\u56DE\u6765\u7684\u65F6\u5019\uFF0C\u8F6C\u76D8\u8FD8\u5728\u8F6C\u7740\uFF0C\u54B1\u4EEC\u9700\u8981\u7B49\u8F6C\u76D8\u8F6C\u5B8C\u65F6\uFF0C\u518D\u4E00\u8D77\u6267\u884C\u8FD9\u4E24\u4E2A\u56DE\u8C03 \u542C\u5230\u8FD9\u4E2A\u63CF\u8FF0\uFF0C\u76F8\u4FE1\u5F88\u591A\u540C\u5B66\u5C31\u4F1A\u60F3\u5230 Promise.all \u8FD9\u4E2A\u65B9\u6CD5</p><div class="language-TS ext-TS line-numbers-mode"><pre class="language-TS"><code>// ...\u4E0A\u9762\u4EE3\u7801

/**
 * \u6A21\u62DF\u8F6C\u76D8\u65CB\u8F6C\u5230\u505C\u6B62\u7684\u5EF6\u65F6
 * @param {number} delay \u5EF6\u8FDF\u65F6\u95F4
 * @returns {Promise&lt;any&gt;}
 */
 function turntableSleep(delay) {
  return new Promise(resolve =&gt; {
    setTimeout(() =&gt; resolve(&#39;\u505C\u6B62\u8F6C\u52A8\u55BD&#39;), delay)
  })
}

/**
 * \u5224\u65AD\u662F\u5426\u8D85\u65F6
 * @param {() =&gt; Promise&lt;any&gt;} requestFn \u8BF7\u6C42\u51FD\u6570
 * @param {number} turntableDelay \u8F6C\u76D8\u8F6C\u591A\u4E45
 * @param {number} delay \u8BF7\u6C42\u8D85\u65F6\u65F6\u957F
 * @returns {Promise&lt;any&gt;}
 */

function zhuanpanPromise(requsetFn, turntableDelay, delay) {
  return Promise.all([timeoutPromise(requsetFn, delay), turntableSleep(turntableDelay)])
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3\u3001\u6D4B\u8BD5" tabindex="-1"><a class="header-anchor" href="#_3\u3001\u6D4B\u8BD5" aria-hidden="true">#</a> 3\u3001\u6D4B\u8BD5</h3><p>// \u4E0D\u8D85\u65F6\uFF0C\u4E14\u5148\u4E8E\u8F6C\u76D8\u505C\u6B62\u524D\u8BF7\u6C42\u56DE\u6570\u636E</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">zhuanpanPromise</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token number">2500</span><span class="token punctuation">,</span> <span class="token number">1500</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u63A7\u5236\u5E76\u53D1\u7684-promise-\u7684\u8C03\u5EA6\u5668" tabindex="-1"><a class="header-anchor" href="#\u63A7\u5236\u5E76\u53D1\u7684-promise-\u7684\u8C03\u5EA6\u5668" aria-hidden="true">#</a> \u63A7\u5236\u5E76\u53D1\u7684 Promise \u7684\u8C03\u5EA6\u5668</h3><p>\u60F3\u8C61\u4E00\u4E0B\uFF0C\u6709\u4E00\u5929\u4F60\u7A81\u7136\u4E00\u6B21\u6027\u53D1\u4E86 10 \u4E2A\u8BF7\u6C42\uFF0C\u4F46\u662F\u8FD9\u6837\u7684\u8BDD\u5E76\u53D1\u91CF\u662F\u5F88\u5927\u7684\uFF0C\u80FD\u4E0D\u80FD\u63A7\u5236\u4E00\u4E0B\uFF0C\u5C31\u662F\u4E00\u6B21\u53EA\u53D1 2 \u4E2A\u8BF7\u6C42\uFF0C\u67D0\u4E00\u4E2A\u8BF7\u6C42\u5B8C\u4E86\uFF0C\u5C31\u8BA9\u7B2C 3 \u4E2A\u8865\u4E0A\uFF0C\u53C8\u8BF7\u6C42\u5B8C\u4E86\uFF0C\u8BA9\u7B2C 4 \u4E2A\u8865\u4E0A\uFF0C\u4EE5\u6B64\u7C7B\u63A8\uFF0C\u8BA9\u6700\u9AD8\u5E76\u53D1\u91CF\u53D8\u6210\u53EF\u63A7\u7684 addTask(1000,&quot;1&quot;);<br> addTask(500,&quot;2&quot;);<br> addTask(300,&quot;3&quot;);<br> addTask(400,&quot;4&quot;);<br> \u7684\u8F93\u51FA\u987A\u5E8F\u662F\uFF1A2 3 1 4<br></p><p>\u6574\u4E2A\u7684\u5B8C\u6574\u6267\u884C\u6D41\u7A0B\uFF1A<br> \u4E00\u5F00\u59CB 1\u30012 \u4E24\u4E2A\u4EFB\u52A1\u5F00\u59CB\u6267\u884C<br> 500ms \u65F6\uFF0C2 \u4EFB\u52A1\u6267\u884C\u5B8C\u6BD5\uFF0C\u8F93\u51FA 2\uFF0C\u4EFB\u52A1 3 \u5F00\u59CB\u6267\u884C<br> 800ms \u65F6\uFF0C3 \u4EFB\u52A1\u6267\u884C\u5B8C\u6BD5\uFF0C\u8F93\u51FA 3\uFF0C\u4EFB\u52A1 4 \u5F00\u59CB\u6267\u884C<br> 1000ms \u65F6\uFF0C1 \u4EFB\u52A1\u6267\u884C\u5B8C\u6BD5\uFF0C\u8F93\u51FA 1\uFF0C\u6B64\u65F6\u53EA\u5269\u4E0B 4 \u4EFB\u52A1\u5728\u6267\u884C<br> 1200ms \u65F6\uFF0C4 \u4EFB\u52A1\u6267\u884C\u5B8C\u6BD5\uFF0C\u8F93\u51FA 4<br></p><p>###\u5B9E\u73B0</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Scheduler</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>limit<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>queue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>limit <span class="token operator">=</span> limit<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">add</span><span class="token punctuation">(</span>time<span class="token punctuation">,</span> order<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token function-variable function">promiseCreator</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>order<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> time<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>promiseCreator<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">taskStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>limit<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">.</span>length <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">&gt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>limit<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>queue
      <span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>#\u6D4B\u8BD5</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u6D4B\u8BD5</span>
<span class="token keyword">const</span> scheduler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scheduler</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">addTask</span> <span class="token operator">=</span> <span class="token punctuation">(</span>time<span class="token punctuation">,</span> order<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  scheduler<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>time<span class="token punctuation">,</span> order<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token function">addTask</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">addTask</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">addTask</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token string">&quot;3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">addTask</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span> <span class="token string">&quot;4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
scheduler<span class="token punctuation">.</span><span class="token function">taskStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u53D6\u6D88\u91CD\u590D\u8BF7\u6C42" tabindex="-1"><a class="header-anchor" href="#\u53D6\u6D88\u91CD\u590D\u8BF7\u6C42" aria-hidden="true">#</a> \u53D6\u6D88\u91CD\u590D\u8BF7\u6C42</h3><p>\u4E3E\u4E2A\u4F8B\u5B50\uFF0C\u54B1\u4EEC\u5728\u505A\u8868\u5355\u63D0\u4EA4\u65F6\uFF0C\u4E3A\u4E86\u9632\u6B62\u591A\u6B21\u91CD\u590D\u7684\u63D0\u4EA4\uFF0C\u80AF\u5B9A\u4F1A\u7ED9\u6309\u94AE\u7684\u70B9\u51FB\u4E8B\u4EF6\u52A0\u4E0A\u9632\u6296\u63AA\u65BD\uFF0C\u8FD9\u786E\u5B9E\u662F\u6709\u6548\u5730\u907F\u514D\u4E86\u591A\u6B21\u70B9\u51FB\u9020\u6210\u7684\u91CD\u590D\u8BF7\u6C42\uFF0C\u4F46\u662F\u5176\u5B9E\u8FD8\u662F\u6709\u5F0A\u7AEF\u7684 \u4F17\u6240\u5468\u77E5\uFF0C\u4E3A\u4E86\u7528\u6237\u66F4\u597D\u5730\u4F53\u9A8C\uFF0C\u9632\u6296\u7684\u5EF6\u65F6\u662F\u4E0D\u80FD\u592A\u957F\u7684\uFF0C\u4E00\u822C\u5728\u6211\u7684\u9879\u76EE\u4E2D\u90FD\u662F 300ms\uFF0C\u4F46\u662F\u8FD9\u53EA\u80FD\u7BA1\u5230\u8BF7\u6C42\u65F6\u95F4 &lt; 300ms \u7684\u63A5\u53E3\u8BF7\u6C42\uFF0C\u5982\u679C\u6709\u4E00\u4E2A\u63A5\u53E3\u8BF7\u6C42\u9700\u8981 2000ms\uFF0C\u90A3\u4E48\u6B64\u65F6\u9632\u6296\u4E5F\u505A\u4E0D\u5230\u5B8C\u5168\u9650\u5236\u91CD\u590D\u8BF7\u6C42\uFF0C\u6240\u4EE5\u54B1\u4EEC\u9700\u8981\u989D\u5916\u505A\u4E00\u4E0B\u53D6\u6D88\u91CD\u590D\u8BF7\u6C42\u7684\u5904\u7406</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u5B9E\u73B0</span>
<span class="token comment">// \u5B9E\u73B0\u601D\u8DEF\uFF1A\u7B80\u5355\u8BF4\u5C31\u662F\uFF0C\u5229\u7528Promise.race\u65B9\u6CD5\uFF0C\u7ED9\u6BCF\u4E00\u6B21\u8BF7\u6C42\u7684\u8EAB\u8FB9\u5B89\u88C5\u4E00\u9897\u96F7\uFF0C\u5982\u679C\u7B2C\u4E00\u6B21\u8BF7\u6C42\u540E\uFF0C\u53C8\u63A5\u4E86\u7B2C\u4E8C\u6B21\u91CD\u590D\u8BF7\u6C42\uFF0C\u90A3\u4E48\u5C31\u6267\u884C\u7B2C\u4E00\u6B21\u8BF7\u6C42\u8EAB\u8FB9\u7684\u96F7\uFF0C\u628A\u7B2C\u4E00\u6B21\u8BF7\u6C42\u7ED9\u70B8\u6389\uFF0C\u4EE5\u6B64\u7C7B\u63A8\u3002</span>
<span class="token keyword">class</span> <span class="token class-name">CancelablePromise</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>pendingPromise <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>reject <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">request</span><span class="token punctuation">(</span>requestFn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>pendingPromise<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">cancel</span><span class="token punctuation">(</span><span class="token string">&quot;\u53D6\u6D88\u91CD\u590D\u8BF7\u6C42&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>_<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reject <span class="token operator">=</span> reject<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>pendingPromise <span class="token operator">=</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">requestFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> promise<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pendingPromise<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">cancel</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>pendingPromise <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">request</span><span class="token punctuation">(</span>delay<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;\u6700\u540E\u8D62\u5BB6\u662F\u6211&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> delay<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6D4B\u8BD5" tabindex="-1"><a class="header-anchor" href="#\u6D4B\u8BD5" aria-hidden="true">#</a> \u6D4B\u8BD5</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> cancelPromise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CancelablePromise</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u6A21\u62DF\u9891\u7E41\u8BF7\u6C425\u6B21</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  cancelPromise
    <span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// \u6700\u540E\u4E00\u4E2A \u6700\u540E\u8D62\u5BB6\u662F\u6211</span>
    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u524D\u56DB\u4E2A \u53D6\u6D88\u91CD\u590D\u8BF7\u6C42</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5168\u5C40\u8BF7\u6C42-loading" tabindex="-1"><a class="header-anchor" href="#\u5168\u5C40\u8BF7\u6C42-loading" aria-hidden="true">#</a> \u5168\u5C40\u8BF7\u6C42 loading</h3><p>\u6BD4\u5982\u4E00\u4E2A\u9875\u9762\u4E2D\uFF0C\u6216\u8005\u591A\u4E2A\u7EC4\u4EF6\u4E2D\u90FD\u9700\u8981\u8BF7\u6C42\u5E76\u4E14\u5C55\u793A loading \u72B6\u6001\uFF0C\u6B64\u65F6\u6211\u4EEC\u4E0D\u60F3\u8981\u6BCF\u4E2A\u9875\u9762\u6216\u8005\u7EC4\u4EF6\u90FD\u5199\u4E00\u904D loading\uFF0C\u90A3\u6211\u4EEC\u53EF\u4EE5\u7EDF\u4E00\u7BA1\u7406 loading\uFF0Cloading \u6709\u4E24\u79CD\u60C5\u51B5</p><p>1\u3001\u5168\u5C40\u53EA\u8981\u6709\u4E00\u4E2A\u63A5\u53E3\u8FD8\u5728\u8BF7\u6C42\u4E2D\uFF0C\u5C31\u5C55\u793A loading 2\u3001\u5168\u5C40\u6240\u6709\u63A5\u53E3\u90FD\u4E0D\u5728\u8BF7\u6C42\u4E2D\uFF0C\u5C31\u9690\u85CF loading</p><p>\u90A3\u6211\u4EEC\u600E\u4E48\u624D\u80FD\u77E5\u9053\u5168\u5C40\u63A5\u53E3\u7684\u8BF7\u6C42\u72B6\u6001\u5462\uFF1F\u5176\u5B9E\u54B1\u4EEC\u53EF\u4EE5\u5229\u7528 Promise\uFF0C\u53EA\u8981\u67D0\u4E2A\u63A5\u53E3\u8BF7\u6C42 Promise \u7684\u72B6\u6001\u4E0D\u662F pending \u90A3\u5C31\u8BF4\u660E\u4ED6\u8BF7\u6C42\u5B8C\u6210\u4E86\uFF0C\u65E0\u8BBA\u8BF7\u6C42\u6210\u529F\u6216\u8005\u5931\u8D25\uFF0C\u65E2\u7136\u662F\u65E0\u8BBA\u6210\u529F\u5931\u8D25\uFF0C\u90A3\u54B1\u4EEC\u5C31\u4F1A\u60F3\u5230 Promise.prototype.finally \u8FD9\u4E2A\u65B9\u6CD5</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u5B9E\u73B0</span>
<span class="token keyword">class</span> <span class="token class-name">PromiseManager</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>pendingPromise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>loading <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">generateKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">parseInt</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>requestFns<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> requestFn <span class="token keyword">of</span> requestFns<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> key <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">generateKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>pendingPromise<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">requestFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>pendingPromise<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>loading <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pendingPromise<span class="token punctuation">.</span>size <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6D4B\u8BD5-1" tabindex="-1"><a class="header-anchor" href="#\u6D4B\u8BD5-1" aria-hidden="true">#</a> \u6D4B\u8BD5</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u6A21\u62DF\u8BF7\u6C42</span>
<span class="token keyword">function</span> <span class="token function">request</span><span class="token punctuation">(</span>delay<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;\u6210\u529F\u55BD&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> delay<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> manager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PromiseManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

manager<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
  <span class="token function">request</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">request</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">request</span><span class="token punctuation">(</span><span class="token number">800</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">request</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">request</span><span class="token punctuation">(</span><span class="token number">1500</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u8F6E\u8BE2\u67E5\u770Bloading\u72B6\u6001</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>manager<span class="token punctuation">.</span>loading<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,42),o=[e];function c(i,u){return s(),a("div",null,o)}var k=n(p,[["render",c],["__file","promise1.html.vue"]]);export{k as default};
