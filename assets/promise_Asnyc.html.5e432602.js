import{_ as e,o,c,a as n,e as t,w as p,d as s,b as i,r as u}from"./app.e16a8a63.js";const l={},r=n("h1",{id:"\u4F60\u4E0D\u4E86\u89E3\u7684\u7684-promise-async-await",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u4F60\u4E0D\u4E86\u89E3\u7684\u7684-promise-async-await","aria-hidden":"true"},"#"),s(" \u4F60\u4E0D\u4E86\u89E3\u7684\u7684 promise/async await")],-1),k={class:"table-of-contents"},d=i(`<h3 id="_1-\u65E9\u671F\u5F02\u6B65\u4EE3\u7801\u56F0\u5883" tabindex="-1"><a class="header-anchor" href="#_1-\u65E9\u671F\u5F02\u6B65\u4EE3\u7801\u56F0\u5883" aria-hidden="true">#</a> 1. \u65E9\u671F\u5F02\u6B65\u4EE3\u7801\u56F0\u5883</h3><div class="custom-container tip"><p class="custom-container-title"></p><p>\u4F17\u6240\u5468\u77E5\uFF0Cjs \u662F\u5355\u7EBF\u7A0B\u7684\uFF0C\u8017\u65F6\u64CD\u4F5C\u90FD\u662F\u4EA4\u7ED9\u6D4F\u89C8\u5668\u6765\u5904\u7406\uFF0C\u7B49\u65F6\u95F4\u5230\u4E86\u4ECE\u961F\u5217\u4E2D\u53D6\u51FA\u6267\u884C\uFF0C\u8BBE\u8BA1\u5230\u4E8B\u4EF6\u5FAA\u73AF\u7684\u6982\u5FF5\uFF0C\u7B14\u8005\u4E5F\u5206\u4EAB\u8FC7\uFF0C\u53EF\u4EE5\u770B\u4EE5\u4E0B\uFF0C\u7406\u89E3\u4E86\u53EF\u4EE5\u66F4\u597D\u7684\u7406\u89E3 promise\u3002 \u6211\u4EE5\u4E00\u4E2A\u9700\u6C42\u4E3A\u5207\u5165\u70B9\uFF0C\u6211\u6A21\u62DF\u7F51\u7EDC\u8BF7\u6C42(\u5F02\u6B65\u64CD\u4F5C)</p><p>\u5982\u679C\u7F51\u7EDC\u8BF7\u6C42\u6210\u529F\u4E86\uFF0C\u4F60\u544A\u77E5\u6211\u6210\u529F\u4E86</p><p>\u5982\u679C\u7F51\u7EDC\u8BF7\u6C42\u5931\u8D25\u4E86\uFF0C\u4F60\u544A\u77E5\u6211\u5931\u8D25\u4E86</p></div><h4 id="_1-1-\u5927\u806A\u660E\u505A\u6CD5" tabindex="-1"><a class="header-anchor" href="#_1-1-\u5927\u806A\u660E\u505A\u6CD5" aria-hidden="true">#</a> 1.1 \u5927\u806A\u660E\u505A\u6CD5</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">requestData</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>url <span class="token operator">===</span> <span class="token string">&quot;iceweb.io&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token string">&quot;\u8BF7\u6C42\u6210\u529F&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token string">&quot;\u8BF7\u6C42\u5931\u8D25&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">requestData</span><span class="token punctuation">(</span><span class="token string">&quot;iceweb.io&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u9996\u5148\u4F60\u8981\u7406\u89E3 js \u4EE3\u7801\u7684\u6267\u884C\u987A\u5E8F\uFF0C\u800C\u4E0D\u662F\u662F\u60F3\u5F53\u7136\u7684\uFF0C\u4EE3\u7801\u5176\u5B9E\u5E76\u4E0D\u662F\u6309\u7167\u4F60\u4E66\u5199\u7684\u987A\u5E8F\u6267\u884C\u7684\u3002</li><li>\u90A3\u4E48\u4E3A\u4EC0\u4E48\u662F undefined \u5462\uFF1F <ul><li>\u9996\u5148\u5F53\u6211\u6267\u884C requestData \u51FD\u6570\uFF0C\u5F00\u59CB\u6267\u884C\u51FD\u6570\u3002\u9047\u5230\u4E86\u5F02\u6B65\u64CD\u4F5C\u4E0D\u4F1A\u963B\u585E\u540E\u9762\u4EE3\u7801\u6267\u884C\u7684\uFF0C\u56E0\u4E3A js \u662F\u5355\u7EBF\u7A0B\u7684\uFF0C\u6240\u4EE5\u4F60\u5199\u7684 return \u6210\u529F\u6216\u8005\u5931\u8D25\u5E76\u6CA1\u6709\u8FD4\u56DE\uFF0C\u90A3\u6211\u8FD9\u4E2A\u51FD\u6570\u4E2D\uFF0C\u629B\u5F00\u5F02\u6B65\u64CD\u4F5C\uFF0C\u91CC\u9762\u5E76\u6CA1\u6709\u8FD4\u56DE\u503C\uFF0C\u6240\u4EE5\u503C\u4E3A undefined\u3002</li></ul></li></ul><h4 id="_2-2-\u65E9\u671F\u6B63\u786E\u505A\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-2-\u65E9\u671F\u6B63\u786E\u505A\u6CD5" aria-hidden="true">#</a> 2.2 \u65E9\u671F\u6B63\u786E\u505A\u6CD5</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">requestData</span><span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> successCB<span class="token punctuation">,</span> failureCB</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>url <span class="token operator">===</span> <span class="token string">&quot;iceweb.io&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">successCB</span><span class="token punctuation">(</span><span class="token string">&quot;\u6211\u6210\u529F\u4E86,\u628A\u83B7\u53D6\u5230\u7684\u6570\u636E\u4F20\u51FA\u53BB&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;ice&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">22</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">failureCB</span><span class="token punctuation">(</span><span class="token string">&quot;url\u9519\u8BEF\uFF0C\u8BF7\u6C42\u5931\u8D25&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//3s\u540E \u56DE\u8C03successCB</span>
<span class="token comment">//\u6211\u6210\u529F\u4E86,\u628A\u83B7\u53D6\u5230\u7684\u6570\u636E\u4F20\u51FA\u53BB [ { name: &#39;ice&#39;, age: 22 } ]</span>
<span class="token function">requestData</span><span class="token punctuation">(</span>
  <span class="token string">&quot;iceweb.io&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">res<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">rej</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>rej<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//3s\u540E\u56DE\u8C03failureCB</span>
<span class="token comment">//url\u9519\u8BEF\uFF0C\u8BF7\u6C42\u5931\u8D25</span>
<span class="token function">requestData</span><span class="token punctuation">(</span>
  <span class="token string">&quot;icexxx.io&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">rej</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>rej<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u65E9\u671F\u89E3\u51B3\u65B9\u6848\u90FD\u662F\u4F20\u5165\u4E24\u4E2A\u56DE\u8C03\uFF0C\u4E00\u4E2A\u5931\u8D25\u7684\uFF0C\u4E00\u4E2A\u6210\u529F\u7684\u3002\u90A3\u5F88\u591A\u5F00\u53D1\u8005\u4F1A\u95EE\u8FD9\u4E0D\u662F\u633A\u597D\u7684\u5417\uFF1F\u633A\u7B80\u5355\u7684\uFF0Cjs \u4E2D\u51FD\u6570\u662F\u4E00\u7B49\u516C\u6C11\uFF0C\u53EF\u4EE5\u4F20\u6765\u4F20\u53BB\uFF0C\u4F46\u662F\u8FD9\u6837\u592A\u7075\u6D3B\u4E86\uFF0C\u6CA1\u6709\u89C4\u8303\u3002</li><li>\u5982\u679C\u4F7F\u7528\u7684\u662F\u6846\u67B6\uFF0C\u8FD8\u8981\u9605\u8BFB\u4E00\u4E0B\u6846\u67B6\u6E90\u7801\uFF0C\u6B63\u786E\u5931\u8D25\u7684\u4F20\u5B9E\u53C2\u7684\u987A\u5E8F\uFF0C\u5982\u679C\u4F20\u53C2\u987A\u5E8F\u9519\u8BEF\u8FD9\u6837\u662F\u975E\u5E38\u5371\u9669\u7684\u3002</li></ul><h3 id="_2-promise" tabindex="-1"><a class="header-anchor" href="#_2-promise" aria-hidden="true">#</a> 2. Promise</h3><ul><li>Promise(\u627F\u8BFA)\uFF0C\u7ED9\u4E88\u8C03\u7528\u8005\u4E00\u4E2A\u627F\u8BFA\uFF0C\u8FC7\u4E00\u4F1A\u8FD4\u56DE\u6570\u636E\u7ED9\u4F60\uFF0C\u5C31\u53EF\u4EE5\u521B\u5EFA\u4E00\u4E2A promise \u5BF9\u8C61</li><li>\u5F53\u6211\u4EEC new \u4E00\u4E2A promise\uFF0C\u6B64\u65F6\u6211\u4EEC\u9700\u8981\u4F20\u9012\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570\uFF0C\u8FD9\u4E2A\u51FD\u6570\u4E3A\u7ACB\u5373\u6267\u884C\u7684\uFF0C\u79F0\u4E4B\u4E3A\uFF08executor\uFF09</li><li>\u8FD9\u4E2A\u56DE\u8C03\u51FD\u6570\uFF0C\u6211\u4EEC\u9700\u8981\u4F20\u5165\u4E24\u4E2A\u53C2\u6570\u56DE\u8C03\u51FD\u6570\uFF0Creslove,reject(\u51FD\u6570\u53EF\u4EE5\u8FDB\u884C\u4F20\u53C2)</li><li>\u5F53\u6267\u884C\u4E86 reslove \u51FD\u6570\uFF0C\u4F1A\u56DE\u8C03 promise \u5BF9\u8C61\u7684.then \u51FD\u6570</li><li>\u5F53\u6267\u884C\u4E86 reject \u51FD\u6570\uFF0C\u4F1A\u56DE\u8C03 promise \u5BF9\u8C61\u7684.catche \u51FD\u6570</li></ul><h4 id="_2-1-executor-\u7ACB\u5373\u6267\u884C" tabindex="-1"><a class="header-anchor" href="#_2-1-executor-\u7ACB\u5373\u6267\u884C" aria-hidden="true">#</a> 2.1 Executor \u7ACB\u5373\u6267\u884C</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">executor \u7ACB\u5373\u6267\u884C</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u4F20\u5165\u7684 executor \u662F\u7ACB\u5373\u6267\u884C\u7684</li></ul><h4 id="_2-2-requestdata-\u91CD\u6784" tabindex="-1"><a class="header-anchor" href="#_2-2-requestdata-\u91CD\u6784" aria-hidden="true">#</a> 2.2 requestData \u91CD\u6784</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">requestData</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>url <span class="token operator">===</span> <span class="token string">&quot;iceweb.io&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u53EA\u80FD\u4F20\u9012\u4E00\u4E2A\u53C2\u6570</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;\u6211\u6210\u529F\u4E86,\u628A\u83B7\u53D6\u5230\u7684\u6570\u636E\u4F20\u51FA\u53BB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;url\u9519\u8BEF\uFF0C\u8BF7\u6C42\u5931\u8D25&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//1. \u8BF7\u6C42\u6210\u529F</span>
<span class="token function">requestData</span><span class="token punctuation">(</span><span class="token string">&quot;iceweb.io&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">//\u6211\u6210\u529F\u4E86,\u628A\u83B7\u53D6\u5230\u7684\u6570\u636E\u4F20\u51FA\u53BB</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//2. \u8BF7\u6C42\u5931\u8D25</span>

<span class="token comment">//2.2 \u7B2C\u4E00\u79CD\u5199\u6CD5</span>
<span class="token comment">//url\u9519\u8BEF\uFF0C\u8BF7\u6C42\u5931\u8D25</span>
<span class="token function">requestData</span><span class="token punctuation">(</span><span class="token string">&quot;iceweb.org&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">rej</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>rej<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//2.2 \u7B2C\u4E8C\u79CD\u5199\u6CD5</span>
<span class="token comment">//url\u9519\u8BEF\uFF0C\u8BF7\u6C42\u5931\u8D25</span>
<span class="token function">requestData</span><span class="token punctuation">(</span><span class="token string">&quot;iceweb.org&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>\u5728\u51FD\u6570\u4E2D\uFF0Cnew \u8FD9\u4E2A\u7C7B\u7684\u65F6\u5019\uFF0C\u4F20\u5165\u7684\u56DE\u8C03\u51FD\u6570\u79F0\u4E4B\u4E3A executor\uFF08\u4F1A\u88AB Promise \u7C7B\u4E2D\u81EA\u52A8\u6267\u884C\uFF09</p></li><li><p>\u5728\u6B63\u786E\u7684\u65F6\u5019\u8C03\u7528 resolve \u51FD\u6570\uFF0C\u5931\u8D25\u7684\u65F6\u5019\u8C03\u7528 reject \u51FD\u6570\uFF0C\u628A\u9700\u8981\u7684\u53C2\u6570\u4F20\u9012\u51FA\u53BB\u3002</p></li><li><p>\u5F02\u5E38\u5904\u7406</p><ul><li>\u5176\u4E2D\u5728.then \u65B9\u6CD5\u4E2D\u53EF\u4EE5\u4F20\u5165\u4E24\u4E2A\u56DE\u8C03\uFF0C\u60A8\u4E5F\u53EF\u4EE5\u67E5\u770B Promise/A+\u89C4\u8303</li><li>\u7B2C\u4E00\u4E2A\u5219\u662F fulfilled \u7684\u56DE\u8C03</li><li>\u7B2C\u4E8C\u4E2A\u5219\u662F rejected \u7684\u56DE\u8C03</li></ul></li><li><p>\u90A3\u8FD9\u6837\u6709\u4EC0\u4E48\u597D\u5904\u5462\uFF1F \u770B\u8D77\u6765\u6BD4\u65E9\u671F\u5904\u7406\u7684\u65B9\u6848\u8FD8\u8981\u7E41\u7410\u5462?</p><ul><li>\u7EDF\u4E00\u89C4\u8303\uFF0C\u53EF\u4EE5\u589E\u5F3A\u9605\u8BFB\u6027\u548C\u6269\u5C55\u6027</li><li>\u5C0F\u5E45\u5EA6\u51CF\u5C11\u56DE\u8C03\u5730\u72F1</li></ul></li></ul><h4 id="_2-3-promise-\u7684\u72B6\u6001" tabindex="-1"><a class="header-anchor" href="#_2-3-promise-\u7684\u72B6\u6001" aria-hidden="true">#</a> 2.3 promise \u7684\u72B6\u6001</h4><ul><li><p>\u9996\u5148\u5148\u7ED9\u5927\u5BB6\u4E3E\u4E2A\u6817\u5B50\uFF0C\u628A\u4EE3\u7801\u62BD\u8C61\u4E3A\u73B0\u5B9E\u7684\u6817\u5B50</p><ul><li>\u4F60\u7B54\u5E94\u4F60\u5973\u670B\u53CB\uFF0C\u4E0B\u5468\u672B\u5E26\u5979\u53BB\u5403\u597D\u5403\u7684 (\u8FD8\u672A\u5230\u4E0B\u5468\u672B\uFF0C\u6B64\u65F6\u72B6\u6001\u4E3A\u5F85\u5B9A\u72B6\u6001)</li><li>\u65F6\u95F4\u98DE\u5FEB\uFF0C\u4ECA\u5929\u5C31\u662F\u5468\u672B\u4E86\uFF0C\u4F60\u548C\u4F60\u5973\u53CB\u4E00\u8D77\u5403\u4E86\u70E4\u8089\u3001\u751C\u70B9\u3001\u5976\u8336...\uFF08\u5DF2\u5151\u73B0\u72B6\u6001\uFF09</li><li>\u65F6\u95F4\u98DE\u5FEB\uFF0C\u4ECA\u5929\u5C31\u662F\u5468\u672B\u4E86\uFF0C\u6B63\u6253\u7B97\u51FA\u95E8\u3002\u4E0D\u5DE7\u4EA7\u54C1\u7ECF\u7406\uFF0C\u56E0\u4E3A\u7EBF\u4E0A\u51FA\u73B0\u7684\u7D27\u6025\u95EE\u9898\uFF0C\u9700\u8981\u56DE\u516C\u53F8\u89E3\u51B3\u4E00\u4E0B\uFF0C\u4F60(\u4E3A\u4E86\u751F\u6D3B)\u53EA\u80FD\u59D4\u5A49\u7684\u62D2\u7EDD\u4E00\u4E0B\u5973\u53CB\uFF0C\u5E76\u4E14\u8BF4\u660E\u4E00\u4E0B\u7F18\u7531(\u5DF2\u62D2\u7EDD\u72B6\u6001)</li></ul></li><li><p>\u4F7F\u7528 promise \u7684\u65F6\u5019\uFF0C\u7ED9\u5B83\u4E00\u4E2A\u627F\u8BFA\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5C06\u4ED6\u5212\u5206\u4E3A\u4E09\u4E2A\u9636\u6BB5</p><ul><li>pending(\u5F85\u5B9A)\uFF0C\u6267\u884C\u4E86 executor\uFF0C\u72B6\u6001\u8FD8\u5728\u7B49\u5F85\u4E2D\uFF0C\u6CA1\u6709\u88AB\u5151\u73B0\uFF0C\u4E5F\u6CA1\u6709\u88AB\u62D2\u7EDD</li><li>fulfilled(\u5DF2\u5151\u73B0)\uFF0C\u6267\u884C\u4E86 resolve \u51FD\u6570\u5219\u4EE3\u8868\u4E86\u5DF2\u5151\u73B0\u72B6\u6001</li><li>rejected(\u5DF2\u62D2\u7EDD)\uFF0C\u6267\u884C\u4E86 reject \u51FD\u6570\u5219\u4EE3\u8868\u4E86\u5DF2\u62D2\u7EDD\u72B6\u6001</li></ul></li><li><p>\u9996\u5148\uFF0C\u72B6\u6001\u53EA\u8981\u4ECE\u5F85\u5B9A\u72B6\u6001\uFF0C\u53D8\u4E3A\u5176\u4ED6\u72B6\u6001\uFF0C\u5219\u72B6\u6001\u4E0D\u80FD\u518D\u6539\u53D8</p></li></ul><p>\u601D\u8003\u4EE5\u4E0B\u4EE3\u7801:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;\u5931\u8D25&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;\u6210\u529F&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u5931\u8D25</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u6211\u8C03\u7528 reject \u4E4B\u540E\uFF0C\u5728\u8C03\u7528 resolve \u662F\u65E0\u6548\u7684\uFF0C\u56E0\u4E3A\u72B6\u6001\u5DF2\u7ECF\u53D1\u751F\u6539\u53D8\uFF0C\u5E76\u4E14\u662F\u4E0D\u53EF\u9006\u7684\u3002</p><h4 id="_2-4-resolve-\u4E0D\u540C\u503C\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#_2-4-resolve-\u4E0D\u540C\u503C\u7684\u533A\u522B" aria-hidden="true">#</a> 2.4 resolve \u4E0D\u540C\u503C\u7684\u533A\u522B</h4><p>\u5982\u679C resolve \u4F20\u5165\u4E00\u4E2A\u666E\u901A\u7684\u503C\u6216\u8005\u5BF9\u8C61\uFF0C\u53EA\u80FD\u4F20\u9012\u63A5\u53D7\u4E00\u4E2A\u53C2\u6570\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u503C\u4F1A\u4F5C\u4E3A then \u56DE\u8C03\u7684\u53C2\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;ice&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">22</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// {name: &#39;ice&#39;, age: 22}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C resolve \u4E2D\u4F20\u5165\u7684\u662F\u53E6\u5916\u4E00\u4E2A Promise\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u65B0 Promise \u4F1A\u51B3\u5B9A\u539F Promise \u7684\u72B6\u6001</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span>
    <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;ice&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//3s\u540E ice</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C resolve \u4E2D\u4F20\u5165\u7684\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5E76\u4E14\u8FD9\u4E2A\u5BF9\u8C61\u6709\u5B9E\u73B0 then \u65B9\u6CD5\uFF0C\u90A3\u4E48\u4F1A\u6267\u884C\u8BE5 then \u65B9\u6CD5\uFF0Cthen \u65B9\u6CD5\u4F1A\u4F20\u5165 resolve\uFF0Creject \u51FD\u6570\u3002\u6B64\u65F6\u7684 promise \u72B6\u6001\u53D6\u51B3\u4E8E\u4F60\u8C03\u7528\u4E86 resolve\uFF0C\u8FD8\u662F reject \u51FD\u6570\u3002\u8FD9\u79CD\u6A21\u5F0F\u4E5F\u79F0\u4E4B\u4E3A: thenable</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res<span class="token punctuation">,</span> rej</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">res</span><span class="token punctuation">(</span><span class="token string">&quot;hi ice&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// hi ice</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-5-promise-\u7684\u5B9E\u4F8B\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-5-promise-\u7684\u5B9E\u4F8B\u65B9\u6CD5" aria-hidden="true">#</a> 2.5 Promise \u7684\u5B9E\u4F8B\u65B9\u6CD5</h4><p>\u5B9E\u4F8B\u65B9\u6CD5\uFF0C\u5B58\u653E\u5728 Promise.prototype \u4E0A\u7684\u65B9\u6CD5\uFF0C\u4E5F\u5C31\u662F Promise \u7684\u663E\u793A\u539F\u578B\u4E0A\uFF0C\u5F53\u6211 new Promise \u7684\u65F6\u5019\uFF0C\u4F1A\u628A\u8FD4\u56DE\u7684\u6539\u5BF9\u8C61\u7684 promise[[prototype]]\uFF08\u9690\u5F0F\u539F\u578B\uFF09 === Promise.prototype (\u663E\u793A\u539F\u578B) \u5373 new \u8FD4\u56DE\u7684\u5BF9\u8C61\u7684\u9690\u5F0F\u539F\u578B\u6307\u5411\u4E86 Promise \u7684\u663E\u793A\u539F\u578B</p><h5 id="_2-5-1-then-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-5-1-then-\u65B9\u6CD5" aria-hidden="true">#</a> 2.5.1 then \u65B9\u6CD5</h5><p>2.5.1.1 then \u7684\u53C2\u6570</p><p>then \u65B9\u6CD5\u53EF\u4EE5\u63A5\u53D7\u53C2\u6570\uFF0C\u4E00\u4E2A\u53C2\u6570\u4E3A\u6210\u529F\u7684\u56DE\u8C03\uFF0C\u53E6\u4E00\u4E2A\u53C2\u6570\u4E3A\u5931\u8D25\u7684\u56DE\u8C03\uFF0C\u524D\u9762\u91CD\u6784 requestData \u4E2D\u6709\u6F14\u7EC3\u8FC7\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;request success&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// reject(&#39;request error&#39;)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">rej</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>rej<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//request success</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u53EA\u6355\u83B7\u9519\u8BEF\uFF0C\u8FD8\u53EF\u4EE5\u8FD9\u6837\u5199</p><p>\u56E0\u4E3A\u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F\u6355\u83B7\u5F02\u5E38\u7684\uFF0C\u7B2C\u4E00\u4E2A\u53EF\u4EE5\u5199\u4E2A null \u6216&quot;&quot;\u5360\u4F4D</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// resolve(&#39;request success&#39;)</span>
  <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;request error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">rej</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>rej<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//request error</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-5-1-2-then-\u7684\u591A\u6B21\u8C03\u7528" tabindex="-1"><a class="header-anchor" href="#_2-5-1-2-then-\u7684\u591A\u6B21\u8C03\u7528" aria-hidden="true">#</a> 2.5.1.2 then \u7684\u591A\u6B21\u8C03\u7528</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;hi ice&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8C03\u7528\u591A\u6B21\u5219\u4F1A\u6267\u884C\u591A\u6B21</p><h5 id="_2-5-1-3-then-\u7684\u8FD4\u56DE\u503C" tabindex="-1"><a class="header-anchor" href="#_2-5-1-3-then-\u7684\u8FD4\u56DE\u503C" aria-hidden="true">#</a> 2.5.1.3 then \u7684\u8FD4\u56DE\u503C</h5><p>then \u65B9\u6CD5\u662F\u6709\u8FD4\u56DE\u503C\u7684\uFF0C\u5B83\u7684\u8FD4\u56DE\u503C\u662F promise\uFF0C\u4F46\u662F\u662F promise \u90A3\u5B83\u7684\u72B6\u6001\u5982\u4F55\u51B3\u5B9A\u5462\uFF1F\u63A5\u4E0B\u6765\u8BA9\u6211\u4EEC\u4E00\u63A2\u7A76\u7ADF\u3002</p><h6 id="_2-5-1-3-1-\u8FD4\u56DE\u4E00\u4E2A\u666E\u901A\u503C-\u72B6\u6001-fulfilled" tabindex="-1"><a class="header-anchor" href="#_2-5-1-3-1-\u8FD4\u56DE\u4E00\u4E2A\u666E\u901A\u503C-\u72B6\u6001-fulfilled" aria-hidden="true">#</a> 2.5.1.3.1 \u8FD4\u56DE\u4E00\u4E2A\u666E\u901A\u503C \u72B6\u6001:fulfilled</h6><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;hi ice&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

promise
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;ice&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">22</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//{name:&#39;ice&#39;, age:22}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD4\u56DE\u4E00\u4E2A\u666E\u901A\u503C\uFF0C\u5219\u76F8\u5F53\u4E8E\u4E3B\u52A8\u8C03\u7528 Promise.resolve\uFF0C\u5E76\u4E14\u628A\u8FD4\u56DE\u503C\u4F5C\u4E3A\u5B9E\u53C2\u4F20\u9012\u5230 then \u65B9\u6CD5\u4E2D\u3002 \u5982\u679C\u6CA1\u6709\u8FD4\u56DE\u503C\uFF0C\u5219\u76F8\u5F53\u4E8E\u8FD4\u56DE undefined</p><h6 id="_2-5-1-3-2-\u660E\u786E\u8FD4\u56DE\u4E00\u4E2A-promise-\u72B6\u6001-fulfilled" tabindex="-1"><a class="header-anchor" href="#_2-5-1-3-2-\u660E\u786E\u8FD4\u56DE\u4E00\u4E2A-promise-\u72B6\u6001-fulfilled" aria-hidden="true">#</a> 2.5.1.3.2 \u660E\u786E\u8FD4\u56DE\u4E00\u4E2A promise \u72B6\u6001:fulfilled</h6><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;hi ice&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

promise
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;then \u7684\u8FD4\u56DE\u503C&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//then \u7684\u8FD4\u56DE\u503C</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E3B\u52A8\u8FD4\u56DE\u4E00\u4E2A promise \u5BF9\u8C61\uFF0C\u72B6\u6001\u548C\u4F60\u8C03\u7528 resolve\uFF0C\u8FD8\u662F reject \u6709\u5173</p><h5 id="_2-5-1-3-3-\u8FD4\u56DE\u4E00\u4E2A-thenable-\u5BF9\u8C61-\u72B6\u6001-fulfilled" tabindex="-1"><a class="header-anchor" href="#_2-5-1-3-3-\u8FD4\u56DE\u4E00\u4E2A-thenable-\u5BF9\u8C61-\u72B6\u6001-fulfilled" aria-hidden="true">#</a> 2.5.1.3.3 \u8FD4\u56DE\u4E00\u4E2A thenable \u5BF9\u8C61 \u72B6\u6001\uFF1Afulfilled</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;hi ice&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

promise
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;hi webice&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//hi webice</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD4\u56DE\u4E86\u4E00\u4E2A thenable \u5BF9\u8C61\uFF0C\u5176\u72B6\u6001\u53D6\u51B3\u4E8E\u4F60\u662F\u8C03\u7528\u4E86 resolve,\u8FD8\u662F reject</p><h4 id="_2-5-2-catch-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-5-2-catch-\u65B9\u6CD5" aria-hidden="true">#</a> 2.5.2 catch \u65B9\u6CD5</h4><h5 id="_2-5-2-1-catch-\u7684\u591A\u6B21\u8C03\u7528" tabindex="-1"><a class="header-anchor" href="#_2-5-2-1-catch-\u7684\u591A\u6B21\u8C03\u7528" aria-hidden="true">#</a> 2.5.2.1 catch \u7684\u591A\u6B21\u8C03\u7528</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;ice error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

promise<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
promise<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
promise<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//ice error</span>
<span class="token comment">//ice error</span>
<span class="token comment">//ice error</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-5-2-2-catch-\u7684\u8FD4\u56DE\u503C" tabindex="-1"><a class="header-anchor" href="#_2-5-2-2-catch-\u7684\u8FD4\u56DE\u503C" aria-hidden="true">#</a> 2.5.2.2 catch \u7684\u8FD4\u56DE\u503C</h5><p>catch \u65B9\u6CD5\u662F\u6709\u8FD4\u56DE\u503C\u7684\uFF0C\u5B83\u7684\u8FD4\u56DE\u503C\u662F promise\uFF0C\u4F46\u662F\u662F promise \u90A3\u5B83\u7684\u72B6\u6001\u5982\u4F55\u51B3\u5B9A\u5462\uFF1F\u63A5\u4E0B\u6765\u8BA9\u6211\u4EEC\u4E00\u63A2\u7A76\u7ADF\u3002 \u5982\u679C\u8FD4\u56DE\u503C\u660E\u786E\u4E00\u4E2A promise \u6216\u8005 thenble \u5BF9\u8C61\uFF0C\u53D6\u51B3\u4E8E\u4F60\u8C03\u7528\u4E86 resolve \u8FD8\u662F reject</p><h6 id="_2-5-2-2-1-\u8FD4\u56DE\u4E00\u4E2A\u666E\u901A\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#_2-5-2-2-1-\u8FD4\u56DE\u4E00\u4E2A\u666E\u901A\u5BF9\u8C61" aria-hidden="true">#</a> 2.5.2.2.1 \u8FD4\u56DE\u4E00\u4E2A\u666E\u901A\u5BF9\u8C61</h6><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;ice error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

promise
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;ice&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">22</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//{name:&#39;ice&#39;, age: 22}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="_2-5-2-2-2-\u660E\u786E\u8FD4\u56DE\u4E00\u4E2A-promise" tabindex="-1"><a class="header-anchor" href="#_2-5-2-2-2-\u660E\u786E\u8FD4\u56DE\u4E00\u4E2A-promise" aria-hidden="true">#</a> 2.5.2.2.2 \u660E\u786E\u8FD4\u56DE\u4E00\u4E2A promise</h6><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;ice error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

promise
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;ice error promise&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//ice error promise</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B64\u65F6 new Promise() \u8C03\u7528\u4E86 reject \u51FD\u6570\uFF0C\u5219\u4F1A\u88AB catch \u6355\u83B7\u5230</p><h6 id="_2-5-2-2-3-\u8FD4\u56DE-thenble-\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#_2-5-2-2-3-\u8FD4\u56DE-thenble-\u5BF9\u8C61" aria-hidden="true">#</a> 2.5.2.2.3 \u8FD4\u56DE thenble \u5BF9\u8C61</h6><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;ice error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

promise
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;ice error then&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>//ice error then</p><h5 id="_2-5-3-finally-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-5-3-finally-\u65B9\u6CD5" aria-hidden="true">#</a> 2.5.3 finally \u65B9\u6CD5</h5><p>ES9\uFF082018\uFF09\u65B0\u5B9E\u4F8B\u65B9\u6CD5 finally(\u6700\u540E)\uFF0C\u65E0\u8BBA promise \u72B6\u6001\u662F fulfilled \u8FD8\u662F rejected \u90FD\u4F1A\u6267\u884C\u4E00\u6B21 finally \u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;hi ice&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

promise
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;finally execute&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//finally execute</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-6-promise-\u4E2D\u7684\u7C7B\u65B9\u6CD5-\u9759\u6001\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-6-promise-\u4E2D\u7684\u7C7B\u65B9\u6CD5-\u9759\u6001\u65B9\u6CD5" aria-hidden="true">#</a> 2.6 Promise \u4E2D\u7684\u7C7B\u65B9\u6CD5/\u9759\u6001\u65B9\u6CD5</h4><h5 id="_2-6-1-promise-reslove" tabindex="-1"><a class="header-anchor" href="#_2-6-1-promise-reslove" aria-hidden="true">#</a> 2.6.1 Promise.reslove</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;ice&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u7B49\u4EF7\u4E8E</span>
<span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;ice&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6709\u7684\u65F6\u5019\uFF0C\u4F60\u5DF2\u7ECF\u9884\u77E5\u4E86\u72B6\u6001\u7684\u7ED3\u679C\u4E3A fulfilled\uFF0C\u5219\u53EF\u4EE5\u7528\u8FD9\u79CD\u7B80\u5199\u65B9\u5F0F</p><h5 id="_2-6-2-promise-reject" tabindex="-1"><a class="header-anchor" href="#_2-6-2-promise-reject" aria-hidden="true">#</a> 2.6.2 Promise.reject</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;ice error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u7B49\u4EF7\u4E8E</span>
<span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;ice error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6709\u7684\u65F6\u5019\uFF0C\u4F60\u5DF2\u7ECF\u9884\u77E5\u4E86\u72B6\u6001\u7684\u7ED3\u679C\u4E3A rejected\uFF0C\u5219\u53EF\u4EE5\u7528\u8FD9\u79CD\u7B80\u5199\u65B9\u5F0F</p><h5 id="_2-6-3-promise-all" tabindex="-1"><a class="header-anchor" href="#_2-6-3-promise-all" aria-hidden="true">#</a> 2.6.3 Promise.all</h5><p>fulfilled \u72B6\u6001</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;hi ice&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> promise2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;hi panda&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> promise3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;hi grizzly&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>promise1<span class="token punctuation">,</span> promise2<span class="token punctuation">,</span> promise3<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//[ &#39;hi ice&#39;, &#39;hi panda&#39;, &#39;hi grizzly&#39; ]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>all \u65B9\u6CD5\u7684\u53C2\u6570\u4F20\u5165\u4E3A\u4E00\u4E2A\u53EF\u8FED\u4EE3\u5BF9\u8C61\uFF0C\u8FD4\u56DE\u4E00\u4E2A promise\uFF0C\u53EA\u6709\u4E09\u4E2A\u90FD\u4E3A resolve \u72B6\u6001\u7684\u65F6\u5019\u624D\u4F1A\u8C03\u7528.then \u65B9\u6CD5\u3002 \u53EA\u8981\u6709\u4E00\u4E2A promise \u7684\u72B6\u6001\u4E3A rejected\uFF0C\u5219\u4F1A\u56DE\u8C03.catch \u65B9\u6CD5</p><p>rejected \u72B6\u6001</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;hi ice&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> promise2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;hi panda&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> promise3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;hi grizzly&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>promise1<span class="token punctuation">,</span> promise2<span class="token punctuation">,</span> promise3<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//hi panda</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u9047\u5230 rejectd \u7684\u65F6\u5019\uFF0C\u540E\u7EED\u7684 promise \u7ED3\u679C\u6211\u4EEC\u662F\u83B7\u53D6\u4E0D\u5230\uFF0C\u5E76\u4E14\u4F1A\u628A reject \u7684\u5B9E\u53C2\uFF0C\u4F20\u9012\u7ED9 catch \u7684 err \u5F62\u53C2\u4E2D</p><h5 id="_2-6-4-promise-allsettled" tabindex="-1"><a class="header-anchor" href="#_2-6-4-promise-allsettled" aria-hidden="true">#</a> 2.6.4 Promise.allSettled</h5><p>\u4E0A\u9762\u7684 Promise.all \u6709\u4E00\u4E2A\u7F3A\u9677\uFF0C\u5C31\u662F\u5F53\u9047\u5230\u4E00\u4E2A rejected \u7684\u72B6\u6001\uFF0C\u90A3\u4E48\u5BF9\u4E8E\u540E\u9762\u662F resolve \u6216\u8005 reject \u7684\u7ED3\u679C\u6211\u4EEC\u662F\u62FF\u4E0D\u5230\u7684 ES11 \u65B0\u589E\u8BED\u6CD5 Promise.allSettled\uFF0C\u65E0\u8BBA\u72B6\u6001\u662F fulfilled/rejected \u90FD\u4F1A\u628A\u53C2\u6570\u8FD4\u56DE\u7ED9\u6211\u4EEC</p><p>\u6240\u6709 promise \u90FD\u6709\u7ED3\u679C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;hi ice&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> promise2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;hi panda&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> promise3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;hi grizzly&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">allSettled</span><span class="token punctuation">(</span><span class="token punctuation">[</span>promise1<span class="token punctuation">,</span> promise2<span class="token punctuation">,</span> promise3<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">/* [
  { status: &#39;rejected&#39;, reason: &#39;hi ice&#39; },
  { status: &#39;fulfilled&#39;, value: &#39;hi panda&#39; },
  { status: &#39;rejected&#39;, reason: &#39;hi grizzly&#39; }
] */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BE5\u65B9\u6CD5\u4F1A\u5728\u6240\u6709\u7684 Promise \u90FD\u6709\u7ED3\u679C\uFF0C\u65E0\u8BBA\u662F fulfilled\uFF0C\u8FD8\u662F rejected\uFF0C\u624D\u4F1A\u6709\u6700\u7EC8\u7684\u7ED3\u679C</p><p>\u5176\u4E2D\u4E00\u4E2A promise \u6CA1\u6709\u7ED3\u679C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;hi ice&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> promise2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;hi panda&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> promise3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">allSettled</span><span class="token punctuation">(</span><span class="token punctuation">[</span>promise1<span class="token punctuation">,</span> promise2<span class="token punctuation">,</span> promise3<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u4EC0\u4E48\u90FD\u4E0D\u6253\u5370</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2D\u4E00\u4E2A promise \u6CA1\u6709\u7ED3\u679C\uFF0C\u5219\u4EC0\u4E48\u90FD\u7ED3\u679C\u90FD\u62FF\u4E0D\u5230</p><h5 id="_2-6-5-promise-race" tabindex="-1"><a class="header-anchor" href="#_2-6-5-promise-race" aria-hidden="true">#</a> 2.6.5 Promise.race</h5><p>race(\u7ADE\u4E89\u7ADE\u8D5B) \u4F18\u5148\u83B7\u53D6\u7B2C\u4E00\u4E2A\u8FD4\u56DE\u7684\u7ED3\u679C\uFF0C\u65E0\u8BBA\u7ED3\u679C\u662F fulfilled \u8FD8\u662F rejectd</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;hi error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> promise2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;hi panda&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span>promise1<span class="token punctuation">,</span> promise2<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//hi error</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-6-6-promise-any" tabindex="-1"><a class="header-anchor" href="#_2-6-6-promise-any" aria-hidden="true">#</a> 2.6.6 Promise.any</h5><p>\u4E0E race \u7C7B\u4F3C\uFF0C\u53EA\u83B7\u53D6\u7B2C\u4E00\u4E2A\u72B6\u6001\u4E3A fulfilled\uFF0C\u5982\u679C\u5168\u90E8\u4E3A rejected \u5219\u62A5\u9519 AggregateError</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;hi error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> promise2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;hi panda&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">[</span>promise1<span class="token punctuation">,</span> promise2<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//hi panda</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-promise\u7684\u56DE\u8C03\u5730\u72F1-\u8FDB\u9636" tabindex="-1"><a class="header-anchor" href="#_3-promise\u7684\u56DE\u8C03\u5730\u72F1-\u8FDB\u9636" aria-hidden="true">#</a> 3. Promise\u7684\u56DE\u8C03\u5730\u72F1 (\u8FDB\u9636)</h3><p>\u6211\u8FD8\u662F\u4EE5\u4E00\u4E2A\u9700\u6C42\u4F5C\u4E3A\u5207\u5165\u70B9\uFF0C\u628A\u77E5\u8BC6\u70B9\u56BC\u788E\u4E86\uFF0C\u4E00\u70B9\u4E00\u70B9\u5582\u8FDB\u4F60\u4EEC\u5634\u91CC\u3002</p><p>\u5F53\u6211\u53D1\u9001\u7F51\u7EDC\u8BF7\u6C42\u7684\u65F6\u5019\uFF0C\u9700\u8981\u62FF\u5230\u8FD9\u6B21\u7F51\u7EDC\u8BF7\u6C42\u7684\u6570\u636E\uFF0C\u518D\u53D1\u9001\u7F51\u7EDC\u8BF7\u6C42\uFF0C\u5C31\u8FD9\u6837\u91CD\u590D\u4E09\u6B21\uFF0C\u624D\u80FD\u62FF\u5230\u6211\u6700\u7EC8\u7684\u7ED3\u679C\u3002</p><h4 id="_3-1-\u5367\u9F99\u89E3\u6CD5" tabindex="-1"><a class="header-anchor" href="#_3-1-\u5367\u9F99\u89E3\u6CD5" aria-hidden="true">#</a> 3.1 \u5367\u9F99\u89E3\u6CD5</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">requestData</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;iceweb&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;\u8BF7\u6C42\u9519\u8BEF&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>


<span class="token function">requestData</span><span class="token punctuation">(</span><span class="token string">&#39;iceweb.io&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">requestData</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">iceweb.org </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>res<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">requestData</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">iceweb.com </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>res<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">//iceweb.com iceweb.org iceweb.io</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u867D\u7136\u80FD\u591F\u5B9E\u73B0\uFF0C\u4F46\u662F\u591A\u5C42\u4EE3\u7801\u7684\u5D4C\u5957\uFF0C\u53EF\u8BFB\u6027\u975E\u5E38\u5DEE\uFF0C\u6211\u4EEC\u628A\u8FD9\u79CD\u591A\u5C42\u6B21\u4EE3\u7801\u5D4C\u5957\u79F0\u4E4B\u4E3A\u56DE\u8C03\u5730\u72F1</p><h4 id="_3-2-\u51E4\u96CF\u89E3\u6CD5" tabindex="-1"><a class="header-anchor" href="#_3-2-\u51E4\u96CF\u89E3\u6CD5" aria-hidden="true">#</a> 3.2 \u51E4\u96CF\u89E3\u6CD5</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">requestData</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;iceweb&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;\u8BF7\u6C42\u9519\u8BEF&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">requestData</span><span class="token punctuation">(</span><span class="token string">&#39;iceweb.io&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">requestData</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">iceweb.org </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>res<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">requestData</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">iceweb.com </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>res<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">//iceweb.com iceweb.org iceweb.io</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5229\u7528\u4E86then\u94FE\u5F0F\u8C03\u7528\u8FD9\u4E00\u7279\u6027\uFF0C\u8FD4\u56DE\u4E86\u4E00\u4E2A\u65B0\u7684promise\uFF0C\u4F46\u662F\u4E0D\u591F\u4F18\u96C5\uFF0C\u601D\u8003\u4E00\u4E0B\u80FD\u4E0D\u80FD\u5199\u6210\u540C\u6B65\u7684\u65B9\u5F0F\u5462\uFF1F</p><h4 id="_3-3-\u751F\u6210\u5668-promise\u89E3\u6CD5" tabindex="-1"><a class="header-anchor" href="#_3-3-\u751F\u6210\u5668-promise\u89E3\u6CD5" aria-hidden="true">#</a> 3.3 \u751F\u6210\u5668+Promise\u89E3\u6CD5</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">requestData</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;iceweb&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;\u8BF7\u6C42\u9519\u8BEF&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">getData</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> res1 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">requestData</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
  <span class="token keyword">const</span> res2 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">requestData</span><span class="token punctuation">(</span>res1<span class="token punctuation">)</span>
  <span class="token keyword">const</span> res3 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">requestData</span><span class="token punctuation">(</span>res2<span class="token punctuation">)</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res3<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> generator <span class="token operator">=</span> <span class="token function">getData</span><span class="token punctuation">(</span><span class="token string">&#39;iceweb.io&#39;</span><span class="token punctuation">)</span>

generator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res1</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  generator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">iceweb.org </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>res1<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res2</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    generator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">iceweb.com </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>res2<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res3</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      generator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>res3<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">//iceweb.com iceweb.org iceweb.io</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5927\u5BB6\u53EF\u4EE5\u53D1\u73B0\u6211\u4EEC\u7684getData\u5DF2\u7ECF\u53D8\u4E3A\u540C\u6B65\u7684\u5F62\u5F0F\uFF0C\u53EF\u4EE5\u62FF\u5230\u6211\u6700\u7EC8\u7684\u7ED3\u679C\u4E86\u3002\u90A3\u4E48\u5F88\u591A\u540C\u5B66\u4F1A\u95EE\uFF0Cgenerator\u4E00\u76F4\u8C03\u7528.next\u4E0D\u662F\u4E5F\u4EA7\u751F\u4E86\u56DE\u8C03\u5730\u72F1\u5417\uFF1F \u5176\u5B9E\u4E0D\u7528\u5173\u5FC3\u8FD9\u4E2A\uFF0C\u6211\u4EEC\u53EF\u4EE5\u53D1\u73B0\u5B83\u8FD9\u4E2A\u662F\u6709\u89C4\u5F8B\u7684\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5C01\u88C5\u6210\u4E00\u4E2A\u81EA\u52A8\u5316\u6267\u884C\u7684\u51FD\u6570\uFF0C\u6211\u4EEC\u5C31\u4E0D\u7528\u5173\u5FC3\u5185\u90E8\u662F\u5982\u4F55\u8C03\u7528\u7684\u4E86\u3002</p><h4 id="_3-4-\u81EA\u52A8\u5316\u6267\u884C\u51FD\u6570\u5C01\u88C5" tabindex="-1"><a class="header-anchor" href="#_3-4-\u81EA\u52A8\u5316\u6267\u884C\u51FD\u6570\u5C01\u88C5" aria-hidden="true">#</a> 3.4 \u81EA\u52A8\u5316\u6267\u884C\u51FD\u6570\u5C01\u88C5</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">requestData</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;iceweb&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;\u8BF7\u6C42\u9519\u8BEF&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> res1 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">requestData</span><span class="token punctuation">(</span><span class="token string">&#39;iceweb.io&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> res2 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">requestData</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">iceweb.org </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>res1<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> res3 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">requestData</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">iceweb.com </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>res2<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res3<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u81EA\u52A8\u5316\u6267\u884C async await\u76F8\u5F53\u4E8E\u81EA\u52A8\u5E2E\u6211\u4EEC\u6267\u884C.next</span>
<span class="token keyword">function</span> <span class="token function">asyncAutomation</span><span class="token punctuation">(</span><span class="token parameter">genFn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> generator <span class="token operator">=</span> <span class="token function">genFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> <span class="token function-variable function">_automation</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> nextData <span class="token operator">=</span> generator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>nextData<span class="token punctuation">.</span>done<span class="token punctuation">)</span> <span class="token keyword">return</span>

    nextData<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">_automation</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token function">_automation</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">asyncAutomation</span><span class="token punctuation">(</span>getData<span class="token punctuation">)</span>

<span class="token comment">//iceweb.com iceweb.org iceweb.io</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5229\u7528promise+\u751F\u6210\u5668\u7684\u65B9\u5F0F\u53D8\u76F8\u5B9E\u73B0\u89E3\u51B3\u56DE\u8C03\u5730\u72F1\u95EE\u9898\uFF0C\u5176\u5B9E\u5C31\u662Fasync await\u7684\u4E00\u4E2A\u53D8\u79CD\u800C\u5DF2 \u6700\u65E9\u4E3ATJ\u5B9E\u73B0\uFF0C\u524D\u7AEF\u5927\u795E\u4EBA\u7269 async await\u6838\u5FC3\u4EE3\u7801\u5C31\u7C7B\u4F3C\u8FD9\u4E9B\uFF0C\u5185\u90E8\u4E3B\u52A8\u5E2E\u6211\u4EEC\u8C03\u7528.next\u65B9\u6CD5</p><h4 id="_3-5-\u6700\u7EC8\u89E3\u51B3\u56DE\u8C03\u5730\u72F1\u7684\u529E\u6CD5" tabindex="-1"><a class="header-anchor" href="#_3-5-\u6700\u7EC8\u89E3\u51B3\u56DE\u8C03\u5730\u72F1\u7684\u529E\u6CD5" aria-hidden="true">#</a> 3.5 \u6700\u7EC8\u89E3\u51B3\u56DE\u8C03\u5730\u72F1\u7684\u529E\u6CD5</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">requestData</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;iceweb&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;\u8BF7\u6C42\u9519\u8BEF&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> res1 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">requestData</span><span class="token punctuation">(</span><span class="token string">&#39;iceweb.io&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> res2 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">requestData</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">iceweb.org </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>res1<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> res3 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">requestData</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">iceweb.com </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>res2<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res3<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">//iceweb.com iceweb.org iceweb.io</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F60\u4F1A\u60CA\u5947\u7684\u53D1\u73B0\uFF0C\u53EA\u8981\u628AgetData\u751F\u6210\u5668\u51FD\u6570\u51FD\u6570\uFF0C\u6539\u4E3Aasync\u51FD\u6570\uFF0Cyeild\u7684\u5173\u952E\u5B57\u66FF\u6362\u4E3Aawait\u5C31\u53EF\u4EE5\u5B9E\u73B0\u5F02\u6B65\u4EE3\u7801\u540C\u6B65\u5199\u6CD5\u4E86\u3002</p><h3 id="_4-async-await-\u5256\u6790" tabindex="-1"><a class="header-anchor" href="#_4-async-await-\u5256\u6790" aria-hidden="true">#</a> 4. async/await \u5256\u6790</h3><p>async\uFF08\u5F02\u6B65\u7684\uFF09 async \u7528\u4E8E\u7533\u660E\u4E00\u4E2A\u5F02\u6B65\u51FD\u6570</p><h4 id="_4-1-async\u5185\u90E8\u4EE3\u7801\u540C\u6B65\u6267\u884C" tabindex="-1"><a class="header-anchor" href="#_4-1-async\u5185\u90E8\u4EE3\u7801\u540C\u6B65\u6267\u884C" aria-hidden="true">#</a> 4.1 async\u5185\u90E8\u4EE3\u7801\u540C\u6B65\u6267\u884C</h4><p>\u5F02\u6B65\u51FD\u6570\u7684\u5185\u90E8\u4EE3\u7801\u6267\u884C\u8FC7\u7A0B\u548C\u666E\u901A\u7684\u51FD\u6570\u662F\u4E00\u81F4\u7684\uFF0C\u9ED8\u8BA4\u60C5\u51B5\u4E0B\u4E5F\u662F\u4F1A\u88AB\u540C\u6B65\u6267\u884C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hi ice&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">//hi ice</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-2-\u5F02\u6B65\u51FD\u6570\u7684\u8FD4\u56DE\u503C" tabindex="-1"><a class="header-anchor" href="#_4-2-\u5F02\u6B65\u51FD\u6570\u7684\u8FD4\u56DE\u503C" aria-hidden="true">#</a> 4.2 \u5F02\u6B65\u51FD\u6570\u7684\u8FD4\u56DE\u503C</h4><p>\u5F02\u6B65\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u548C\u666E\u901A\u8FD4\u56DE\u503C\u6709\u6240\u533A\u522B</p><p>\u666E\u901A\u51FD\u6570\u4E3B\u52A8\u8FD4\u56DE\u4EC0\u4E48\u5C31\u8FD4\u56DE\u4EC0\u4E48\uFF0C\u4E0D\u8FD4\u56DE\u4E3Aundefined \u5F02\u6B65\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u7279\u70B9</p><p>\u660E\u786E\u6709\u8FD4\u56DE\u4E00\u4E2A\u666E\u901A\u503C\uFF0C\u76F8\u5F53\u4E8EPromise.resolve(\u8FD4\u56DE\u503C) \u8FD4\u56DE\u4E00\u4E2Athenble\u5BF9\u8C61\u5219\u7531\uFF0Cthen\u65B9\u6CD5\u4E2D\u7684resolve,\u6216\u8005reject\u6709\u5173 \u660E\u786E\u8FD4\u56DE\u4E00\u4E2Apromise\uFF0C\u5219\u7531\u8FD9\u4E2Apromise\u51B3\u5B9A</p><p>\u5F02\u6B65\u51FD\u6570\u4E2D\u53EF\u4EE5\u4F7F\u7528await\u5173\u952E\u5B57\uFF0C\u73B0\u5728\u5728\u5168\u5C40\u4E5F\u53EF\u4EE5\u8FDB\u884Cawait\uFF0C\u4F46\u662F\u4E0D\u63A8\u8350\u3002\u4F1A\u963B\u585E\u4E3B\u8FDB\u7A0B\u7684\u4EE3\u7801\u6267\u884C</p><h4 id="_4-3-\u5F02\u6B65\u51FD\u6570\u7684\u5F02\u5E38\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#_4-3-\u5F02\u6B65\u51FD\u6570\u7684\u5F02\u5E38\u5904\u7406" aria-hidden="true">#</a> 4.3 \u5F02\u6B65\u51FD\u6570\u7684\u5F02\u5E38\u5904\u7406</h4><p>\u5982\u679C\u51FD\u6570\u5185\u90E8\u4E2D\u9014\u53D1\u751F\u9519\u8BEF\uFF0C\u53EF\u4EE5\u901A\u8FC7try catch\u7684\u65B9\u5F0F\u6355\u83B7\u5F02\u5E38 \u5982\u679C\u51FD\u6570\u5185\u90E8\u4E2D\u9014\u53D1\u751F\u9519\u8BEF\uFF0C\u4E5F\u53EF\u4EE5\u901A\u8FC7\u51FD\u6570\u7684\u8FD4\u56DE\u503C.catch\u8FDB\u884C\u6355\u83B7</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">e</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">//\u6216\u8005</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">//ReferenceError: res is not defined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-4-await-\u5173\u952E\u5B57" tabindex="-1"><a class="header-anchor" href="#_4-4-await-\u5173\u952E\u5B57" aria-hidden="true">#</a> 4.4 await \u5173\u952E\u5B57</h4><p>\u5F02\u6B65\u51FD\u6570\u4E2D\u53EF\u4EE5\u4F7F\u7528await\u5173\u952E\u5B57\uFF0C\u666E\u901A\u51FD\u6570\u4E0D\u884C await\u7279\u70B9</p><p>\u901A\u5E38await\u5173\u952E\u5B57\u540E\u9762\u90FD\u662F\u8DDF\u4E00\u4E2APromise</p><p>\u53EF\u4EE5\u662F\u666E\u901A\u503C \u53EF\u4EE5\u662Fthenble \u53EF\u4EE5\u662FPromise\u4E3B\u52A8\u8C03\u7528resolve\u6216\u8005reject</p><p>\u8FD9\u4E2Apromise\u72B6\u6001\u53D8\u4E3Afulfilled\u624D\u4F1A\u6267\u884Cawait\u540E\u7EED\u7684\u4EE3\u7801\uFF0C\u6240\u4EE5await\u540E\u9762\u7684\u4EE3\u7801\uFF0C\u76F8\u5F53\u4E8E\u5305\u62EC\u5728.then\u65B9\u6CD5\u7684\u56DE\u8C03\u4E2D\uFF0C\u5982\u679C\u72B6\u6001\u53D8\u4E3Arejected\uFF0C\u4F60\u5219\u9700\u8981\u5728\u51FD\u6570\u5185\u90E8try catch\uFF0C\u6216\u8005\u8FDB\u884C\u94FE\u5F0F\u8C03\u7528\u8FDB\u884C.catch\u64CD\u4F5C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">requestData</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;iceweb&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;\u8BF7\u6C42\u9519\u8BEF&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">requestData</span><span class="token punctuation">(</span><span class="token string">&#39;iceweb.io&#39;</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// iceweb.io</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,132);function v(m,b){const a=u("router-link");return o(),c("div",null,[r,n("nav",k,[n("ul",null,[n("li",null,[t(a,{to:"#_1-\u65E9\u671F\u5F02\u6B65\u4EE3\u7801\u56F0\u5883"},{default:p(()=>[s("1. \u65E9\u671F\u5F02\u6B65\u4EE3\u7801\u56F0\u5883")]),_:1})]),n("li",null,[t(a,{to:"#_2-promise"},{default:p(()=>[s("2. Promise")]),_:1})]),n("li",null,[t(a,{to:"#_3-promise\u7684\u56DE\u8C03\u5730\u72F1-\u8FDB\u9636"},{default:p(()=>[s("3. Promise\u7684\u56DE\u8C03\u5730\u72F1 (\u8FDB\u9636)")]),_:1})]),n("li",null,[t(a,{to:"#_4-async-await-\u5256\u6790"},{default:p(()=>[s("4. async/await \u5256\u6790")]),_:1})])])]),d])}var h=e(l,[["render",v],["__file","promise_Asnyc.html.vue"]]);export{h as default};
