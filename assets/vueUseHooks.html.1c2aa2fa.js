import{_ as p,o,c,a as n,e as t,w as e,d as s,b as u,r as l}from"./app.e16a8a63.js";const i={},r=n("h1",{id:"vueuse-\u5E38\u7528\u7684-hooks-\u672A\u5199\u5B8C-\u66F4\u65B0\u4E2D",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#vueuse-\u5E38\u7528\u7684-hooks-\u672A\u5199\u5B8C-\u66F4\u65B0\u4E2D","aria-hidden":"true"},"#"),s(" vueUse \u5E38\u7528\u7684 hooks \u672A\u5199\u5B8C \u66F4\u65B0\u4E2D")],-1),k={class:"table-of-contents"},d=u(`<h2 id="state" tabindex="-1"><a class="header-anchor" href="#state" aria-hidden="true">#</a> state</h2><h3 id="createglobalstate-\u5C06\u72B6\u6001\u4FDD\u5B58\u5168\u5C40\u4F5C\u7528\u57DF\u4E2D-\u4EE5\u4FBF\u8DE8-vue-\u5B9E\u4F8B\u590D\u7528\u3002" tabindex="-1"><a class="header-anchor" href="#createglobalstate-\u5C06\u72B6\u6001\u4FDD\u5B58\u5168\u5C40\u4F5C\u7528\u57DF\u4E2D-\u4EE5\u4FBF\u8DE8-vue-\u5B9E\u4F8B\u590D\u7528\u3002" aria-hidden="true">#</a> createGlobalState \u5C06\u72B6\u6001\u4FDD\u5B58\u5168\u5C40\u4F5C\u7528\u57DF\u4E2D\uFF0C\u4EE5\u4FBF\u8DE8 Vue \u5B9E\u4F8B\u590D\u7528\u3002</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// store.js</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> computed<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> createGlobalState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@vueuse/core&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> useGlobalState <span class="token operator">=</span> <span class="token function">createGlobalState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// state</span>
  <span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// getters</span>
  <span class="token keyword">const</span> doubleCount <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> count<span class="token punctuation">.</span>value <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// actions</span>
  <span class="token keyword">function</span> <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    count<span class="token punctuation">.</span>value<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span> count<span class="token punctuation">,</span> doubleCount<span class="token punctuation">,</span> increment <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// component.js</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useGlobalState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./store&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token function">useGlobalState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span> state <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="createinjectionstate-\u521B\u5EFA\u53EF\u4EE5\u6CE8\u5165\u5230\u7EC4\u4EF6\u4E2D\u7684\u5168\u5C40\u72B6\u6001\u3002" tabindex="-1"><a class="header-anchor" href="#createinjectionstate-\u521B\u5EFA\u53EF\u4EE5\u6CE8\u5165\u5230\u7EC4\u4EF6\u4E2D\u7684\u5168\u5C40\u72B6\u6001\u3002" aria-hidden="true">#</a> createInjectionState \u521B\u5EFA\u53EF\u4EE5\u6CE8\u5165\u5230\u7EC4\u4EF6\u4E2D\u7684\u5168\u5C40\u72B6\u6001\u3002</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// useCounterStore.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> computed<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue-demi&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> createInjectionState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@vueuse/shared&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token punctuation">[</span>useProvideCounterStore<span class="token punctuation">,</span> useCounterStore<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">createInjectionState</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">initialValue</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// state</span>
    <span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span>initialValue<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// getters</span>
    <span class="token keyword">const</span> double <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> count<span class="token punctuation">.</span>value <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// actions</span>
    <span class="token keyword">function</span> <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      count<span class="token punctuation">.</span>value<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token punctuation">{</span> count<span class="token punctuation">,</span> double<span class="token punctuation">,</span> increment <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token punctuation">{</span> useProvideCounterStore <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// If you want to hide \`useCounterStore\` and wrap it in default value logic or throw error logic, please don&#39;t export \`useCounterStore\`</span>
<span class="token keyword">export</span> <span class="token punctuation">{</span> useCounterStore <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">useCounterStoreWithDefaultValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token function">useCounterStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">??</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token literal-property property">double</span><span class="token operator">:</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function-variable function">increment</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">useCounterStoreOrThrow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> counterStore <span class="token operator">=</span> <span class="token function">useCounterStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>counterStore <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>
      <span class="token string">&quot;Please call \`useProvideCounterStore\` on the appropriate parent component&quot;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> counterStore<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7EC4\u4EF6\u4E2D\u7684\u7528\u6CD5</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token comment">&lt;!-- RootComponent.vue --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> useProvideCounterStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./useCounterStore&quot;</span><span class="token punctuation">;</span>

<span class="token function">useProvideCounterStore</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- CountComponent.vue --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> useCounterStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./useCounterStore&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> count<span class="token punctuation">,</span> double <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useCounterStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>count: {{ count }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>double: {{ double }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- ButtonComponent.vue --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> useCounterStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./useCounterStore&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// use non-null assertion operator to ignore the case that store is not provided.</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> increment <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useCounterStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>increment<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>+<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="useasyncstate-\u54CD\u5E94\u5F0F\u83B7\u53D6\u5F02\u6B65\u72B6\u6001\u3002\u4E0D\u4F1A\u963B\u585E-setup-\u51FD\u6570-\u5728-promise-\u5B8C\u6210\u540E-\u5C06\u81EA\u52A8\u89E6\u53D1\u3002" tabindex="-1"><a class="header-anchor" href="#useasyncstate-\u54CD\u5E94\u5F0F\u83B7\u53D6\u5F02\u6B65\u72B6\u6001\u3002\u4E0D\u4F1A\u963B\u585E-setup-\u51FD\u6570-\u5728-promise-\u5B8C\u6210\u540E-\u5C06\u81EA\u52A8\u89E6\u53D1\u3002" aria-hidden="true">#</a> useAsyncState \u54CD\u5E94\u5F0F\u83B7\u53D6\u5F02\u6B65\u72B6\u6001\u3002\u4E0D\u4F1A\u963B\u585E setup \u51FD\u6570\uFF0C\u5728 promise \u5B8C\u6210\u540E\uFF0C\u5C06\u81EA\u52A8\u89E6\u53D1\u3002</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&quot;axios&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useAsyncState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@vueuse/core&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> state<span class="token punctuation">,</span> isReady<span class="token punctuation">,</span> isLoading <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useAsyncState</span><span class="token punctuation">(</span>
  axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;https://jsonplaceholder.typicode.com/todos/1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> t<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token keyword">null</span> <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="usedebouncedrefhistory-userefhistory-\u7684\u7B80\u5199-\u5E26\u6709\u9632\u6296\u8FC7\u6EE4\u5668\u3002-\u5F53\u8BA1\u6570\u5668\u7684\u503C\u5F00\u59CB\u6539\u53D8\u65F6-\u8BE5\u51FD\u6570\u4F1A\u5728-1000ms-\u540E\u5BF9\u8BA1\u6570\u5668\u4FDD\u5B58\u5FEB\u7167\u3002" tabindex="-1"><a class="header-anchor" href="#usedebouncedrefhistory-userefhistory-\u7684\u7B80\u5199-\u5E26\u6709\u9632\u6296\u8FC7\u6EE4\u5668\u3002-\u5F53\u8BA1\u6570\u5668\u7684\u503C\u5F00\u59CB\u6539\u53D8\u65F6-\u8BE5\u51FD\u6570\u4F1A\u5728-1000ms-\u540E\u5BF9\u8BA1\u6570\u5668\u4FDD\u5B58\u5FEB\u7167\u3002" aria-hidden="true">#</a> useDebouncedRefHistory useRefHistory \u7684\u7B80\u5199\uFF0C\u5E26\u6709\u9632\u6296\u8FC7\u6EE4\u5668\u3002 \u5F53\u8BA1\u6570\u5668\u7684\u503C\u5F00\u59CB\u6539\u53D8\u65F6\uFF0C\u8BE5\u51FD\u6570\u4F1A\u5728 1000ms \u540E\u5BF9\u8BA1\u6570\u5668\u4FDD\u5B58\u5FEB\u7167\u3002</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useDebouncedRefHistory <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@vueuse/core&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> counter <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> history<span class="token punctuation">,</span> undo<span class="token punctuation">,</span> redo <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useDebouncedRefHistory</span><span class="token punctuation">(</span>counter<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">deep</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">debounce</span><span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="uselastchanged-\u8BB0\u5F55\u6700\u540E\u4E00\u6B21\u66F4\u6539\u7684\u65F6\u95F4\u6233" tabindex="-1"><a class="header-anchor" href="#uselastchanged-\u8BB0\u5F55\u6700\u540E\u4E00\u6B21\u66F4\u6539\u7684\u65F6\u95F4\u6233" aria-hidden="true">#</a> useLastChanged \u8BB0\u5F55\u6700\u540E\u4E00\u6B21\u66F4\u6539\u7684\u65F6\u95F4\u6233</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useLastChanged <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@vueuse/core&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> lastChanged <span class="token operator">=</span> <span class="token function">useLastChanged</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>

a<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lastChanged<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13);function v(m,b){const a=l("router-link");return o(),c("div",null,[r,n("nav",k,[n("ul",null,[n("li",null,[t(a,{to:"#state"},{default:e(()=>[s("state")]),_:1}),n("ul",null,[n("li",null,[t(a,{to:"#createglobalstate-\u5C06\u72B6\u6001\u4FDD\u5B58\u5168\u5C40\u4F5C\u7528\u57DF\u4E2D-\u4EE5\u4FBF\u8DE8-vue-\u5B9E\u4F8B\u590D\u7528\u3002"},{default:e(()=>[s("createGlobalState \u5C06\u72B6\u6001\u4FDD\u5B58\u5168\u5C40\u4F5C\u7528\u57DF\u4E2D\uFF0C\u4EE5\u4FBF\u8DE8 Vue \u5B9E\u4F8B\u590D\u7528\u3002")]),_:1})]),n("li",null,[t(a,{to:"#createinjectionstate-\u521B\u5EFA\u53EF\u4EE5\u6CE8\u5165\u5230\u7EC4\u4EF6\u4E2D\u7684\u5168\u5C40\u72B6\u6001\u3002"},{default:e(()=>[s("createInjectionState \u521B\u5EFA\u53EF\u4EE5\u6CE8\u5165\u5230\u7EC4\u4EF6\u4E2D\u7684\u5168\u5C40\u72B6\u6001\u3002")]),_:1})]),n("li",null,[t(a,{to:"#useasyncstate-\u54CD\u5E94\u5F0F\u83B7\u53D6\u5F02\u6B65\u72B6\u6001\u3002\u4E0D\u4F1A\u963B\u585E-setup-\u51FD\u6570-\u5728-promise-\u5B8C\u6210\u540E-\u5C06\u81EA\u52A8\u89E6\u53D1\u3002"},{default:e(()=>[s("useAsyncState \u54CD\u5E94\u5F0F\u83B7\u53D6\u5F02\u6B65\u72B6\u6001\u3002\u4E0D\u4F1A\u963B\u585E setup \u51FD\u6570\uFF0C\u5728 promise \u5B8C\u6210\u540E\uFF0C\u5C06\u81EA\u52A8\u89E6\u53D1\u3002")]),_:1})]),n("li",null,[t(a,{to:"#usedebouncedrefhistory-userefhistory-\u7684\u7B80\u5199-\u5E26\u6709\u9632\u6296\u8FC7\u6EE4\u5668\u3002-\u5F53\u8BA1\u6570\u5668\u7684\u503C\u5F00\u59CB\u6539\u53D8\u65F6-\u8BE5\u51FD\u6570\u4F1A\u5728-1000ms-\u540E\u5BF9\u8BA1\u6570\u5668\u4FDD\u5B58\u5FEB\u7167\u3002"},{default:e(()=>[s("useDebouncedRefHistory useRefHistory \u7684\u7B80\u5199\uFF0C\u5E26\u6709\u9632\u6296\u8FC7\u6EE4\u5668\u3002 \u5F53\u8BA1\u6570\u5668\u7684\u503C\u5F00\u59CB\u6539\u53D8\u65F6\uFF0C\u8BE5\u51FD\u6570\u4F1A\u5728 1000ms \u540E\u5BF9\u8BA1\u6570\u5668\u4FDD\u5B58\u5FEB\u7167\u3002")]),_:1})]),n("li",null,[t(a,{to:"#uselastchanged-\u8BB0\u5F55\u6700\u540E\u4E00\u6B21\u66F4\u6539\u7684\u65F6\u95F4\u6233"},{default:e(()=>[s("useLastChanged \u8BB0\u5F55\u6700\u540E\u4E00\u6B21\u66F4\u6539\u7684\u65F6\u95F4\u6233")]),_:1})])])])])]),d])}var y=p(i,[["render",v],["__file","vueUseHooks.html.vue"]]);export{y as default};
