import{_ as n,o as s,c as a,b as t}from"./app.e16a8a63.js";const p={},e=t(`<h1 id="sort-\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#sort-\u6392\u5E8F" aria-hidden="true">#</a> sort \u6392\u5E8F</h1><nav class="table-of-contents"><ul></ul></nav><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Array<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>sort()\u65B9\u6CD5\u53EF\u4EE5\u4F20\u5165\u4E00\u4E2A\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\uFF0C\u7136\u540E\u4F9D\u636E\u8BE5\u51FD\u6570\u7684\u903B\u8F91\u8FDB\u884C\u6570\u7EC4\u6392\u5E8F</p><p>sort \u65B9\u6CD5\u63A5\u6536\u4E86 \u4E00\u4E2A\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\u65F6\uFF0C\u6392\u5E8F\u4E3B\u8981\u6839\u636E\u4F20\u5165\u7684\u51FD\u6570\u8FD4\u56DE\u503C\u662F\u5426\u5927\u4E8E 0 \u8FDB\u884C\u6392\u5E8F</p><p>1\uFF09\u5F53 A - B &lt; 0 \u65F6\u5219 A \u5143\u7D20\u6392\u5728 B \u5143\u7D20\u524D\u9762<br> 2\uFF09\u5F53 B - A &gt; 0 \u65F6\u5219 B \u5143\u7D20\u6392\u5728 A \u5143\u7D20\u524D\u9762<br> 3\uFF09\u5F53 A - B = 0 \u65F6\u5219\u5143\u7D20\u672A\u77E5\u4E0D\u53D8<br></p><p>\u770B\u4F8B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>data<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>id <span class="token operator">&gt;</span> b<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>id <span class="token operator">&lt;</span> b<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F8B 2</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>data<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>surname <span class="token operator">+</span> a<span class="token punctuation">.</span>name <span class="token operator">+</span> a<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">localCompare</span><span class="token punctuation">(</span>
    b<span class="token punctuation">.</span>usename <span class="token operator">+</span> b<span class="token punctuation">.</span>name <span class="token operator">+</span> b<span class="token punctuation">.</span>address
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),o=[e];function c(u,i){return s(),a("div",null,o)}var r=n(p,[["render",c],["__file","sort.html.vue"]]);export{r as default};
