import{_ as e,o,c,a as n,e as p,w as t,d as s,b as l,r as u}from"./app.e16a8a63.js";const i={},r=n("h1",{id:"\u5E38\u7528\u7684-js-\u5DE5\u5177\u51FD\u6570\u65B9\u6CD5",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5E38\u7528\u7684-js-\u5DE5\u5177\u51FD\u6570\u65B9\u6CD5","aria-hidden":"true"},"#"),s(" \u5E38\u7528\u7684 js \u5DE5\u5177\u51FD\u6570\u65B9\u6CD5")],-1),k={class:"table-of-contents"},d=l(`<p>\u544A\u522B\u641C\u7D22\u5F15\u64CE\u7684\u5E2E\u52A9\uFF0C\u63D0\u9AD8\u4F60\u7684\u5F00\u53D1\u6548\u7387</p><h3 id="_1-\u90AE\u7BB1" tabindex="-1"><a class="header-anchor" href="#_1-\u90AE\u7BB1" aria-hidden="true">#</a> 1.\u90AE\u7BB1</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isEmail</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((.[a-zA-Z0-9_-]{2,3}){1,2})$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>
    e
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u624B\u673A\u53F7\u7801" tabindex="-1"><a class="header-anchor" href="#_2-\u624B\u673A\u53F7\u7801" aria-hidden="true">#</a> 2.\u624B\u673A\u53F7\u7801</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isMobile</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^1[0-9]{10}$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-\u7535\u8BDD\u53F7\u7801" tabindex="-1"><a class="header-anchor" href="#_3-\u7535\u8BDD\u53F7\u7801" aria-hidden="true">#</a> 3.\u7535\u8BDD\u53F7\u7801</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isPhone</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^([0-9]{3,4}-)?[0-9]{7,8}$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-\u662F\u5426-url-\u5730\u5740" tabindex="-1"><a class="header-anchor" href="#_4-\u662F\u5426-url-\u5730\u5740" aria-hidden="true">#</a> 4.\u662F\u5426 url \u5730\u5740</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isURL</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^http[s]?:\\/\\/.*</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-\u662F\u5426\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#_5-\u662F\u5426\u5B57\u7B26\u4E32" aria-hidden="true">#</a> 5.\u662F\u5426\u5B57\u7B26\u4E32</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isString</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;String&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-\u662F\u5426\u6570\u5B57" tabindex="-1"><a class="header-anchor" href="#_6-\u662F\u5426\u6570\u5B57" aria-hidden="true">#</a> 6.\u662F\u5426\u6570\u5B57</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isNumber</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;Number&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-\u662F\u5426-boolean" tabindex="-1"><a class="header-anchor" href="#_7-\u662F\u5426-boolean" aria-hidden="true">#</a> 7.\u662F\u5426 boolean</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isBoolean</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;Boolean&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-\u662F\u5426\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_8-\u662F\u5426\u51FD\u6570" aria-hidden="true">#</a> 8.\u662F\u5426\u51FD\u6570</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isFunction</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;Function&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_9-\u662F\u5426\u4E3A-null" tabindex="-1"><a class="header-anchor" href="#_9-\u662F\u5426\u4E3A-null" aria-hidden="true">#</a> 9.\u662F\u5426\u4E3A null</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isNull</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;Null&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_10-\u662F\u5426-undefined" tabindex="-1"><a class="header-anchor" href="#_10-\u662F\u5426-undefined" aria-hidden="true">#</a> 10.\u662F\u5426 undefined</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isUndefined</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;Undefined&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_11-\u662F\u5426\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#_11-\u662F\u5426\u5BF9\u8C61" aria-hidden="true">#</a> 11.\u662F\u5426\u5BF9\u8C61</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isObject</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;Object&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_12-\u662F\u5426\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#_12-\u662F\u5426\u6570\u7EC4" aria-hidden="true">#</a> 12.\u662F\u5426\u6570\u7EC4</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isArray</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;Array&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_13-\u662F\u5426\u65F6\u95F4" tabindex="-1"><a class="header-anchor" href="#_13-\u662F\u5426\u65F6\u95F4" aria-hidden="true">#</a> 13.\u662F\u5426\u65F6\u95F4</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isDate</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;Date&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_14-\u662F\u5426\u6B63\u5219" tabindex="-1"><a class="header-anchor" href="#_14-\u662F\u5426\u6B63\u5219" aria-hidden="true">#</a> 14.\u662F\u5426\u6B63\u5219</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isRegExp</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;RegExp&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_15-\u662F\u5426\u9519\u8BEF\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#_15-\u662F\u5426\u9519\u8BEF\u5BF9\u8C61" aria-hidden="true">#</a> 15.\u662F\u5426\u9519\u8BEF\u5BF9\u8C61</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isError</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;Error&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_16-\u662F\u5426-symbol-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_16-\u662F\u5426-symbol-\u51FD\u6570" aria-hidden="true">#</a> 16.\u662F\u5426 Symbol \u51FD\u6570</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isSymbol</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;Symbol&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_17-\u662F\u5426-promise-\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#_17-\u662F\u5426-promise-\u5BF9\u8C61" aria-hidden="true">#</a> 17.\u662F\u5426 Promise \u5BF9\u8C61</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isPromise</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;Promise&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_18-\u662F\u5426-set-\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#_18-\u662F\u5426-set-\u5BF9\u8C61" aria-hidden="true">#</a> 18.\u662F\u5426 Set \u5BF9\u8C61</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isSet</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;Set&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> us <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_19-\u662F\u5426\u662F\u5FAE\u4FE1\u6D4F\u89C8\u5668" tabindex="-1"><a class="header-anchor" href="#_19-\u662F\u5426\u662F\u5FAE\u4FE1\u6D4F\u89C8\u5668" aria-hidden="true">#</a> 19.\u662F\u5426\u662F\u5FAE\u4FE1\u6D4F\u89C8\u5668</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isWeiXin</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> ua<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">microMessenger</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&quot;micromessenger&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_20-\u662F\u5426\u662F\u79FB\u52A8\u7AEF" tabindex="-1"><a class="header-anchor" href="#_20-\u662F\u5426\u662F\u79FB\u52A8\u7AEF" aria-hidden="true">#</a> 20.\u662F\u5426\u662F\u79FB\u52A8\u7AEF</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isDeviceMobile</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">android|webos|iphone|ipod|balckberry</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>ua<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_21-\u662F\u5426\u662F-qq-\u6D4F\u89C8\u5668" tabindex="-1"><a class="header-anchor" href="#_21-\u662F\u5426\u662F-qq-\u6D4F\u89C8\u5668" aria-hidden="true">#</a> 21.\u662F\u5426\u662F QQ \u6D4F\u89C8\u5668</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isQQBrowser</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span>ua<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">mqqbrowser|qzone|qqbrowser|qbwebviewtype</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_22-\u662F\u5426\u662F\u722C\u866B" tabindex="-1"><a class="header-anchor" href="#_22-\u662F\u5426\u662F\u722C\u866B" aria-hidden="true">#</a> 22.\u662F\u5426\u662F\u722C\u866B</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isSpider</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">adsbot|googlebot|bingbot|msnbot|yandexbot|baidubot|robot|careerbot|seznambot|bot|baiduspider|jikespider|symantecspider|scannerlwebcrawler|crawler|360spider|sosospider|sogou web sprider|sougou orion spider</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>
    ua
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_23-\u662F\u5426-ios" tabindex="-1"><a class="header-anchor" href="#_23-\u662F\u5426-ios" aria-hidden="true">#</a> 23.\u662F\u5426 ios</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isIos</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> u <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>u<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;Android&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">||</span> u<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;Linux&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u5B89\u5353\u624B\u673A</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>u<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;iPhone&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u82F9\u679C\u624B\u673A</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>u<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;iPad&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//iPad</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>u<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;windows Phone&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//winphone \u624B\u673A</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_24-\u662F\u5426-pc-\u7AEF" tabindex="-1"><a class="header-anchor" href="#_24-\u662F\u5426-pc-\u7AEF" aria-hidden="true">#</a> 24.\u662F\u5426 PC \u7AEF</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isPC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> userAgentInfo <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">;</span>
  <span class="token keyword">var</span> Agents <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;Android&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;iPhone&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;SymbuanOS&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Windows Phone&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;iPad&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;iPod&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> Agents<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>userAgentInfo<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>Agents<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> flag<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_25-\u53BB\u9664-html-\u6807\u7B7E" tabindex="-1"><a class="header-anchor" href="#_25-\u53BB\u9664-html-\u6807\u7B7E" aria-hidden="true">#</a> 25.\u53BB\u9664 html \u6807\u7B7E</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">removehtmltag</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;[^&gt;]+&gt;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_26-\u83B7\u53D6-url-\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#_26-\u83B7\u53D6-url-\u53C2\u6570" aria-hidden="true">#</a> 26.\u83B7\u53D6 url \u53C2\u6570</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getQueryString</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> reg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&quot;(^|&amp;)&quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&quot;=([^&amp;]*)(&amp;|$)&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;i&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> search <span class="token operator">=</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>search<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;?&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> r <span class="token operator">=</span> search<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>reg<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> r<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_27-\u52A8\u6001\u5F15\u5165-js" tabindex="-1"><a class="header-anchor" href="#_27-\u52A8\u6001\u5F15\u5165-js" aria-hidden="true">#</a> 27.\u52A8\u6001\u5F15\u5165 js</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">injectScript</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">src</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> s <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;script&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  s<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">&quot;text/JavaScript&quot;</span><span class="token punctuation">;</span>
  s<span class="token punctuation">.</span>async <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  s<span class="token punctuation">.</span>src <span class="token operator">=</span> src<span class="token punctuation">;</span>
  <span class="token keyword">const</span> t <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElentsByTagName</span><span class="token punctuation">(</span><span class="token string">&quot;script&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  t<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_28-\u6839\u636E-url-\u5730\u5740\u4E0B\u8F7D" tabindex="-1"><a class="header-anchor" href="#_28-\u6839\u636E-url-\u5730\u5740\u4E0B\u8F7D" aria-hidden="true">#</a> 28.\u6839\u636E url \u5730\u5740\u4E0B\u8F7D</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">download</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> isChrome <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;chrome&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> isSafari <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;safari&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>isChrome <span class="token operator">||</span> isSafari<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> link <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    link<span class="token punctuation">.</span>href <span class="token operator">=</span> url<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>link<span class="token punctuation">.</span>download <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> fileName <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> url<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
      link<span class="token punctuation">.</span>download <span class="token operator">=</span> fileName<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>createEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> e <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createEvent</span><span class="token punctuation">(</span><span class="token string">&quot;MouseEvents&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      e<span class="token punctuation">.</span><span class="token function">initEvent</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      link<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;?&quot;</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    url <span class="token operator">+=</span> <span class="token string">&quot;?download&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token string">&quot;_self&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_29-el-\u662F\u5426\u5305\u542B\u67D0\u4E2A-class" tabindex="-1"><a class="header-anchor" href="#_29-el-\u662F\u5426\u5305\u542B\u67D0\u4E2A-class" aria-hidden="true">#</a> 29.el \u662F\u5426\u5305\u542B\u67D0\u4E2A class</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">hasClass</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> className</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&quot;(^|\\\\s)&quot;</span> <span class="token operator">+</span> className <span class="token operator">+</span> <span class="token string">&quot;(\\\\s|$)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>el<span class="token punctuation">.</span>className<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_30-el-\u6DFB\u52A0\u67D0\u4E2A-class" tabindex="-1"><a class="header-anchor" href="#_30-el-\u6DFB\u52A0\u67D0\u4E2A-class" aria-hidden="true">#</a> 30.el \u6DFB\u52A0\u67D0\u4E2A class</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">addClass</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> className</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hasClass</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> className<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> newClass <span class="token operator">=</span> el<span class="token punctuation">.</span>className<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  newClass<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>className<span class="token punctuation">)</span><span class="token punctuation">;</span>
  el<span class="token punctuation">.</span>className <span class="token operator">=</span> newClass<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_31-el-\u53BB\u9664\u67D0\u4E2A-class" tabindex="-1"><a class="header-anchor" href="#_31-el-\u53BB\u9664\u67D0\u4E2A-class" aria-hidden="true">#</a> 31.el \u53BB\u9664\u67D0\u4E2A class</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> cosnt <span class="token function-variable function">removeClass</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span>className</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">hasClass</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span>className<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&#39;(^|\\\\s)&#39;</span><span class="token operator">+</span>className<span class="token operator">+</span><span class="token string">&#39;(\\\\s|$)&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;g&#39;</span><span class="token punctuation">)</span>
el<span class="token punctuation">.</span>className <span class="token operator">=</span> el<span class="token punctuation">.</span>className<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>reg<span class="token punctuation">,</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_32-\u83B7\u53D6\u6EDA\u52A8\u7684\u5750\u6807" tabindex="-1"><a class="header-anchor" href="#_32-\u83B7\u53D6\u6EDA\u52A8\u7684\u5750\u6807" aria-hidden="true">#</a> 32.\u83B7\u53D6\u6EDA\u52A8\u7684\u5750\u6807</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getScrollPosition</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">el <span class="token operator">=</span> window</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">x</span><span class="token operator">:</span> el<span class="token punctuation">.</span>pageXOffset <span class="token operator">!==</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> el<span class="token punctuation">.</span>pageXOffset <span class="token operator">:</span> el<span class="token punctuation">.</span>scrollLeft<span class="token punctuation">,</span>
  <span class="token literal-property property">y</span><span class="token operator">:</span> el<span class="token punctuation">.</span>pageYOffset <span class="token operator">!==</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> el<span class="token punctuation">.</span>pageYOffset <span class="token operator">:</span> el<span class="token punctuation">.</span>scrollTop<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_33-\u6EDA\u52A8\u5230\u9876\u90E8" tabindex="-1"><a class="header-anchor" href="#_33-\u6EDA\u52A8\u5230\u9876\u90E8" aria-hidden="true">#</a> 33.\u6EDA\u52A8\u5230\u9876\u90E8</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> cosnt <span class="token function-variable function">scrollToTop</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
<span class="token keyword">const</span> c <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollTop <span class="token operator">||</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollTop<span class="token punctuation">;</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>c<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
window<span class="token punctuation">.</span><span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>scrollToTop<span class="token punctuation">)</span><span class="token punctuation">;</span>
window<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>c<span class="token operator">-</span>c<span class="token operator">/</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_34-el-\u662F\u5426\u5728\u89C6\u53E3\u8303\u56F4" tabindex="-1"><a class="header-anchor" href="#_34-el-\u662F\u5426\u5728\u89C6\u53E3\u8303\u56F4" aria-hidden="true">#</a> 34.el \u662F\u5426\u5728\u89C6\u53E3\u8303\u56F4</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">elementIsVisibleInViewport</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span>partiallyVisib <span class="token operator">=</span> <span class="token boolean">false</span></span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
cosnt <span class="token punctuation">{</span>top<span class="token punctuation">,</span>left<span class="token punctuation">,</span>right<span class="token punctuation">,</span>bottom<span class="token punctuation">}</span> <span class="token operator">=</span> el<span class="token punctuation">.</span><span class="token function">getBoundingClienRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span>innerHeight<span class="token punctuation">,</span>innerWidth<span class="token punctuation">}</span> <span class="token operator">=</span> window<span class="token punctuation">;</span>
<span class="token keyword">return</span> partiallyVisible
<span class="token operator">?</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>top <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> top <span class="token operator">&lt;</span> innerHeight<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>bottom <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> bottom <span class="token operator">&lt;</span> innerHeight<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>left <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> left <span class="token operator">&lt;</span> innerWidth<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>right <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> right <span class="token operator">&lt;</span> innerWidth<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> top <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> left <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> bottom <span class="token operator">&lt;=</span> innerHeight <span class="token operator">&amp;&amp;</span> right <span class="token operator">&lt;=</span> innerWidth<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_35-\u6D17\u724C\u7B97\u6CD5\u968F\u673A" tabindex="-1"><a class="header-anchor" href="#_35-\u6D17\u724C\u7B97\u6CD5\u968F\u673A" aria-hidden="true">#</a> 35.\u6D17\u724C\u7B97\u6CD5\u968F\u673A</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">shuffle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
<span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
random<span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
random <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> \\<span class="token operator">*</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span> result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>random<span class="token punctuation">]</span><span class="token punctuation">)</span>
arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>random<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_36-\u62E6\u622A\u7C98\u8D34\u677F" tabindex="-1"><a class="header-anchor" href="#_36-\u62E6\u622A\u7C98\u8D34\u677F" aria-hidden="true">#</a> 36.\u62E6\u622A\u7C98\u8D34\u677F</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">copyTextToClipboard</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> textArea <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;textarea&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  textArea<span class="token punctuation">.</span>style<span class="token punctuation">.</span>background <span class="token operator">=</span> <span class="token string">&quot;transparent&quot;</span><span class="token punctuation">;</span>
  textArea<span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>textArea<span class="token punctuation">)</span><span class="token punctuation">;</span>
  textArea<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> successful <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">execCommand</span><span class="token punctuation">(</span><span class="token string">&quot;copy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Oops, unable to copy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>textArea<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_37-\u5224\u65AD\u7C7B\u578B\u96C6\u5408" tabindex="-1"><a class="header-anchor" href="#_37-\u5224\u65AD\u7C7B\u578B\u96C6\u5408" aria-hidden="true">#</a> 37.\u5224\u65AD\u7C7B\u578B\u96C6\u5408</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">checkStr</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">str<span class="token punctuation">,</span> type</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
<span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">case</span> <span class="token string">&#39;phone&#39;</span><span class="token operator">:</span>
<span class="token comment">//\u624B\u673A\u53F7\u7801</span>
<span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^1[3|4|5|6|7|8|9][0-9]{9}$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token string">&#39;tel&#39;</span><span class="token operator">:</span>
<span class="token comment">//\u5EA7\u673A</span>
<span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(0\\d{2,3}-\\d{7,8})(-\\d{1,4})?$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token string">&#39;card&#39;</span><span class="token operator">:</span>
<span class="token comment">//SFZ</span>
<span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token string">&#39;pwd&#39;</span><span class="token operator">:</span>
<span class="token comment">//\u5BC6\u7801\u4EE5\u5B57\u6BCD\u5F00\u5934\uFF0C\u957F\u5EA6\u57286~18\u4E4B\u95F4\uFF0C\u53EA\u80FD\u5305\u542B\u5B57\u6BCD\u3001\u6570\u5B57\u548C\u4E0B\u5212\u7EBF</span>
<span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z]\\w{5,17}$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
<span class="token keyword">case</span> <span class="token string">&#39;postal&#39;</span><span class="token operator">:</span>
<span class="token comment">//\u90AE\u653F\u7F16\u7801</span>
<span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[1-9]\\d{5}(?!\\d)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token string">&#39;QQ&#39;</span><span class="token operator">:</span>
<span class="token comment">//QQ \u53F7</span>
<span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[1-9][0-9]{4,9}$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token string">&#39;email&#39;</span><span class="token operator">:</span>
<span class="token comment">//\u90AE\u7BB1</span>
<span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[\\w-]+(\\.[\\w-]+)*@[\\w-]+(\\.[\\w-]+)+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token string">&#39;money&#39;</span><span class="token operator">:</span>
<span class="token comment">//\u91D1\u989D(\u5C0F\u6570\u70B9 2 \u4F4D)</span>
<span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\d*(?:\\.\\d{0,2})?$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token string">&#39;URL&#39;</span><span class="token operator">:</span>
<span class="token comment">//\u7F51\u5740</span>
<span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(http|ftp|https):\\/\\/[\\w\\-_]+(\\.[\\w\\-_]+)+([\\w\\-\\.,@?^=%&amp;:/~\\+#]*[\\w\\-\\@?^=%&amp;/~\\+#])?</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
<span class="token keyword">case</span> <span class="token string">&#39;IP&#39;</span><span class="token operator">:</span>
<span class="token comment">//IP</span>
<span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">((?:(?:25[0-5]|2[0-4]\\\\d|[01]?\\\\d?\\\\d)\\\\.){3}(?:25[0-5]|2[0-4]\\\\d|[01]?\\\\d?\\\\d))</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token string">&#39;date&#39;</span><span class="token operator">:</span>
<span class="token comment">//\u65E5\u671F\u65F6\u95F4</span>
<span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(\\d{4})\\-(\\d{2})\\-(\\d{2}) (\\d{2})(?:\\:\\d{2}|:(\\d{2}):(\\d{2}))$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(\\d{4})\\-(\\d{2})\\-(\\d{2})$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token keyword">case</span> <span class="token string">&#39;number&#39;</span><span class="token operator">:</span>
<span class="token comment">//\u6570\u5B57</span>
<span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[0-9]$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token string">&#39;english&#39;</span><span class="token operator">:</span>
<span class="token comment">//\u82F1\u6587</span>
<span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z]+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token string">&#39;chinese&#39;</span><span class="token operator">:</span>
<span class="token comment">//\u4E2D\u6587</span>
<span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[\\\\u4E00-\\\\u9FA5]+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token string">&#39;lower&#39;</span><span class="token operator">:</span>
<span class="token comment">//\u5C0F\u5199</span>
<span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-z]+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token string">&#39;upper&#39;</span><span class="token operator">:</span>
<span class="token comment">//\u5927\u5199</span>
<span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[A-Z]+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token string">&#39;HTML&#39;</span><span class="token operator">:</span>
<span class="token comment">//HTML \u6807\u8BB0</span>
<span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;(&quot;[^&quot;]_&quot;|&#39;[^&#39;]_&#39;|[^&#39;&quot;&gt;])\\*&gt;</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">default</span><span class="token operator">:</span>
<span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_38-\u4E25\u683C\u7684sfz\u6821\u9A8C" tabindex="-1"><a class="header-anchor" href="#_38-\u4E25\u683C\u7684sfz\u6821\u9A8C" aria-hidden="true">#</a> 38.\u4E25\u683C\u7684SFZ\u6821\u9A8C</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isCardID</span> <span class="token operator">=</span><span class="token punctuation">(</span><span class="token parameter">sId</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(^\\d{15}$)|(^\\d{17}(\\d|X|x)$)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>sId<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u4F60\u8F93\u5165\u7684SFZ\u957F\u5EA6\u6216\u683C\u5F0F\u9519\u8BEF&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">return</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
<span class="token comment">//SFZ\u57CE\u5E02</span>
<span class="token keyword">var</span> aCity <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">11</span><span class="token operator">:</span> <span class="token string">&quot;\u5317\u4EAC&quot;</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token operator">:</span> <span class="token string">&quot;\u5929\u6D25&quot;</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token operator">:</span> <span class="token string">&quot;\u6CB3\u5317&quot;</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token operator">:</span> <span class="token string">&quot;\u5C71\u897F&quot;</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token operator">:</span> <span class="token string">&quot;\u5185\u8499\u53E4&quot;</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token operator">:</span> <span class="token string">&quot;\u8FBD\u5B81&quot;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token operator">:</span> <span class="token string">&quot;\u5409\u6797&quot;</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token operator">:</span> <span class="token string">&quot;\u9ED1\u9F99\u6C5F&quot;</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token operator">:</span> <span class="token string">&quot;\u4E0A\u6D77&quot;</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token operator">:</span> <span class="token string">&quot;\u6C5F\u82CF&quot;</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token operator">:</span> <span class="token string">&quot;\u6D59\u6C5F&quot;</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token operator">:</span> <span class="token string">&quot;\u5B89\u5FBD&quot;</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token operator">:</span> <span class="token string">&quot;\u798F\u5EFA&quot;</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token operator">:</span> <span class="token string">&quot;\u6C5F\u897F&quot;</span><span class="token punctuation">,</span> <span class="token number">37</span><span class="token operator">:</span> <span class="token string">&quot;\u5C71\u4E1C&quot;</span><span class="token punctuation">,</span> <span class="token number">41</span><span class="token operator">:</span> <span class="token string">&quot;\u6CB3\u5357&quot;</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token operator">:</span> <span class="token string">&quot;\u6E56\u5317&quot;</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token operator">:</span> <span class="token string">&quot;\u6E56\u5357&quot;</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token operator">:</span> <span class="token string">&quot;\u5E7F\u4E1C&quot;</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token operator">:</span> <span class="token string">&quot;\u5E7F\u897F&quot;</span><span class="token punctuation">,</span> <span class="token number">46</span><span class="token operator">:</span> <span class="token string">&quot;\u6D77\u5357&quot;</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token operator">:</span> <span class="token string">&quot;\u91CD\u5E86&quot;</span><span class="token punctuation">,</span> <span class="token number">51</span><span class="token operator">:</span> <span class="token string">&quot;\u56DB\u5DDD&quot;</span><span class="token punctuation">,</span> <span class="token number">52</span><span class="token operator">:</span> <span class="token string">&quot;\u8D35\u5DDE&quot;</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token operator">:</span> <span class="token string">&quot;\u4E91\u5357&quot;</span><span class="token punctuation">,</span> <span class="token number">54</span><span class="token operator">:</span> <span class="token string">&quot;\u897F\u85CF&quot;</span><span class="token punctuation">,</span> <span class="token number">61</span><span class="token operator">:</span> <span class="token string">&quot;\u9655\u897F&quot;</span><span class="token punctuation">,</span> <span class="token number">62</span><span class="token operator">:</span> <span class="token string">&quot;\u7518\u8083&quot;</span><span class="token punctuation">,</span> <span class="token number">63</span><span class="token operator">:</span> <span class="token string">&quot;\u9752\u6D77&quot;</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token operator">:</span> <span class="token string">&quot;\u5B81\u590F&quot;</span><span class="token punctuation">,</span> <span class="token number">65</span><span class="token operator">:</span> <span class="token string">&quot;\u65B0\u7586&quot;</span><span class="token punctuation">,</span> <span class="token number">71</span><span class="token operator">:</span> <span class="token string">&quot;\u53F0\u6E7E&quot;</span><span class="token punctuation">,</span> <span class="token number">81</span><span class="token operator">:</span> <span class="token string">&quot;\u9999\u6E2F&quot;</span><span class="token punctuation">,</span> <span class="token number">82</span><span class="token operator">:</span> <span class="token string">&quot;\u6FB3\u95E8&quot;</span><span class="token punctuation">,</span> <span class="token number">91</span><span class="token operator">:</span> <span class="token string">&quot;\u56FD\u5916&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>aCity<span class="token punctuation">[</span><span class="token function">parseInt</span><span class="token punctuation">(</span>sId<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u4F60\u7684SFZ\u5730\u533A\u975E\u6CD5&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">return</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u51FA\u751F\u65E5\u671F\u9A8C\u8BC1</span>
<span class="token keyword">var</span> sBirthday <span class="token operator">=</span> <span class="token punctuation">(</span>sId<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;-&quot;</span> <span class="token operator">+</span> <span class="token function">Number</span><span class="token punctuation">(</span>sId<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;-&quot;</span> <span class="token operator">+</span> <span class="token function">Number</span><span class="token punctuation">(</span>sId<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">-</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> d <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>sBirthday<span class="token punctuation">)</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>sBirthday <span class="token operator">!=</span> <span class="token punctuation">(</span>d<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;/&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>d<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;/&quot;</span> <span class="token operator">+</span> d<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;SFZ\u4E0A\u7684\u51FA\u751F\u65E5\u671F\u975E\u6CD5&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">return</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
<span class="token comment">// SFZ\u53F7\u7801\u6821\u9A8C</span>
<span class="token keyword">var</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> weights <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
codes <span class="token operator">=</span> <span class="token string">&quot;10X98765432&quot;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> sId<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
sum <span class="token operator">+=</span> sId<span class="token punctuation">[</span>i<span class="token punctuation">]</span> \\<span class="token operator">*</span> weights<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> last <span class="token operator">=</span> codes<span class="token punctuation">[</span>sum <span class="token operator">%</span> <span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">//\u8BA1\u7B97\u51FA\u6765\u7684\u6700\u540E\u4E00\u4F4DSFZ\u53F7\u7801</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>sId<span class="token punctuation">[</span>sId<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!=</span> last<span class="token punctuation">)</span> <span class="token punctuation">{</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u4F60\u8F93\u5165\u7684SFZ\u53F7\u975E\u6CD5&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">return</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
<span class="token keyword">return</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_39-\u968F\u673A\u6570\u8303\u56F4" tabindex="-1"><a class="header-anchor" href="#_39-\u968F\u673A\u6570\u8303\u56F4" aria-hidden="true">#</a> 39.\u968F\u673A\u6570\u8303\u56F4</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">random</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">min<span class="token punctuation">,</span> max</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>arguments<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>min <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> \\<span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>max <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">-</span> min<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
<span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_40-\u5C06\u963F\u62C9\u4F2F\u6570\u5B57\u7FFB\u8BD1\u6210\u4E2D\u6587\u7684\u5927\u5199\u6570\u5B57" tabindex="-1"><a class="header-anchor" href="#_40-\u5C06\u963F\u62C9\u4F2F\u6570\u5B57\u7FFB\u8BD1\u6210\u4E2D\u6587\u7684\u5927\u5199\u6570\u5B57" aria-hidden="true">#</a> 40.\u5C06\u963F\u62C9\u4F2F\u6570\u5B57\u7FFB\u8BD1\u6210\u4E2D\u6587\u7684\u5927\u5199\u6570\u5B57</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">numberToChinese</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> <span class="token constant">AA</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>
    <span class="token string">&quot;\u96F6&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;\u4E00&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;\u4E8C&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;\u4E09&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;\u56DB&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;\u4E94&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;\u516D&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;\u4E03&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;\u516B&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;\u4E5D&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;\u5341&quot;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> <span class="token constant">BB</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u5341&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u767E&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u4EDF&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u842C&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u5104&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u70B9&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&quot;&quot;</span> <span class="token operator">+</span> num<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(^0\\*)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    re <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>
        re <span class="token operator">=</span> <span class="token constant">BB</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">+</span> re<span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&quot;0{4}//d{&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">-</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;}$&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
          re <span class="token operator">=</span> <span class="token constant">BB</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> re<span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token number">8</span><span class="token operator">:</span>
        re <span class="token operator">=</span> <span class="token constant">BB</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">+</span> re<span class="token punctuation">;</span>
        <span class="token constant">BB</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant">BB</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">%</span> <span class="token number">4</span> <span class="token operator">==</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
      re <span class="token operator">=</span> <span class="token constant">AA</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> re<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> re <span class="token operator">=</span> <span class="token constant">AA</span><span class="token punctuation">[</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token constant">BB</span><span class="token punctuation">[</span>k <span class="token operator">%</span> <span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> re<span class="token punctuation">;</span>
    k<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    re <span class="token operator">+=</span> <span class="token constant">BB</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> re <span class="token operator">+=</span> <span class="token constant">AA</span><span class="token punctuation">[</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>re <span class="token operator">==</span> <span class="token string">&quot;\u4E00\u5341&quot;</span><span class="token punctuation">)</span> re <span class="token operator">=</span> <span class="token string">&quot;\u5341&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>re<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\u4E00</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> re<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span> re <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E00&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> re<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_41-\u5C06\u6570\u5B57\u8F6C\u6362\u4E3A\u5927\u5199\u91D1\u989D" tabindex="-1"><a class="header-anchor" href="#_41-\u5C06\u6570\u5B57\u8F6C\u6362\u4E3A\u5927\u5199\u91D1\u989D" aria-hidden="true">#</a> 41.\u5C06\u6570\u5B57\u8F6C\u6362\u4E3A\u5927\u5199\u91D1\u989D</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">changeToChinese</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">Num</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
<span class="token comment">//\u5224\u65AD\u5982\u679C\u4F20\u9012\u8FDB\u6765\u7684\u4E0D\u662F\u5B57\u7B26\u7684\u8BDD\u8F6C\u6362\u4E3A\u5B57\u7B26</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> Num <span class="token operator">==</span> <span class="token string">&quot;number&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
Num <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>Num<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
Num <span class="token operator">=</span> Num<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">,</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
<span class="token comment">//\u66FF\u6362 tomoney()\u4E2D\u7684\u201C,\u201D</span>
Num <span class="token operator">=</span> Num<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex"> </span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
<span class="token comment">//\u66FF\u6362 tomoney()\u4E2D\u7684\u7A7A\u683C</span>
Num <span class="token operator">=</span> Num<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\uFFE5</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
<span class="token comment">//\u66FF\u6362\u6389\u53EF\u80FD\u51FA\u73B0\u7684\uFFE5\u5B57\u7B26</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isNaN</span><span class="token punctuation">(</span>Num<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//\u9A8C\u8BC1\u8F93\u5165\u7684\u5B57\u7B26\u662F\u5426\u4E3A\u6570\u5B57</span>
<span class="token comment">//alert(&quot;\u8BF7\u68C0\u67E5\u5C0F\u5199\u91D1\u989D\u662F\u5426\u6B63\u786E&quot;);</span>
<span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">//\u5B57\u7B26\u5904\u7406\u5B8C\u6BD5\u540E\u5F00\u59CB\u8F6C\u6362\uFF0C\u91C7\u7528\u524D\u540E\u4E24\u90E8\u5206\u5206\u522B\u8F6C\u6362</span>
<span class="token keyword">var</span> part <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>Num<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> newchar <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token comment">//\u5C0F\u6570\u70B9\u524D\u8FDB\u884C\u8F6C\u5316</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> part<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>part<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token comment">//\u82E5\u6570\u91CF\u8D85\u8FC7\u62FE\u4EBF\u5355\u4F4D\uFF0C\u63D0\u793A</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;&quot;</span>
<span class="token keyword">var</span> perchar <span class="token operator">=</span> part<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">switch</span> <span class="token punctuation">(</span>perchar<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">case</span> <span class="token string">&quot;0&quot;</span><span class="token operator">:</span>
tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;\u96F6&quot;</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
<span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token string">&quot;1&quot;</span><span class="token operator">:</span>
tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;\u58F9&quot;</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
<span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token string">&quot;2&quot;</span><span class="token operator">:</span>
tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;\u8D30&quot;</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
<span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token string">&quot;3&quot;</span><span class="token operator">:</span>
tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;\u53C1&quot;</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
<span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token string">&quot;4&quot;</span><span class="token operator">:</span> tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;\u8086&quot;</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
<span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token string">&quot;5&quot;</span><span class="token operator">:</span> tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;\u4F0D&quot;</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
<span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token string">&quot;6&quot;</span><span class="token operator">:</span> tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;\u9646&quot;</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
<span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token string">&quot;7&quot;</span><span class="token operator">:</span> tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;\u67D2&quot;</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
<span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token string">&quot;8&quot;</span><span class="token operator">:</span> tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;\u634C&quot;</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
<span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token string">&quot;9&quot;</span><span class="token operator">:</span> tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;\u7396&quot;</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
<span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">switch</span> <span class="token punctuation">(</span>part<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">-</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>
tmpnewchar <span class="token operator">=</span> tmpnewchar <span class="token operator">+</span> <span class="token string">&quot;\u5143&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>perchar <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> tmpnewchar <span class="token operator">=</span> tmpnewchar <span class="token operator">+</span> <span class="token string">&quot;\u62FE&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>perchar <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> tmpnewchar <span class="token operator">=</span> tmpnewchar <span class="token operator">+</span> <span class="token string">&quot;\u4F70&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>perchar <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> tmpnewchar <span class="token operator">=</span> tmpnewchar <span class="token operator">+</span> <span class="token string">&quot;\u4EDF&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>
tmpnewchar <span class="token operator">=</span> tmpnewchar <span class="token operator">+</span> <span class="token string">&quot;\u4E07&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>perchar <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> tmpnewchar <span class="token operator">=</span> tmpnewchar <span class="token operator">+</span> <span class="token string">&quot;\u62FE&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token number">6</span><span class="token operator">:</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>perchar <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> tmpnewchar <span class="token operator">=</span> tmpnewchar <span class="token operator">+</span> <span class="token string">&quot;\u4F70&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token number">7</span><span class="token operator">:</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>perchar <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> tmpnewchar <span class="token operator">=</span> tmpnewchar <span class="token operator">+</span> <span class="token string">&quot;\u4EDF&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token number">8</span><span class="token operator">:</span>
tmpnewchar <span class="token operator">=</span> tmpnewchar <span class="token operator">+</span> <span class="token string">&quot;\u4EBF&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token number">9</span><span class="token operator">:</span>
tmpnewchar <span class="token operator">=</span> tmpnewchar <span class="token operator">+</span> <span class="token string">&quot;\u62FE&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> newchar <span class="token operator">=</span> tmpnewchar <span class="token operator">+</span> newchar<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u5C0F\u6570\u70B9\u4E4B\u540E\u8FDB\u884C\u8F6C\u5316</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>Num<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>part<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">// alert(&quot;\u5C0F\u6570\u70B9\u4E4B\u540E\u53EA\u80FD\u4FDD\u7559\u4E24\u4F4D,\u7CFB\u7EDF\u5C06\u81EA\u52A8\u622A\u65AD&quot;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
part<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> part<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> part<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;&quot;</span> perchar <span class="token operator">=</span> part<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
<span class="token keyword">switch</span> <span class="token punctuation">(</span>perchar<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">case</span> <span class="token string">&quot;0&quot;</span><span class="token operator">:</span>
tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;\u96F6&quot;</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
<span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token string">&quot;1&quot;</span><span class="token operator">:</span>
tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;\u58F9&quot;</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
<span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token string">&quot;2&quot;</span><span class="token operator">:</span>
tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;\u8D30&quot;</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
<span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token string">&quot;3&quot;</span><span class="token operator">:</span>
tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;\u53C1&quot;</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
<span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token string">&quot;4&quot;</span><span class="token operator">:</span>
tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;\u8086&quot;</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
<span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token string">&quot;5&quot;</span><span class="token operator">:</span>
tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;\u4F0D&quot;</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
<span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token string">&quot;6&quot;</span><span class="token operator">:</span>
tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;\u9646&quot;</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
<span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token string">&quot;7&quot;</span><span class="token operator">:</span> tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;\u67D2&quot;</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
<span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token string">&quot;8&quot;</span><span class="token operator">:</span>
tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;\u634C&quot;</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
<span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token string">&quot;9&quot;</span><span class="token operator">:</span>
tmpnewchar <span class="token operator">=</span> <span class="token string">&quot;\u7396&quot;</span> <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span>
<span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> tmpnewchar <span class="token operator">=</span> tmpnewchar <span class="token operator">+</span> <span class="token string">&quot;\u89D2&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> tmpnewchar <span class="token operator">=</span> tmpnewchar <span class="token operator">+</span> <span class="token string">&quot;\u5206&quot;</span><span class="token punctuation">;</span>
newchar <span class="token operator">=</span> newchar <span class="token operator">+</span> tmpnewchar<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
<span class="token comment">//\u66FF\u6362\u6240\u6709\u65E0\u7528\u6C49\u5B57</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>newchar<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token string">&quot;\u96F6\u96F6&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
newchar <span class="token operator">=</span> newchar<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;\u96F6\u96F6&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u96F6&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
newchar <span class="token operator">=</span> newchar<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;\u96F6\u4EBF&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u4EBF&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
newchar <span class="token operator">=</span> newchar<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;\u4EBF\u4E07&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u4EBF&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
newchar <span class="token operator">=</span> newchar<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;\u96F6\u4E07&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u4E07&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
newchar <span class="token operator">=</span> newchar<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;\u96F6\u5143&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u5143&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
newchar <span class="token operator">=</span> newchar<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;\u96F6\u89D2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
newchar <span class="token operator">=</span> newchar<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;\u96F6\u5206&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>newchar<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>newchar<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&quot;\u5143&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
newchar <span class="token operator">=</span> newchar <span class="token operator">+</span> <span class="token string">&quot;\u6574&quot;</span>
<span class="token punctuation">}</span>
<span class="token keyword">return</span> newchar<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_42-\u5224\u65AD\u4E00\u4E2A\u5143\u7D20\u662F\u5426\u5728\u6570\u7EC4\u4E2D" tabindex="-1"><a class="header-anchor" href="#_42-\u5224\u65AD\u4E00\u4E2A\u5143\u7D20\u662F\u5426\u5728\u6570\u7EC4\u4E2D" aria-hidden="true">#</a> 42.\u5224\u65AD\u4E00\u4E2A\u5143\u7D20\u662F\u5426\u5728\u6570\u7EC4\u4E2D</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">contains</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_43-\u6570\u7EC4\u6392\u5E8F-type-1-\u4ECE\u5C0F\u5230\u5927-2-\u4ECE\u5927\u5230\u5C0F-3-\u968F\u673A" tabindex="-1"><a class="header-anchor" href="#_43-\u6570\u7EC4\u6392\u5E8F-type-1-\u4ECE\u5C0F\u5230\u5927-2-\u4ECE\u5927\u5230\u5C0F-3-\u968F\u673A" aria-hidden="true">#</a> 43.\u6570\u7EC4\u6392\u5E8F\uFF0C{type} 1\uFF1A\u4ECE\u5C0F\u5230\u5927 2\uFF1A\u4ECE\u5927\u5230\u5C0F 3\uFF1A\u968F\u673A</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">sort</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token number">1</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>
        <span class="token keyword">return</span> a <span class="token operator">-</span> b<span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>
        <span class="token keyword">return</span> b <span class="token operator">-</span> a<span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>
        <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">0.5</span><span class="token punctuation">;</span>
      <span class="token keyword">default</span><span class="token operator">:</span>
        <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_44-\u53BB\u91CD" tabindex="-1"><a class="header-anchor" href="#_44-\u53BB\u91CD" aria-hidden="true">#</a> 44.\u53BB\u91CD</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">unique</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">&quot;from&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> n <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      r <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>n<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        n<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        r<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> r<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_45-\u6C42\u4E24\u4E2A\u96C6\u5408\u7684\u5E76\u96C6" tabindex="-1"><a class="header-anchor" href="#_45-\u6C42\u4E24\u4E2A\u96C6\u5408\u7684\u5E76\u96C6" aria-hidden="true">#</a> 45.\u6C42\u4E24\u4E2A\u96C6\u5408\u7684\u5E76\u96C6</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">union</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> newArr <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">unique</span><span class="token punctuation">(</span>newArr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_46-\u6C42\u4E24\u4E2A\u96C6\u5408\u7684\u4EA4\u96C6" tabindex="-1"><a class="header-anchor" href="#_46-\u6C42\u4E24\u4E2A\u96C6\u5408\u7684\u4EA4\u96C6" aria-hidden="true">#</a> 46.\u6C42\u4E24\u4E2A\u96C6\u5408\u7684\u4EA4\u96C6</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">intersect</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
<span class="token keyword">var</span> \\_this <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
a <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">unique</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">o</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">return</span> \\_this<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> o<span class="token punctuation">)</span> <span class="token operator">?</span> o <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_47-\u5220\u9664\u5176\u4E2D\u4E00\u4E2A\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#_47-\u5220\u9664\u5176\u4E2D\u4E00\u4E2A\u5143\u7D20" aria-hidden="true">#</a> 47.\u5220\u9664\u5176\u4E2D\u4E00\u4E2A\u5143\u7D20</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">remove</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> ele</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> index <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_48-\u5C06\u7C7B\u6570\u7EC4\u8F6C\u6362\u4E3A\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#_48-\u5C06\u7C7B\u6570\u7EC4\u8F6C\u6362\u4E3A\u6570\u7EC4" aria-hidden="true">#</a> 48.\u5C06\u7C7B\u6570\u7EC4\u8F6C\u6362\u4E3A\u6570\u7EC4</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">formArray</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">ary</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>ary<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    arr <span class="token operator">=</span> ary<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    arr <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>ary<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_49-\u6700\u5927\u503C" tabindex="-1"><a class="header-anchor" href="#_49-\u6700\u5927\u503C" aria-hidden="true">#</a> 49.\u6700\u5927\u503C</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">max</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_50-\u6700\u5C0F\u503C" tabindex="-1"><a class="header-anchor" href="#_50-\u6700\u5C0F\u503C" aria-hidden="true">#</a> 50.\u6700\u5C0F\u503C</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">min</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_51-\u6C42\u548C" tabindex="-1"><a class="header-anchor" href="#_51-\u6C42\u548C" aria-hidden="true">#</a> 51.\u6C42\u548C</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">sum</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">pre<span class="token punctuation">,</span> cur</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> pre <span class="token operator">+</span> cur<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_52-\u5E73\u5747\u503C" tabindex="-1"><a class="header-anchor" href="#_52-\u5E73\u5747\u503C" aria-hidden="true">#</a> 52.\u5E73\u5747\u503C</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">average</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token operator">/</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_53-\u53BB\u9664\u7A7A\u683C-type-1-\u6240\u6709\u7A7A\u683C-2-\u524D\u540E\u7A7A\u683C-3-\u524D\u7A7A\u683C-4-\u540E\u7A7A\u683C" tabindex="-1"><a class="header-anchor" href="#_53-\u53BB\u9664\u7A7A\u683C-type-1-\u6240\u6709\u7A7A\u683C-2-\u524D\u540E\u7A7A\u683C-3-\u524D\u7A7A\u683C-4-\u540E\u7A7A\u683C" aria-hidden="true">#</a> 53.\u53BB\u9664\u7A7A\u683C,type: 1-\u6240\u6709\u7A7A\u683C 2-\u524D\u540E\u7A7A\u683C 3-\u524D\u7A7A\u683C 4-\u540E\u7A7A\u683C</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">trim</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">str<span class="token punctuation">,</span> type</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  type <span class="token operator">=</span> type <span class="token operator">||</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>
      <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\s+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>
      <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(^\\s*)|(\\s*$)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>
      <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(^\\s*)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>
      <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\s*$)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">default</span><span class="token operator">:</span>
      <span class="token keyword">return</span> str<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_54-\u5B57\u7B26\u8F6C\u6362-type-1-\u9996\u5B57\u6BCD\u5927\u5199-2-\u9996\u5B57\u6BCD\u5C0F\u5199-3-\u5927\u5C0F\u5199\u8F6C\u6362-4-\u5168\u90E8\u5927\u5199-5-\u5168\u90E8\u5C0F\u5199" tabindex="-1"><a class="header-anchor" href="#_54-\u5B57\u7B26\u8F6C\u6362-type-1-\u9996\u5B57\u6BCD\u5927\u5199-2-\u9996\u5B57\u6BCD\u5C0F\u5199-3-\u5927\u5C0F\u5199\u8F6C\u6362-4-\u5168\u90E8\u5927\u5199-5-\u5168\u90E8\u5C0F\u5199" aria-hidden="true">#</a> 54.\u5B57\u7B26\u8F6C\u6362\uFF0Ctype: 1:\u9996\u5B57\u6BCD\u5927\u5199 2\uFF1A\u9996\u5B57\u6BCD\u5C0F\u5199 3\uFF1A\u5927\u5C0F\u5199\u8F6C\u6362 4\uFF1A\u5168\u90E8\u5927\u5199 5\uFF1A\u5168\u90E8\u5C0F\u5199</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">changeCase</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">str<span class="token punctuation">,</span> type</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  type <span class="token operator">=</span> type <span class="token operator">||</span> <span class="token number">4</span><span class="token punctuation">;</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>
      <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\b\\w+\\b</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">word</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>
          word<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> word<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>
      <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\b\\w+\\b</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">word</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>
          word<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> word<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>
      <span class="token keyword">return</span> str
        <span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">word</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[a-z]</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> word<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> word<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>
      <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span>
      <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">default</span><span class="token operator">:</span>
      <span class="token keyword">return</span> str<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_55-\u68C0\u6D4B\u5BC6\u7801\u5F3A\u5EA6" tabindex="-1"><a class="header-anchor" href="#_55-\u68C0\u6D4B\u5BC6\u7801\u5F3A\u5EA6" aria-hidden="true">#</a> 55.\u68C0\u6D4B\u5BC6\u7801\u5F3A\u5EA6</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">checkPwd</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> Lv <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Lv<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[0-9]</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Lv<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[a-z]</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Lv<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[A-Z]</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Lv<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[\\.|-|_]</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Lv<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> Lv<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_56-\u51FD\u6570\u8282\u6D41\u5668" tabindex="-1"><a class="header-anchor" href="#_56-\u51FD\u6570\u8282\u6D41\u5668" aria-hidden="true">#</a> 56.\u51FD\u6570\u8282\u6D41\u5668</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">debouncer</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> time<span class="token punctuation">,</span> interval <span class="token operator">=</span> <span class="token number">200</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>time <span class="token operator">-</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>debounceTimestamp <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> interval<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fn <span class="token operator">&amp;&amp;</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    window<span class="token punctuation">.</span>debounceTimestamp <span class="token operator">=</span> time<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_57-\u5728\u5B57\u7B26\u4E32\u4E2D\u63D2\u5165\u65B0\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#_57-\u5728\u5B57\u7B26\u4E32\u4E2D\u63D2\u5165\u65B0\u5B57\u7B26\u4E32" aria-hidden="true">#</a> 57.\u5728\u5B57\u7B26\u4E32\u4E2D\u63D2\u5165\u65B0\u5B57\u7B26\u4E32</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">insertStr</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">soure<span class="token punctuation">,</span> index<span class="token punctuation">,</span> newStr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> str <span class="token operator">=</span> soure<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">+</span> newStr <span class="token operator">+</span> soure<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> str<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_58-\u5224\u65AD\u4E24\u4E2A\u5BF9\u8C61\u662F\u5426\u952E\u503C\u76F8\u540C" tabindex="-1"><a class="header-anchor" href="#_58-\u5224\u65AD\u4E24\u4E2A\u5BF9\u8C61\u662F\u5426\u952E\u503C\u76F8\u540C" aria-hidden="true">#</a> 58.\u5224\u65AD\u4E24\u4E2A\u5BF9\u8C61\u662F\u5426\u952E\u503C\u76F8\u540C</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isObjectEqual</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> aProps <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyNames</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> bProps <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyNames</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>aProps<span class="token punctuation">.</span>length <span class="token operator">!==</span> bProps<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> aProps<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> propName <span class="token operator">=</span> aProps<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span>propName<span class="token punctuation">]</span> <span class="token operator">!==</span> b<span class="token punctuation">[</span>propName<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_59-16-\u8FDB\u5236\u989C\u8272\u8F6C-rgbrgba-\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#_59-16-\u8FDB\u5236\u989C\u8272\u8F6C-rgbrgba-\u5B57\u7B26\u4E32" aria-hidden="true">#</a> 59.16 \u8FDB\u5236\u989C\u8272\u8F6C RGBRGBA \u5B57\u7B26\u4E32</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">colorToRGB</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">val<span class="token punctuation">,</span> opa</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
<span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(#?)[a-fA-F0-9]{6}$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
<span class="token comment">//16 \u8FDB\u5236\u989C\u8272\u503C\u6821\u9A8C\u89C4\u5219</span>
<span class="token keyword">var</span> isOpa <span class="token operator">=</span> <span class="token keyword">typeof</span> opa <span class="token operator">==</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">;</span>
<span class="token comment">//\u5224\u65AD\u662F\u5426\u6709\u8BBE\u7F6E\u4E0D\u900F\u660E\u5EA6</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>pattern<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//\u5982\u679C\u503C\u4E0D\u7B26\u5408\u89C4\u5219\u8FD4\u56DE\u7A7A\u5B57\u7B26</span>
<span class="token keyword">return</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> v <span class="token operator">=</span> val<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">#</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u5982\u679C\u6709#\u53F7\u5148\u53BB\u9664#\u53F7</span>
<span class="token keyword">var</span> rgbArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> rgbStr <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">var</span> item <span class="token operator">=</span> v<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>i _ <span class="token number">2</span><span class="token punctuation">,</span> i _ <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
rgbArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
rgbStr <span class="token operator">=</span> rgbArr<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
rgbStr <span class="token operator">=</span> <span class="token string">&#39;rgb&#39;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>isOpa <span class="token operator">?</span> <span class="token string">&#39;a&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;(&#39;</span> <span class="token operator">+</span> rgbStr <span class="token operator">+</span> <span class="token punctuation">(</span>isOpa <span class="token operator">?</span> <span class="token string">&#39;,&#39;</span> <span class="token operator">+</span> opa <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;)&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> rgbStr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_60-\u8FFD\u52A0-url-\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#_60-\u8FFD\u52A0-url-\u53C2\u6570" aria-hidden="true">#</a> 60.\u8FFD\u52A0 url \u53C2\u6570</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">appendQuery</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> options <span class="token operator">=</span> key<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> options <span class="token operator">==</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    options <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    options<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  options <span class="token operator">=</span> $<span class="token punctuation">.</span><span class="token function">param</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&quot;?&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    url <span class="token operator">+=</span> <span class="token string">&quot;&amp;&quot;</span> <span class="token operator">+</span> options<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    url <span class="token operator">+=</span> <span class="token string">&quot;?&quot;</span> <span class="token operator">+</span> options<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> url<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6B63\u5219\u6821\u9A8C-check-\u5DE5\u5177\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u6B63\u5219\u6821\u9A8C-check-\u5DE5\u5177\u51FD\u6570" aria-hidden="true">#</a> \u6B63\u5219\u6821\u9A8C check \u5DE5\u5177\u51FD\u6570</h3><p>\u8FD9\u91CC\u7684\u6B63\u5219\u8868\u8FBE\u5F0F\u4E3B\u8981\u53C2\u8003\u4E86 any-rule\u3002</p><h3 id="\u9A8C\u8BC1\u4E0D\u80FD\u5305\u542B\u5B57\u6BCD" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1\u4E0D\u80FD\u5305\u542B\u5B57\u6BCD" aria-hidden="true">#</a> \u9A8C\u8BC1\u4E0D\u80FD\u5305\u542B\u5B57\u6BCD</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isNoWord</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[^A-Za-z]*$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1\u4E2D\u6587\u548C\u6570\u5B57" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1\u4E2D\u6587\u548C\u6570\u5B57" aria-hidden="true">#</a> \u9A8C\u8BC1\u4E2D\u6587\u548C\u6570\u5B57</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isCHNAndEN</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^((?:[\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uFA0E\\uFA0F\\uFA11\\uFA13\\uFA14\\uFA1F\\uFA21\\uFA23\\uFA24\\uFA27-\\uFA29]|[\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0])|(\\d))+$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>
    value
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1\u90AE\u653F\u7F16\u7801-\u4E2D\u56FD" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1\u90AE\u653F\u7F16\u7801-\u4E2D\u56FD" aria-hidden="true">#</a> \u9A8C\u8BC1\u90AE\u653F\u7F16\u7801(\u4E2D\u56FD)</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isPostcode</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(0[1-7]|1[0-356]|2[0-7]|3[0-6]|4[0-7]|5[1-7]|6[1-7]|7[0-5]|8[013-6])\\d{4}$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>
    value
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1\u5FAE\u4FE1\u53F7-6-\u81F3-20-\u4F4D-\u4EE5\u5B57\u6BCD\u5F00\u5934-\u5B57\u6BCD-\u6570\u5B57-\u51CF\u53F7-\u4E0B\u5212\u7EBF" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1\u5FAE\u4FE1\u53F7-6-\u81F3-20-\u4F4D-\u4EE5\u5B57\u6BCD\u5F00\u5934-\u5B57\u6BCD-\u6570\u5B57-\u51CF\u53F7-\u4E0B\u5212\u7EBF" aria-hidden="true">#</a> \u9A8C\u8BC1\u5FAE\u4FE1\u53F7\uFF0C6 \u81F3 20 \u4F4D\uFF0C\u4EE5\u5B57\u6BCD\u5F00\u5934\uFF0C\u5B57\u6BCD\uFF0C\u6570\u5B57\uFF0C\u51CF\u53F7\uFF0C\u4E0B\u5212\u7EBF</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isWeChatNum</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z][-_a-zA-Z0-9]{5,19}$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1-16-\u8FDB\u5236\u989C\u8272" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1-16-\u8FDB\u5236\u989C\u8272" aria-hidden="true">#</a> \u9A8C\u8BC1 16 \u8FDB\u5236\u989C\u8272</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isColor16</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1\u706B\u8F66\u8F66\u6B21" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1\u706B\u8F66\u8F66\u6B21" aria-hidden="true">#</a> \u9A8C\u8BC1\u706B\u8F66\u8F66\u6B21</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isTrainNum</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[GCDZTSPKXLY1-9]\\d{1,4}$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1\u624B\u673A\u673A\u8EAB\u7801-imei" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1\u624B\u673A\u673A\u8EAB\u7801-imei" aria-hidden="true">#</a> \u9A8C\u8BC1\u624B\u673A\u673A\u8EAB\u7801(IMEI)</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>/**
 *  @param { string } value
 */
export const isIMEI = value =&gt; /^\\d{15,17}$/g.test(value);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1\u5FC5\u987B\u5E26\u7AEF\u53E3\u53F7\u7684\u7F51\u5740-\u6216-ip" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1\u5FC5\u987B\u5E26\u7AEF\u53E3\u53F7\u7684\u7F51\u5740-\u6216-ip" aria-hidden="true">#</a> \u9A8C\u8BC1\u5FC5\u987B\u5E26\u7AEF\u53E3\u53F7\u7684\u7F51\u5740(\u6216 ip)</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isHttpAndPort</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^((ht|f)tps?:\\/\\/)?[\\w-]+(\\.[\\w-]+)+:\\d{1,5}\\/?$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1\u7F51\u5740-\u652F\u6301\u7AEF\u53E3\u548C-\u53C2\u6570-\u548C-\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1\u7F51\u5740-\u652F\u6301\u7AEF\u53E3\u548C-\u53C2\u6570-\u548C-\u53C2\u6570" aria-hidden="true">#</a> \u9A8C\u8BC1\u7F51\u5740(\u652F\u6301\u7AEF\u53E3\u548C&quot;?+\u53C2\u6570&quot;\u548C&quot;#+\u53C2\u6570)</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 *  <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isRightWebsite</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(((ht|f)tps?):\\/\\/)?[\\w-]+(\\.[\\w-]+)+([\\w.,@?^=%&amp;:/~+#-]*[\\w@?^=%&amp;/~+#-])?$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>
    value
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1\u7EDF\u4E00\u793E\u4F1A\u4FE1\u7528\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1\u7EDF\u4E00\u793E\u4F1A\u4FE1\u7528\u4EE3\u7801" aria-hidden="true">#</a> \u9A8C\u8BC1\u7EDF\u4E00\u793E\u4F1A\u4FE1\u7528\u4EE3\u7801</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 *  <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isCreditCode</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[0-9A-HJ-NPQRTUWXY]{2}\\d{6}[0-9A-HJ-NPQRTUWXY]{10}$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1\u8FC5\u96F7\u94FE\u63A5" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1\u8FC5\u96F7\u94FE\u63A5" aria-hidden="true">#</a> \u9A8C\u8BC1\u8FC5\u96F7\u94FE\u63A5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 *  <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isThunderLink</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^thunderx?:\\/\\/[a-zA-Z\\d]+=$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1-ed2k-\u94FE\u63A5-\u5BBD\u677E\u5339\u914D" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1-ed2k-\u94FE\u63A5-\u5BBD\u677E\u5339\u914D" aria-hidden="true">#</a> \u9A8C\u8BC1 ed2k \u94FE\u63A5(\u5BBD\u677E\u5339\u914D)</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 *  <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">ised2k</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^ed2k:\\/\\/\\|file\\|.+\\|\\/$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1\u78C1\u529B\u94FE\u63A5-\u5BBD\u677E\u5339\u914D" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1\u78C1\u529B\u94FE\u63A5-\u5BBD\u677E\u5339\u914D" aria-hidden="true">#</a> \u9A8C\u8BC1\u78C1\u529B\u94FE\u63A5(\u5BBD\u677E\u5339\u914D)</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 *  <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isMagnet</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^magnet:\\?xt=urn:btih:[0-9a-fA-F]{40,}.*$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1\u5B50\u7F51\u63A9\u7801" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1\u5B50\u7F51\u63A9\u7801" aria-hidden="true">#</a> \u9A8C\u8BC1\u5B50\u7F51\u63A9\u7801</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 *  <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isSubnetMask</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(?:\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])(?:\\.(?:\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])){3}$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>
    value
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1-linux-\u6587\u4EF6\u5939-\u8DEF\u5F84" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1-linux-\u6587\u4EF6\u5939-\u8DEF\u5F84" aria-hidden="true">#</a> \u9A8C\u8BC1 linux&quot;\u6587\u4EF6\u5939&quot;\u8DEF\u5F84</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 *  <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isLinuxFolderPath</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(\\/[^/]+)+\\/?$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1-linux-\u6587\u4EF6-\u8DEF\u5F84" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1-linux-\u6587\u4EF6-\u8DEF\u5F84" aria-hidden="true">#</a> \u9A8C\u8BC1 linux&quot;\u6587\u4EF6&quot;\u8DEF\u5F84</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 *  <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isLinuxFilePath</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(\\/[^/]+)+$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1-window-\u6587\u4EF6\u5939-\u8DEF\u5F84" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1-window-\u6587\u4EF6\u5939-\u8DEF\u5F84" aria-hidden="true">#</a> \u9A8C\u8BC1 window&quot;\u6587\u4EF6\u5939&quot;\u8DEF\u5F84</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 *  <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isWindowsFolderPath</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z]:\\\\(?:\\w+\\\\?)*$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1-window-\u4E0B-\u6587\u4EF6-\u8DEF\u5F84" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1-window-\u4E0B-\u6587\u4EF6-\u8DEF\u5F84" aria-hidden="true">#</a> \u9A8C\u8BC1 window \u4E0B&quot;\u6587\u4EF6&quot;\u8DEF\u5F84</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 *  <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isWindowsFilePath</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z]:\\\\(?:\\w+\\\\)*\\w+\\.\\w+$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1\u80A1\u7968\u4EE3\u7801-a-\u80A1" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1\u80A1\u7968\u4EE3\u7801-a-\u80A1" aria-hidden="true">#</a> \u9A8C\u8BC1\u80A1\u7968\u4EE3\u7801(A \u80A1)</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 *  <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isAShare</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(s[hz]|S[HZ])(000[\\d]{3}|002[\\d]{3}|300[\\d]{3}|600[\\d]{3}|60[\\d]{4})$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>
    value
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1\u7248\u672C\u53F7\u683C\u5F0F\u5FC5\u987B\u4E3A-x-y-z" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1\u7248\u672C\u53F7\u683C\u5F0F\u5FC5\u987B\u4E3A-x-y-z" aria-hidden="true">#</a> \u9A8C\u8BC1\u7248\u672C\u53F7\u683C\u5F0F\u5FC5\u987B\u4E3A X.Y.Z</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 *  <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isVersion</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\d+(?:\\.\\d+){2}$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1\u89C6\u9891\u94FE\u63A5\u5730\u5740-\u89C6\u9891\u683C\u5F0F\u53EF\u6309\u9700\u589E\u5220" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1\u89C6\u9891\u94FE\u63A5\u5730\u5740-\u89C6\u9891\u683C\u5F0F\u53EF\u6309\u9700\u589E\u5220" aria-hidden="true">#</a> \u9A8C\u8BC1\u89C6\u9891\u94FE\u63A5\u5730\u5740\uFF08\u89C6\u9891\u683C\u5F0F\u53EF\u6309\u9700\u589E\u5220\uFF09</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 *  <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isVideoUrl</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^https?:\\/\\/(.+\\/)+.+(\\.(swf|avi|flv|mpg|rm|mov|wav|asf|3gp|mkv|rmvb|mp4))$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>
    value
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1\u56FE\u7247\u94FE\u63A5\u5730\u5740-\u56FE\u7247\u683C\u5F0F\u53EF\u6309\u9700\u589E\u5220" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1\u56FE\u7247\u94FE\u63A5\u5730\u5740-\u56FE\u7247\u683C\u5F0F\u53EF\u6309\u9700\u589E\u5220" aria-hidden="true">#</a> \u9A8C\u8BC1\u56FE\u7247\u94FE\u63A5\u5730\u5740\uFF08\u56FE\u7247\u683C\u5F0F\u53EF\u6309\u9700\u589E\u5220\uFF09</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 *  <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isImageUrl</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^https?:\\/\\/(.+\\/)+.+(\\.(gif|png|jpg|jpeg|webp|svg|psd|bmp|tif))$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>
    value
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1\u94F6\u884C\u5361\u53F7-10-\u5230-30-\u4F4D-\u8986\u76D6\u5BF9\u516C-\u79C1\u8D26\u6237-\u53C2\u8003\u5FAE\u4FE1\u652F\u4ED8" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1\u94F6\u884C\u5361\u53F7-10-\u5230-30-\u4F4D-\u8986\u76D6\u5BF9\u516C-\u79C1\u8D26\u6237-\u53C2\u8003\u5FAE\u4FE1\u652F\u4ED8" aria-hidden="true">#</a> \u9A8C\u8BC1\u94F6\u884C\u5361\u53F7\uFF0810 \u5230 30 \u4F4D, \u8986\u76D6\u5BF9\u516C/\u79C1\u8D26\u6237, \u53C2\u8003\u5FAE\u4FE1\u652F\u4ED8\uFF09</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>/**
 * @param { string } value
 */
export const isAccountNumber = value =&gt; /^[1-9]\\d{9,29}$/g.test(value);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1\u4E2D\u6587\u59D3\u540D" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1\u4E2D\u6587\u59D3\u540D" aria-hidden="true">#</a> \u9A8C\u8BC1\u4E2D\u6587\u59D3\u540D</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isChineseName</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(?:[\\u4e00-\\u9fa5\xB7]{2,16})$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1\u82F1\u6587\u59D3\u540D" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1\u82F1\u6587\u59D3\u540D" aria-hidden="true">#</a> \u9A8C\u8BC1\u82F1\u6587\u59D3\u540D</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isEnglishName</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(^[a-zA-Z]{1}[a-zA-Z\\s]{0,20}[a-zA-Z]{1}$)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1\u8F66\u724C\u53F7-\u65B0\u80FD\u6E90" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1\u8F66\u724C\u53F7-\u65B0\u80FD\u6E90" aria-hidden="true">#</a> \u9A8C\u8BC1\u8F66\u724C\u53F7(\u65B0\u80FD\u6E90)</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isLicensePlateNumberNER</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[\u4EAC\u6D25\u6CAA\u6E1D\u5180\u8C6B\u4E91\u8FBD\u9ED1\u6E58\u7696\u9C81\u65B0\u82CF\u6D59\u8D63\u9102\u6842\u7518\u664B\u8499\u9655\u5409\u95FD\u8D35\u7CA4\u9752\u85CF\u5DDD\u5B81\u743C\u4F7F\u9886 A-Z]{1}[A-HJ-NP-Z]{1}(([0-9]{5}[DF])|([DF][A-HJ-NP-Z0-9][0-9]{4}))$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>
    value
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1\u8F66\u724C\u53F7-\u975E\u65B0\u80FD\u6E90" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1\u8F66\u724C\u53F7-\u975E\u65B0\u80FD\u6E90" aria-hidden="true">#</a> \u9A8C\u8BC1\u8F66\u724C\u53F7(\u975E\u65B0\u80FD\u6E90)</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isLicensePlateNumberNNER</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[\u4EAC\u6D25\u6CAA\u6E1D\u5180\u8C6B\u4E91\u8FBD\u9ED1\u6E58\u7696\u9C81\u65B0\u82CF\u6D59\u8D63\u9102\u6842\u7518\u664B\u8499\u9655\u5409\u95FD\u8D35\u7CA4\u9752\u85CF\u5DDD\u5B81\u743C\u4F7F\u9886 A-Z]{1}[A-HJ-NP-Z]{1}[A-Z0-9]{4}[A-Z0-9\u6302\u5B66\u8B66\u6E2F\u6FB3]{1}$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>
    value
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1\u8F66\u724C\u53F7-\u65B0\u80FD\u6E90-\u975E\u65B0\u80FD\u6E90" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1\u8F66\u724C\u53F7-\u65B0\u80FD\u6E90-\u975E\u65B0\u80FD\u6E90" aria-hidden="true">#</a> \u9A8C\u8BC1\u8F66\u724C\u53F7(\u65B0\u80FD\u6E90+\u975E\u65B0\u80FD\u6E90)</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isLicensePlateNumber</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(?:[\u4EAC\u6D25\u6CAA\u6E1D\u5180\u8C6B\u4E91\u8FBD\u9ED1\u6E58\u7696\u9C81\u65B0\u82CF\u6D59\u8D63\u9102\u6842\u7518\u664B\u8499\u9655\u5409\u95FD\u8D35\u7CA4\u9752\u85CF\u5DDD\u5B81\u743C\u4F7F\u9886 A-Z]{1}[A-HJ-NP-Z]{1}(?:(?:[0-9]{5}[DF])|(?:[DF](?:[A-HJ-NP-Z0-9])[0-9]{4})))|(?:[\u4EAC\u6D25\u6CAA\u6E1D\u5180\u8C6B\u4E91\u8FBD\u9ED1\u6E58\u7696\u9C81\u65B0\u82CF\u6D59\u8D63\u9102\u6842\u7518\u664B\u8499\u9655\u5409\u95FD\u8D35\u7CA4\u9752\u85CF\u5DDD\u5B81\u743C\u4F7F\u9886 A-Z]{1}[A-Z]{1}[A-HJ-NP-Z0-9]{4}[A-HJ-NP-Z0-9 \u6302\u5B66\u8B66\u6E2F\u6FB3]{1})$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>
    value
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1\u624B\u673A\u53F7\u4E2D\u56FD-\u4E25\u8C28-\u6839\u636E\u5DE5\u4FE1\u90E8-2019-\u5E74\u6700\u65B0\u516C\u5E03\u7684\u624B\u673A\u53F7\u6BB5" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1\u624B\u673A\u53F7\u4E2D\u56FD-\u4E25\u8C28-\u6839\u636E\u5DE5\u4FE1\u90E8-2019-\u5E74\u6700\u65B0\u516C\u5E03\u7684\u624B\u673A\u53F7\u6BB5" aria-hidden="true">#</a> \u9A8C\u8BC1\u624B\u673A\u53F7\u4E2D\u56FD(\u4E25\u8C28), \u6839\u636E\u5DE5\u4FE1\u90E8 2019 \u5E74\u6700\u65B0\u516C\u5E03\u7684\u624B\u673A\u53F7\u6BB5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isMPStrict</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(?:(?:\\+|00)86)?1(?:(?:3[\\d])|(?:4[5-7|9])|(?:5[0-3|5-9])|(?:6[5-7])|(?:7[0-8])|(?:8[\\d])|(?:9[1|8|9]))\\d{8}$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>
    value
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1\u624B\u673A\u53F7\u4E2D\u56FD-\u5BBD\u677E-\u53EA\u8981\u662F-13-14-15-16-17-18-19-\u5F00\u5934\u5373\u53EF" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1\u624B\u673A\u53F7\u4E2D\u56FD-\u5BBD\u677E-\u53EA\u8981\u662F-13-14-15-16-17-18-19-\u5F00\u5934\u5373\u53EF" aria-hidden="true">#</a> \u9A8C\u8BC1\u624B\u673A\u53F7\u4E2D\u56FD(\u5BBD\u677E), \u53EA\u8981\u662F 13,14,15,16,17,18,19 \u5F00\u5934\u5373\u53EF</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isMPRelaxed</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(?:(?:\\+|00)86)?1[3-9]\\d{9}$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1-email-\u90AE\u7BB1" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1-email-\u90AE\u7BB1" aria-hidden="true">#</a> \u9A8C\u8BC1 email(\u90AE\u7BB1)</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isEmail</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z0-9.!#$%&amp;&#39;*+/=?^_\`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>
    value
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1\u5EA7\u673A\u7535\u8BDD-\u56FD\u5185-\u5982-0341-86091234" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1\u5EA7\u673A\u7535\u8BDD-\u56FD\u5185-\u5982-0341-86091234" aria-hidden="true">#</a> \u9A8C\u8BC1\u5EA7\u673A\u7535\u8BDD(\u56FD\u5185),\u5982: 0341-86091234</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isLandlineTelephone</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\d{3}-\\d{8}|\\d{4}-\\d{7}</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1sfz\u53F7-1-\u4EE3-15-\u4F4D\u6570\u5B57" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1sfz\u53F7-1-\u4EE3-15-\u4F4D\u6570\u5B57" aria-hidden="true">#</a> \u9A8C\u8BC1SFZ\u53F7(1 \u4EE3,15 \u4F4D\u6570\u5B57)</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isIDCardOld</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\d{8}(0\\d|10|11|12)([0-2]\\d|30|31)\\d{3}$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1sfz\u53F7-2-\u4EE3-18-\u4F4D\u6570\u5B57-\u6700\u540E\u4E00\u4F4D\u662F\u6821\u9A8C\u4F4D-\u53EF\u80FD\u4E3A\u6570\u5B57\u6216\u5B57\u7B26-x" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1sfz\u53F7-2-\u4EE3-18-\u4F4D\u6570\u5B57-\u6700\u540E\u4E00\u4F4D\u662F\u6821\u9A8C\u4F4D-\u53EF\u80FD\u4E3A\u6570\u5B57\u6216\u5B57\u7B26-x" aria-hidden="true">#</a> \u9A8C\u8BC1SFZ\u53F7(2 \u4EE3,18 \u4F4D\u6570\u5B57),\u6700\u540E\u4E00\u4F4D\u662F\u6821\u9A8C\u4F4D,\u53EF\u80FD\u4E3A\u6570\u5B57\u6216\u5B57\u7B26 X</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isIDCardNew</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\d{6}(18|19|20)\\d{2}(0\\d|10|11|12)([0-2]\\d|30|31)\\d{3}[\\dXx]$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1sfz\u53F7-\u652F\u6301-1-2-\u4EE3-15-\u4F4D-18-\u4F4D\u6570\u5B57" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1sfz\u53F7-\u652F\u6301-1-2-\u4EE3-15-\u4F4D-18-\u4F4D\u6570\u5B57" aria-hidden="true">#</a> \u9A8C\u8BC1SFZ\u53F7, \u652F\u6301 1/2 \u4EE3(15 \u4F4D/18 \u4F4D\u6570\u5B57)</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isIDCard</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(^\\d{8}(0\\d|10|11|12)([0-2]\\d|30|31)\\d{3}$)|(^\\d{6}(18|19|20)\\d{2}(0\\d|10|11|12)([0-2]\\d|30|31)\\d{3}(\\d|X|x)$)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>
    value
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1\u62A4\u7167-\u5305\u542B\u9999\u6E2F\u3001\u6FB3\u95E8" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1\u62A4\u7167-\u5305\u542B\u9999\u6E2F\u3001\u6FB3\u95E8" aria-hidden="true">#</a> \u9A8C\u8BC1\u62A4\u7167\uFF08\u5305\u542B\u9999\u6E2F\u3001\u6FB3\u95E8\uFF09</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isPassport</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(^[EeKkGgDdSsPpHh]\\d{8}$)|(^(([Ee][a-fA-F])|([DdSsPp][Ee])|([Kk][Jj])|([Mm][Aa])|(1[45]))\\d{7}$)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>
    value
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1\u5E10\u53F7\u662F\u5426\u5408\u6CD5-\u5B57\u6BCD\u5F00\u5934-\u5141\u8BB8-5-16-\u5B57\u8282-\u5141\u8BB8\u5B57\u6BCD\u6570\u5B57\u4E0B\u5212\u7EBF\u7EC4\u5408" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1\u5E10\u53F7\u662F\u5426\u5408\u6CD5-\u5B57\u6BCD\u5F00\u5934-\u5141\u8BB8-5-16-\u5B57\u8282-\u5141\u8BB8\u5B57\u6BCD\u6570\u5B57\u4E0B\u5212\u7EBF\u7EC4\u5408" aria-hidden="true">#</a> \u9A8C\u8BC1\u5E10\u53F7\u662F\u5426\u5408\u6CD5(\u5B57\u6BCD\u5F00\u5934\uFF0C\u5141\u8BB8 5-16 \u5B57\u8282\uFF0C\u5141\u8BB8\u5B57\u6BCD\u6570\u5B57\u4E0B\u5212\u7EBF\u7EC4\u5408</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isWebAccount</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z]\\w{4,15}$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1\u4E2D\u6587-\u6C49\u5B57" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1\u4E2D\u6587-\u6C49\u5B57" aria-hidden="true">#</a> \u9A8C\u8BC1\u4E2D\u6587/\u6C49\u5B57</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isChineseCharacter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(?:[\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uFA0E\\uFA0F\\uFA11\\uFA13\\uFA14\\uFA1F\\uFA21\\uFA23\\uFA24\\uFA27-\\uFA29]|[\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0])+$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>
    value
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1\u5C0F\u6570" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1\u5C0F\u6570" aria-hidden="true">#</a> \u9A8C\u8BC1\u5C0F\u6570</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isDecimal</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\d+\\.\\d+$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1\u6570\u5B57" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1\u6570\u5B57" aria-hidden="true">#</a> \u9A8C\u8BC1\u6570\u5B57</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isNumber</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\d{1,}$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1-qq-\u53F7\u683C\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1-qq-\u53F7\u683C\u5F0F" aria-hidden="true">#</a> \u9A8C\u8BC1 qq \u53F7\u683C\u5F0F</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isQQNum</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[1-9][0-9]{4,10}$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1\u6570\u5B57\u548C\u5B57\u6BCD\u7EC4\u6210" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1\u6570\u5B57\u548C\u5B57\u6BCD\u7EC4\u6210" aria-hidden="true">#</a> \u9A8C\u8BC1\u6570\u5B57\u548C\u5B57\u6BCD\u7EC4\u6210</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isNumAndStr</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[A-Za-z0-9]+$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1\u82F1\u6587\u5B57\u6BCD" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1\u82F1\u6587\u5B57\u6BCD" aria-hidden="true">#</a> \u9A8C\u8BC1\u82F1\u6587\u5B57\u6BCD</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isEnglish</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z]+$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1\u5927\u5199\u82F1\u6587\u5B57\u6BCD" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1\u5927\u5199\u82F1\u6587\u5B57\u6BCD" aria-hidden="true">#</a> \u9A8C\u8BC1\u5927\u5199\u82F1\u6587\u5B57\u6BCD</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isCapital</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[A-Z]+$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1\u5C0F\u5199\u82F1\u6587\u5B57\u6BCD" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1\u5C0F\u5199\u82F1\u6587\u5B57\u6BCD" aria-hidden="true">#</a> \u9A8C\u8BC1\u5C0F\u5199\u82F1\u6587\u5B57\u6BCD</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isLowercase</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-z]+$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6D4F\u89C8\u5668\u64CD\u4F5C\u76F8\u5173-browser-\u5DE5\u5177\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u6D4F\u89C8\u5668\u64CD\u4F5C\u76F8\u5173-browser-\u5DE5\u5177\u51FD\u6570" aria-hidden="true">#</a> \u6D4F\u89C8\u5668\u64CD\u4F5C\u76F8\u5173 browser \u5DE5\u5177\u51FD\u6570</h3><h3 id="\u8FD4\u56DE\u5F53\u524D-url" tabindex="-1"><a class="header-anchor" href="#\u8FD4\u56DE\u5F53\u524D-url" aria-hidden="true">#</a> \u8FD4\u56DE\u5F53\u524D url</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">currentURL</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="\u83B7\u53D6-url-\u53C2\u6570-\u7B2C\u4E00\u79CD" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6-url-\u53C2\u6570-\u7B2C\u4E00\u79CD" aria-hidden="true">#</a> \u83B7\u53D6 url \u53C2\u6570\uFF08\u7B2C\u4E00\u79CD\uFF09</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">name</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">origin</span>
 */</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getUrlParam</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> origin <span class="token operator">=</span> <span class="token keyword">null</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&quot;(^|&amp;)&quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&quot;=([^&amp;]*)(&amp;|$)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> r <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>origin <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    r <span class="token operator">=</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>search<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>reg<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    r <span class="token operator">=</span> origin<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>reg<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>r <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">decodeURIComponent</span><span class="token punctuation">(</span>r<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u83B7\u53D6-url-\u53C2\u6570-\u7B2C\u4E8C\u79CD" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6-url-\u53C2\u6570-\u7B2C\u4E8C\u79CD" aria-hidden="true">#</a> \u83B7\u53D6 url \u53C2\u6570\uFF08\u7B2C\u4E8C\u79CD\uFF09</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">name</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">origin</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getUrlParams</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> origin <span class="token operator">=</span> <span class="token keyword">null</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> url <span class="token operator">=</span> location<span class="token punctuation">.</span>href<span class="token punctuation">;</span>
  <span class="token keyword">let</span> temp1 <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;?&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> pram <span class="token operator">=</span> temp1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> keyValue <span class="token operator">=</span> pram<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;&amp;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> keyValue<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> item <span class="token operator">=</span> keyValue<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> key <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> value <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> obj<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4FEE\u6539-url-\u4E2D\u7684\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u4FEE\u6539-url-\u4E2D\u7684\u53C2\u6570" aria-hidden="true">#</a> \u4FEE\u6539 url \u4E2D\u7684\u53C2\u6570</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">paramName</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">replaceWith</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">replaceParamVal</span><span class="token punctuation">(</span><span class="token parameter">paramName<span class="token punctuation">,</span> replaceWith</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> oUrl <span class="token operator">=</span> location<span class="token punctuation">.</span>href<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> re <span class="token operator">=</span> <span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">&quot;/(&quot;</span> <span class="token operator">+</span> paramName <span class="token operator">+</span> <span class="token string">&quot;=)([^&amp;]*)/gi&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  location<span class="token punctuation">.</span>href <span class="token operator">=</span> oUrl<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>re<span class="token punctuation">,</span> paramName <span class="token operator">+</span> <span class="token string">&quot;=&quot;</span> <span class="token operator">+</span> replaceWith<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> location<span class="token punctuation">.</span>href<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5220\u9664-url-\u4E2D\u6307\u5B9A\u7684\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u5220\u9664-url-\u4E2D\u6307\u5B9A\u7684\u53C2\u6570" aria-hidden="true">#</a> \u5220\u9664 url \u4E2D\u6307\u5B9A\u7684\u53C2\u6570</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">name</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">funcUrlDel</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> loca <span class="token operator">=</span> location<span class="token punctuation">;</span>
  <span class="token keyword">var</span> baseUrl <span class="token operator">=</span> loca<span class="token punctuation">.</span>origin <span class="token operator">+</span> loca<span class="token punctuation">.</span>pathname <span class="token operator">+</span> <span class="token string">&quot;?&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> query <span class="token operator">=</span> loca<span class="token punctuation">.</span>search<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> arr <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;&amp;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      obj<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">delete</span> obj<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> url <span class="token operator">=</span>
      baseUrl <span class="token operator">+</span>
      <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[\\&quot;\\{\\}]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\:</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;=&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\,</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&amp;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> url<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u83B7\u53D6\u7A97\u53E3\u53EF\u89C6\u8303\u56F4\u7684\u9AD8\u5EA6" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6\u7A97\u53E3\u53EF\u89C6\u8303\u56F4\u7684\u9AD8\u5EA6" aria-hidden="true">#</a> \u83B7\u53D6\u7A97\u53E3\u53EF\u89C6\u8303\u56F4\u7684\u9AD8\u5EA6</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getClientHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> clientHeight <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>clientHeight <span class="token operator">&amp;&amp;</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientHeight<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    clientHeight <span class="token operator">=</span>
      document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>clientHeight <span class="token operator">&lt;</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientHeight
        <span class="token operator">?</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>clientHeight
        <span class="token operator">:</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientHeight<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    clientHeight <span class="token operator">=</span>
      document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>clientHeight <span class="token operator">&gt;</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientHeight
        <span class="token operator">?</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>clientHeight
        <span class="token operator">:</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientHeight<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> clientHeight<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u83B7\u53D6\u7A97\u53E3\u53EF\u89C6\u8303\u56F4\u5BBD\u5EA6" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6\u7A97\u53E3\u53EF\u89C6\u8303\u56F4\u5BBD\u5EA6" aria-hidden="true">#</a> \u83B7\u53D6\u7A97\u53E3\u53EF\u89C6\u8303\u56F4\u5BBD\u5EA6</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getPageViewWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> d <span class="token operator">=</span> document<span class="token punctuation">,</span>
    a <span class="token operator">=</span> d<span class="token punctuation">.</span>compatMode <span class="token operator">==</span> <span class="token string">&quot;BackCompat&quot;</span> <span class="token operator">?</span> d<span class="token punctuation">.</span>body <span class="token operator">:</span> d<span class="token punctuation">.</span>documentElement<span class="token punctuation">;</span>
  <span class="token keyword">return</span> a<span class="token punctuation">.</span>clientWidth<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u83B7\u53D6\u7A97\u53E3\u5BBD\u5EA6" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6\u7A97\u53E3\u5BBD\u5EA6" aria-hidden="true">#</a> \u83B7\u53D6\u7A97\u53E3\u5BBD\u5EA6</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getPageWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> g <span class="token operator">=</span> document<span class="token punctuation">,</span>
    a <span class="token operator">=</span> g<span class="token punctuation">.</span>body<span class="token punctuation">,</span>
    f <span class="token operator">=</span> g<span class="token punctuation">.</span>documentElement<span class="token punctuation">,</span>
    d <span class="token operator">=</span> g<span class="token punctuation">.</span>compatMode <span class="token operator">==</span> <span class="token string">&quot;BackCompat&quot;</span> <span class="token operator">?</span> a <span class="token operator">:</span> g<span class="token punctuation">.</span>documentElement<span class="token punctuation">;</span>
  <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>scrollWidth<span class="token punctuation">,</span> a<span class="token punctuation">.</span>scrollWidth<span class="token punctuation">,</span> d<span class="token punctuation">.</span>clientWidth<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u83B7\u53D6\u7A97\u53E3\u5C3A\u5BF8" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6\u7A97\u53E3\u5C3A\u5BF8" aria-hidden="true">#</a> \u83B7\u53D6\u7A97\u53E3\u5C3A\u5BF8</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getViewportOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">w</span><span class="token operator">:</span> window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">,</span>
      <span class="token literal-property property">h</span><span class="token operator">:</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// ie8\u53CA\u5176\u4EE5\u4E0B</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>compatMode <span class="token operator">===</span> <span class="token string">&quot;BackCompat&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u602A\u5F02\u6A21\u5F0F</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">w</span><span class="token operator">:</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>clientWidth<span class="token punctuation">,</span>
        <span class="token literal-property property">h</span><span class="token operator">:</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>clientHeight<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u6807\u51C6\u6A21\u5F0F</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">w</span><span class="token operator">:</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientWidth<span class="token punctuation">,</span>
        <span class="token literal-property property">h</span><span class="token operator">:</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientHeight<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u83B7\u53D6\u6EDA\u52A8\u6761\u8DDD\u9876\u90E8\u9AD8\u5EA6" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6\u6EDA\u52A8\u6761\u8DDD\u9876\u90E8\u9AD8\u5EA6" aria-hidden="true">#</a> \u83B7\u53D6\u6EDA\u52A8\u6761\u8DDD\u9876\u90E8\u9AD8\u5EA6</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getPageScrollTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> a <span class="token operator">=</span> document<span class="token punctuation">;</span>
  <span class="token keyword">return</span> a<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollTop <span class="token operator">||</span> a<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollTop<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u83B7\u53D6\u6EDA\u52A8\u6761\u8DDD\u5DE6\u8FB9\u7684\u9AD8\u5EA6" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6\u6EDA\u52A8\u6761\u8DDD\u5DE6\u8FB9\u7684\u9AD8\u5EA6" aria-hidden="true">#</a> \u83B7\u53D6\u6EDA\u52A8\u6761\u8DDD\u5DE6\u8FB9\u7684\u9AD8\u5EA6</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getPageScrollLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> a <span class="token operator">=</span> document<span class="token punctuation">;</span>
  <span class="token keyword">return</span> a<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollLeft <span class="token operator">||</span> a<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollLeft<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5F00\u542F\u5168\u5C4F" tabindex="-1"><a class="header-anchor" href="#\u5F00\u542F\u5168\u5C4F" aria-hidden="true">#</a> \u5F00\u542F\u5168\u5C4F</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">element</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">launchFullscreen</span><span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>element<span class="token punctuation">.</span>requestFullscreen<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    element<span class="token punctuation">.</span><span class="token function">requestFullscreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>element<span class="token punctuation">.</span>mozRequestFullScreen<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    element<span class="token punctuation">.</span><span class="token function">mozRequestFullScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>element<span class="token punctuation">.</span>msRequestFullscreen<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    element<span class="token punctuation">.</span><span class="token function">msRequestFullscreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>element<span class="token punctuation">.</span>webkitRequestFullscreen<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    element<span class="token punctuation">.</span><span class="token function">webkitRequestFullScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5173\u95ED\u5168\u5C4F" tabindex="-1"><a class="header-anchor" href="#\u5173\u95ED\u5168\u5C4F" aria-hidden="true">#</a> \u5173\u95ED\u5168\u5C4F</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">exitFullscreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>exitFullscreen<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    document<span class="token punctuation">.</span><span class="token function">exitFullscreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>msExitFullscreen<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    document<span class="token punctuation">.</span><span class="token function">msExitFullscreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>mozCancelFullScreen<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    document<span class="token punctuation">.</span><span class="token function">mozCancelFullScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>webkitExitFullscreen<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    document<span class="token punctuation">.</span><span class="token function">webkitExitFullscreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8FD4\u56DE\u5F53\u524D\u6EDA\u52A8\u6761\u4F4D\u7F6E" tabindex="-1"><a class="header-anchor" href="#\u8FD4\u56DE\u5F53\u524D\u6EDA\u52A8\u6761\u4F4D\u7F6E" aria-hidden="true">#</a> \u8FD4\u56DE\u5F53\u524D\u6EDA\u52A8\u6761\u4F4D\u7F6E</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getScrollPosition</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">el <span class="token operator">=</span> window</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">x</span><span class="token operator">:</span> el<span class="token punctuation">.</span>pageXOffset <span class="token operator">!==</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> el<span class="token punctuation">.</span>pageXOffset <span class="token operator">:</span> el<span class="token punctuation">.</span>scrollLeft<span class="token punctuation">,</span>
  <span class="token literal-property property">y</span><span class="token operator">:</span> el<span class="token punctuation">.</span>pageYOffset <span class="token operator">!==</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> el<span class="token punctuation">.</span>pageYOffset <span class="token operator">:</span> el<span class="token punctuation">.</span>scrollTop<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6EDA\u52A8\u5230\u6307\u5B9A\u5143\u7D20\u533A\u57DF" tabindex="-1"><a class="header-anchor" href="#\u6EDA\u52A8\u5230\u6307\u5B9A\u5143\u7D20\u533A\u57DF" aria-hidden="true">#</a> \u6EDA\u52A8\u5230\u6307\u5B9A\u5143\u7D20\u533A\u57DF</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">smoothScroll</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scrollIntoView</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">behavior</span><span class="token operator">:</span> <span class="token string">&quot;smooth&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5E73\u6ED1\u6EDA\u52A8\u5230\u9875\u9762\u9876\u90E8" tabindex="-1"><a class="header-anchor" href="#\u5E73\u6ED1\u6EDA\u52A8\u5230\u9875\u9762\u9876\u90E8" aria-hidden="true">#</a> \u5E73\u6ED1\u6EDA\u52A8\u5230\u9875\u9762\u9876\u90E8</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">scrollToTop</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> c <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollTop <span class="token operator">||</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollTop<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    window<span class="token punctuation">.</span><span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>scrollToTop<span class="token punctuation">)</span><span class="token punctuation">;</span>
    window<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> c <span class="token operator">-</span> c <span class="token operator">/</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="http-\u8DF3\u8F6C-https" tabindex="-1"><a class="header-anchor" href="#http-\u8DF3\u8F6C-https" aria-hidden="true">#</a> http \u8DF3\u8F6C https</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">httpsRedirect</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>location<span class="token punctuation">.</span>protocol <span class="token operator">!==</span> <span class="token string">&quot;https:&quot;</span><span class="token punctuation">)</span>
    location<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;https://&quot;</span> <span class="token operator">+</span> location<span class="token punctuation">.</span>href<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;//&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u68C0\u67E5\u9875\u9762\u5E95\u90E8\u662F\u5426\u53EF\u89C1" tabindex="-1"><a class="header-anchor" href="#\u68C0\u67E5\u9875\u9762\u5E95\u90E8\u662F\u5426\u53EF\u89C1" aria-hidden="true">#</a> \u68C0\u67E5\u9875\u9762\u5E95\u90E8\u662F\u5426\u53EF\u89C1</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">bottomVisible</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientHeight <span class="token operator">+</span> window<span class="token punctuation">.</span>scrollY <span class="token operator">&gt;=</span>
    <span class="token punctuation">(</span>document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollHeight <span class="token operator">||</span>
      document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientHeight<span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6253\u5F00\u4E00\u4E2A\u7A97\u53E3" tabindex="-1"><a class="header-anchor" href="#\u6253\u5F00\u4E00\u4E2A\u7A97\u53E3" aria-hidden="true">#</a> \u6253\u5F00\u4E00\u4E2A\u7A97\u53E3</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">url</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">windowName</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> number <span class="token punctuation">}</span></span> <span class="token parameter">width</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> number <span class="token punctuation">}</span></span> <span class="token parameter">height</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">openWindow</span><span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> windowName<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span>width <span class="token operator">/</span> <span class="token number">2.0</span><span class="token punctuation">)</span> <span class="token operator">-</span> width <span class="token operator">/</span> <span class="token number">2.0</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> y <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span>height <span class="token operator">/</span> <span class="token number">2.0</span><span class="token punctuation">)</span> <span class="token operator">-</span> height <span class="token operator">/</span> <span class="token number">2.0</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> isMSIE <span class="token operator">=</span> navigator<span class="token punctuation">.</span>appName <span class="token operator">==</span> <span class="token string">&quot;Microsoft Internet Explorer&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>isMSIE<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> p <span class="token operator">=</span> <span class="token string">&quot;resizable=1,location=no,scrollbars=no,width=&quot;</span><span class="token punctuation">;</span>
    p <span class="token operator">=</span> p <span class="token operator">+</span> width<span class="token punctuation">;</span>
    p <span class="token operator">=</span> p <span class="token operator">+</span> <span class="token string">&quot;,height=&quot;</span><span class="token punctuation">;</span>
    p <span class="token operator">=</span> p <span class="token operator">+</span> height<span class="token punctuation">;</span>
    p <span class="token operator">=</span> p <span class="token operator">+</span> <span class="token string">&quot;,left=&quot;</span><span class="token punctuation">;</span>
    p <span class="token operator">=</span> p <span class="token operator">+</span> x<span class="token punctuation">;</span>
    p <span class="token operator">=</span> p <span class="token operator">+</span> <span class="token string">&quot;,top=&quot;</span><span class="token punctuation">;</span>
    p <span class="token operator">=</span> p <span class="token operator">+</span> y<span class="token punctuation">;</span>
    window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> windowName<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> win <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>
      url<span class="token punctuation">,</span>
      <span class="token string">&quot;ZyiisPopup&quot;</span><span class="token punctuation">,</span>
      <span class="token string">&quot;top=&quot;</span> <span class="token operator">+</span>
        y <span class="token operator">+</span>
        <span class="token string">&quot;,left=&quot;</span> <span class="token operator">+</span>
        x <span class="token operator">+</span>
        <span class="token string">&quot;,scrollbars=&quot;</span> <span class="token operator">+</span>
        scrollbars <span class="token operator">+</span>
        <span class="token string">&quot;,dialog=yes,modal=yes,width=&quot;</span> <span class="token operator">+</span>
        width <span class="token operator">+</span>
        <span class="token string">&quot;,height=&quot;</span> <span class="token operator">+</span>
        height <span class="token operator">+</span>
        <span class="token string">&quot;,resizable=no&quot;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">&quot;try { win.resizeTo(width, height); } catch(e) { }&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    win<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u81EA\u9002\u5E94\u9875\u9762-rem" tabindex="-1"><a class="header-anchor" href="#\u81EA\u9002\u5E94\u9875\u9762-rem" aria-hidden="true">#</a> \u81EA\u9002\u5E94\u9875\u9762\uFF08rem\uFF09</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> number <span class="token punctuation">}</span></span> <span class="token parameter">width</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">AutoResponse</span><span class="token punctuation">(</span><span class="token parameter">width <span class="token operator">=</span> <span class="token number">750</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> target <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">;</span>
  target<span class="token punctuation">.</span>clientWidth <span class="token operator">&gt;=</span> <span class="token number">600</span>
    <span class="token operator">?</span> <span class="token punctuation">(</span>target<span class="token punctuation">.</span>style<span class="token punctuation">.</span>fontSize <span class="token operator">=</span> <span class="token string">&quot;80px&quot;</span><span class="token punctuation">)</span>
    <span class="token operator">:</span> <span class="token punctuation">(</span>target<span class="token punctuation">.</span>style<span class="token punctuation">.</span>fontSize <span class="token operator">=</span> <span class="token punctuation">(</span>target<span class="token punctuation">.</span>clientWidth <span class="token operator">/</span> width<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span> <span class="token operator">+</span> <span class="token string">&quot;px&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u65E5\u671F\u5DE5\u5177-date-\u5DE5\u5177\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u65E5\u671F\u5DE5\u5177-date-\u5DE5\u5177\u51FD\u6570" aria-hidden="true">#</a> \u65E5\u671F\u5DE5\u5177 date \u5DE5\u5177\u51FD\u6570</h3><p>\u53EF\u4EE5\u53C2\u8003\u6211\u7684\u53E6\u4E00\u7BC7\u6587\u7AE0\u300A\u524D\u7AEF\u7684\u5404\u79CD\u65E5\u671F\u64CD\u4F5C\u300B\uFF0C\u6216\u8005\u76F4\u63A5\u5230\u6211\u7684 GitHub \u67E5\u770B \u6D4F\u89C8\u5668\u5B58\u50A8\u76F8\u5173 storage \u5DE5\u5177\u51FD\u6570 \u4E3B\u8981\u4E3A\u6D4F\u89C8\u5668\u5B58\u50A8\u65B9\u9762\u7684\u5DE5\u5177\u51FD\u6570\uFF0C\u5927\u90E8\u5206\u642C\u8FD0\u81EA\u5927\u795E\u706B\u72FC 1</p><h3 id="localstorage-\u5B58\u8D2E" tabindex="-1"><a class="header-anchor" href="#localstorage-\u5B58\u8D2E" aria-hidden="true">#</a> localStorage \u5B58\u8D2E</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * \u76EE\u524D\u5BF9\u8C61\u503C\u5982\u679C\u662F\u51FD\u6570 \u3001RegExp\u7B49\u7279\u6B8A\u5BF9\u8C61\u5B58\u8D2E\u4F1A\u88AB\u5FFD\u7565
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> String <span class="token punctuation">}</span></span> <span class="token parameter">key</span>  \u5C5E\u6027
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">value</span> \u503C
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">localStorageSet</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> value <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">)</span> value <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="localstorage-\u83B7\u53D6" tabindex="-1"><a class="header-anchor" href="#localstorage-\u83B7\u53D6" aria-hidden="true">#</a> localStorage \u83B7\u53D6</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">key</span>  \u5C5E\u6027
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">localStorageGet</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="localstorage-\u79FB\u9664" tabindex="-1"><a class="header-anchor" href="#localstorage-\u79FB\u9664" aria-hidden="true">#</a> localStorage \u79FB\u9664</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">key</span>  \u5C5E\u6027
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">localStorageRemove</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  localStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="localstorage-\u5B58\u8D2E\u67D0\u4E00\u6BB5\u65F6\u95F4\u5931\u6548" tabindex="-1"><a class="header-anchor" href="#localstorage-\u5B58\u8D2E\u67D0\u4E00\u6BB5\u65F6\u95F4\u5931\u6548" aria-hidden="true">#</a> localStorage \u5B58\u8D2E\u67D0\u4E00\u6BB5\u65F6\u95F4\u5931\u6548</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">key</span>  \u5C5E\u6027
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">value</span> \u5B58\u8D2E\u503C
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> number <span class="token punctuation">}</span></span> <span class="token parameter">expire</span> \u8FC7\u671F\u65F6\u95F4,\u6BEB\u79D2\u6570
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">localStorageSetExpire</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> expire</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> value <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">)</span> value <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    localStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> expire<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sessionstorage-\u5B58\u8D2E" tabindex="-1"><a class="header-anchor" href="#sessionstorage-\u5B58\u8D2E" aria-hidden="true">#</a> sessionStorage \u5B58\u8D2E</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">key</span>  \u5C5E\u6027
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">value</span> \u503C
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">sessionStorageSet</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> value <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">)</span> value <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  sessionStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sessionstorage-\u83B7\u53D6" tabindex="-1"><a class="header-anchor" href="#sessionstorage-\u83B7\u53D6" aria-hidden="true">#</a> sessionStorage \u83B7\u53D6</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">key</span>  \u5C5E\u6027
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">sessionStorageGet</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> sessionStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sessionstorage-\u5220\u9664" tabindex="-1"><a class="header-anchor" href="#sessionstorage-\u5220\u9664" aria-hidden="true">#</a> sessionStorage \u5220\u9664</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">key</span>  \u5C5E\u6027
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">sessionStorageRemove</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  sessionStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sessionstorage-\u5B58\u8D2E\u67D0\u4E00\u6BB5\u65F6\u95F4\u5931\u6548" tabindex="-1"><a class="header-anchor" href="#sessionstorage-\u5B58\u8D2E\u67D0\u4E00\u6BB5\u65F6\u95F4\u5931\u6548" aria-hidden="true">#</a> sessionStorage \u5B58\u8D2E\u67D0\u4E00\u6BB5\u65F6\u95F4\u5931\u6548</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">key</span>  \u5C5E\u6027
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">value</span> \u5B58\u8D2E\u503C
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">expire</span> \u8FC7\u671F\u65F6\u95F4,\u6BEB\u79D2\u6570
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">sessionStorageSetExpire</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> expire</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> value <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">)</span> value <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  sessionStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    sessionStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> expire<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cookie-\u5B58\u8D2E" tabindex="-1"><a class="header-anchor" href="#cookie-\u5B58\u8D2E" aria-hidden="true">#</a> cookie \u5B58\u8D2E</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">key</span>  \u5C5E\u6027
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">value</span>  \u503C
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> String <span class="token punctuation">}</span></span> <span class="token parameter">expire</span>  \u8FC7\u671F\u65F6\u95F4,\u5355\u4F4D\u5929
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">cookieSet</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> expire</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> d <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  d<span class="token punctuation">.</span><span class="token function">setDate</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> expire<span class="token punctuation">)</span><span class="token punctuation">;</span>
  document<span class="token punctuation">.</span>cookie <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;expires=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>d<span class="token punctuation">.</span><span class="token function">toUTCString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cookie-\u83B7\u53D6" tabindex="-1"><a class="header-anchor" href="#cookie-\u83B7\u53D6" aria-hidden="true">#</a> cookie \u83B7\u53D6</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">key</span>  \u5C5E\u6027
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">cookieGet</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> cookieStr <span class="token operator">=</span> <span class="token function">unescape</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>cookie<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> arr <span class="token operator">=</span> cookieStr<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> cookieValue <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      cookieValue <span class="token operator">=</span> temp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> cookieValue<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cookie-\u5220\u9664" tabindex="-1"><a class="header-anchor" href="#cookie-\u5220\u9664" aria-hidden="true">#</a> cookie \u5220\u9664</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">key</span>  \u5C5E\u6027
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">cookieRemove</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  document<span class="token punctuation">.</span>cookie <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">=;expires=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u66F4\u591A\u7684\u5DE5\u5177\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u66F4\u591A\u7684\u5DE5\u5177\u51FD\u6570" aria-hidden="true">#</a> \u66F4\u591A\u7684\u5DE5\u5177\u51FD\u6570</h3><p>\u8FD9\u91CC\u5305\u542B\u4E86\u5E73\u65F6\u53EF\u80FD\u5E38\u7528\u7684\u5DE5\u5177\u51FD\u6570\uFF0C\u5305\u542B\u6570\u5B57\uFF0C\u5B57\u7B26\u4E32\uFF0C\u6570\u7EC4\u548C\u5BF9\u8C61\u7B49\u7B49\u64CD\u4F5C\u3002</p><h3 id="\u91D1\u94B1\u683C\u5F0F\u5316-\u4E09\u4F4D\u52A0\u9017\u53F7" tabindex="-1"><a class="header-anchor" href="#\u91D1\u94B1\u683C\u5F0F\u5316-\u4E09\u4F4D\u52A0\u9017\u53F7" aria-hidden="true">#</a> \u91D1\u94B1\u683C\u5F0F\u5316\uFF0C\u4E09\u4F4D\u52A0\u9017\u53F7</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 *  <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> number <span class="token punctuation">}</span></span> <span class="token parameter">num</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">formatMoney</span> <span class="token operator">=</span> <span class="token parameter">num</span> <span class="token operator">=&gt;</span> num<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\B(?=(\\d{3})+(?!\\d))</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
### \u622A\u53D6\u5B57\u7B26\u4E32\u5E76\u52A0\u8EAB\u7565\u53F7
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">subText</span><span class="token punctuation">(</span><span class="token parameter">str<span class="token punctuation">,</span> length</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> length<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> str<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u83B7\u53D6\u6587\u4EF6-base64-\u7F16\u7801" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6\u6587\u4EF6-base64-\u7F16\u7801" aria-hidden="true">#</a> \u83B7\u53D6\u6587\u4EF6 base64 \u7F16\u7801</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token parameter">file</span>
 * <span class="token keyword">@param</span> <span class="token parameter">format</span>  \u6307\u5B9A\u6587\u4EF6\u683C\u5F0F
 * <span class="token keyword">@param</span> <span class="token parameter">size</span>  \u6307\u5B9A\u6587\u4EF6\u5927\u5C0F(\u5B57\u8282)
 * <span class="token keyword">@param</span> <span class="token parameter">formatMsg</span> \u683C\u5F0F\u9519\u8BEF\u63D0\u793A
 * <span class="token keyword">@param</span> <span class="token parameter">sizeMsg</span>   \u5927\u5C0F\u8D85\u51FA\u9650\u5236\u63D0\u793A
 * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span>Promise<span class="token punctuation">&lt;</span>any<span class="token punctuation">&gt;</span><span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">fileToBase64String</span><span class="token punctuation">(</span>
  file<span class="token punctuation">,</span>
  format <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;jpg&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jpeg&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;png&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;gif&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  size <span class="token operator">=</span> <span class="token number">20</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">,</span>
  formatMsg <span class="token operator">=</span> <span class="token string">&quot;\u6587\u4EF6\u683C\u5F0F\u4E0D\u6B63\u786E&quot;</span><span class="token punctuation">,</span>
  sizeMsg <span class="token operator">=</span> <span class="token string">&quot;\u6587\u4EF6\u5927\u5C0F\u8D85\u51FA\u9650\u5236&quot;</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u683C\u5F0F\u8FC7\u6EE4</span>
    <span class="token keyword">let</span> suffix <span class="token operator">=</span> file<span class="token punctuation">.</span>type<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> inFormat <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> format<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>suffix <span class="token operator">===</span> format<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        inFormat <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>inFormat<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">reject</span><span class="token punctuation">(</span>formatMsg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5927\u5C0F\u8FC7\u6EE4</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>size <span class="token operator">&gt;</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">reject</span><span class="token punctuation">(</span>sizeMsg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u8F6Cbase64\u5B57\u7B26\u4E32</span>
    <span class="token keyword">let</span> fileReader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    fileReader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    fileReader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> res <span class="token operator">=</span> fileReader<span class="token punctuation">.</span>result<span class="token punctuation">;</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">base64String</span><span class="token operator">:</span> res<span class="token punctuation">,</span> <span class="token literal-property property">suffix</span><span class="token operator">:</span> suffix <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F02\u5E38\u6587\u4EF6\uFF0C\u8BF7\u91CD\u65B0\u9009\u62E9&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="b-\u8F6C\u6362\u5230-kb-mb-gb-\u5E76\u4FDD\u7559\u4E24\u4F4D\u5C0F\u6570" tabindex="-1"><a class="header-anchor" href="#b-\u8F6C\u6362\u5230-kb-mb-gb-\u5E76\u4FDD\u7559\u4E24\u4F4D\u5C0F\u6570" aria-hidden="true">#</a> B \u8F6C\u6362\u5230 KB,MB,GB \u5E76\u4FDD\u7559\u4E24\u4F4D\u5C0F\u6570</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> number <span class="token punctuation">}</span></span> <span class="token parameter">fileSize</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">formatFileSize</span><span class="token punctuation">(</span><span class="token parameter">fileSize</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> temp<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>fileSize <span class="token operator">&lt;</span> <span class="token number">1024</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> fileSize <span class="token operator">+</span> <span class="token string">&quot;B&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>fileSize <span class="token operator">&lt;</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    temp <span class="token operator">=</span> fileSize <span class="token operator">/</span> <span class="token number">1024</span><span class="token punctuation">;</span>
    temp <span class="token operator">=</span> temp<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> temp <span class="token operator">+</span> <span class="token string">&quot;KB&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>fileSize <span class="token operator">&lt;</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    temp <span class="token operator">=</span> fileSize <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    temp <span class="token operator">=</span> temp<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> temp <span class="token operator">+</span> <span class="token string">&quot;MB&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    temp <span class="token operator">=</span> fileSize <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    temp <span class="token operator">=</span> temp<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> temp <span class="token operator">+</span> <span class="token string">&quot;GB&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="base64-\u8F6C-file" tabindex="-1"><a class="header-anchor" href="#base64-\u8F6C-file" aria-hidden="true">#</a> base64 \u8F6C file</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 *  <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> base64 <span class="token punctuation">}</span></span> <span class="token parameter">base64</span>
 *  <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">filename</span> \u8F6C\u6362\u540E\u7684\u6587\u4EF6\u540D
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">base64ToFile</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">base64<span class="token punctuation">,</span> filename</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> arr <span class="token operator">=</span> base64<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> mime <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">:(.*?);</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> suffix <span class="token operator">=</span> mime<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u56FE\u7247\u540E\u7F00</span>
  <span class="token keyword">let</span> bstr <span class="token operator">=</span> <span class="token function">atob</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> n <span class="token operator">=</span> bstr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">let</span> u8arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>n<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    u8arr<span class="token punctuation">[</span>n<span class="token punctuation">]</span> <span class="token operator">=</span> bstr<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token punctuation">[</span>u8arr<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>filename<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>suffix<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> mime <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="base64-\u8F6C-blob" tabindex="-1"><a class="header-anchor" href="#base64-\u8F6C-blob" aria-hidden="true">#</a> base64 \u8F6C blob</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 *  <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> base64 <span class="token punctuation">}</span></span> <span class="token parameter">base64</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">base64ToBlob</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">base64</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> arr <span class="token operator">=</span> base64<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    mime <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">:(.*?);</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    bstr <span class="token operator">=</span> <span class="token function">atob</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    n <span class="token operator">=</span> bstr<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
    u8arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>n<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    u8arr<span class="token punctuation">[</span>n<span class="token punctuation">]</span> <span class="token operator">=</span> bstr<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span>u8arr<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> mime <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blob-\u8F6C-file" tabindex="-1"><a class="header-anchor" href="#blob-\u8F6C-file" aria-hidden="true">#</a> blob \u8F6C file</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 *  <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> blob <span class="token punctuation">}</span></span> <span class="token parameter">blob</span>
 *  <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">fileName</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">blobToFile</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">blob<span class="token punctuation">,</span> fileName</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  blob<span class="token punctuation">.</span>lastModifiedDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  blob<span class="token punctuation">.</span>name <span class="token operator">=</span> fileName<span class="token punctuation">;</span>
  <span class="token keyword">return</span> blob<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="file-\u8F6C-base64" tabindex="-1"><a class="header-anchor" href="#file-\u8F6C-base64" aria-hidden="true">#</a> file \u8F6C base64</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> <span class="token operator">*</span> <span class="token punctuation">}</span></span> <span class="token parameter">file</span> \u56FE\u7247\u6587\u4EF6
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">fileToBase64</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
  reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9012\u5F52\u751F\u6210\u6811\u5F62\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#\u9012\u5F52\u751F\u6210\u6811\u5F62\u7ED3\u6784" aria-hidden="true">#</a> \u9012\u5F52\u751F\u6210\u6811\u5F62\u7ED3\u6784</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getTreeData</span><span class="token punctuation">(</span>
  data<span class="token punctuation">,</span>
  pid<span class="token punctuation">,</span>
  pidName <span class="token operator">=</span> <span class="token string">&quot;parentId&quot;</span><span class="token punctuation">,</span>
  idName <span class="token operator">=</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span>
  childrenName <span class="token operator">=</span> <span class="token string">&quot;children&quot;</span><span class="token punctuation">,</span>
  key
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> data<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>pidName<span class="token punctuation">]</span> <span class="token operator">==</span> pid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>key <span class="token operator">=</span> data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>idName<span class="token punctuation">]</span><span class="token punctuation">;</span>
      data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>childrenName<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">getTreeData</span><span class="token punctuation">(</span>
        data<span class="token punctuation">,</span>
        data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>idName<span class="token punctuation">]</span><span class="token punctuation">,</span>
        pidName<span class="token punctuation">,</span>
        idName<span class="token punctuation">,</span>
        childrenName
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
      arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u904D\u5386\u6811\u8282\u70B9" tabindex="-1"><a class="header-anchor" href="#\u904D\u5386\u6811\u8282\u70B9" aria-hidden="true">#</a> \u904D\u5386\u6811\u8282\u70B9</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">foreachTree</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> childrenName <span class="token operator">=</span> <span class="token string">&quot;children&quot;</span><span class="token punctuation">,</span> callback<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> data<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">callback</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>childrenName<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>childrenName<span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">foreachTree</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>childrenName<span class="token punctuation">]</span><span class="token punctuation">,</span> childrenName<span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8FFD\u6EAF\u7236\u8282\u70B9" tabindex="-1"><a class="header-anchor" href="#\u8FFD\u6EAF\u7236\u8282\u70B9" aria-hidden="true">#</a> \u8FFD\u6EAF\u7236\u8282\u70B9</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">traceParentNode</span><span class="token punctuation">(</span>
  pid<span class="token punctuation">,</span>
  data<span class="token punctuation">,</span>
  rootPid<span class="token punctuation">,</span>
  pidName <span class="token operator">=</span> <span class="token string">&quot;parentId&quot;</span><span class="token punctuation">,</span>
  idName <span class="token operator">=</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span>
  childrenName <span class="token operator">=</span> <span class="token string">&quot;children&quot;</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token function">foreachTree</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> childrenName<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">[</span>idName<span class="token punctuation">]</span> <span class="token operator">==</span> pid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">[</span>pidName<span class="token punctuation">]</span> <span class="token operator">!=</span> rootPid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        arr <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>
          <span class="token function">traceParentNode</span><span class="token punctuation">(</span>node<span class="token punctuation">[</span>pidName<span class="token punctuation">]</span><span class="token punctuation">,</span> data<span class="token punctuation">,</span> rootPid<span class="token punctuation">,</span> pidName<span class="token punctuation">,</span> idName<span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5BFB\u627E\u6240\u6709\u5B50\u8282\u70B9" tabindex="-1"><a class="header-anchor" href="#\u5BFB\u627E\u6240\u6709\u5B50\u8282\u70B9" aria-hidden="true">#</a> \u5BFB\u627E\u6240\u6709\u5B50\u8282\u70B9</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">traceChildNode</span><span class="token punctuation">(</span>
  id<span class="token punctuation">,</span>
  data<span class="token punctuation">,</span>
  pidName <span class="token operator">=</span> <span class="token string">&quot;parentId&quot;</span><span class="token punctuation">,</span>
  idName <span class="token operator">=</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span>
  childrenName <span class="token operator">=</span> <span class="token string">&quot;children&quot;</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token function">foreachTree</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> childrenName<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">[</span>pidName<span class="token punctuation">]</span> <span class="token operator">==</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
      arr <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>
        <span class="token function">traceChildNode</span><span class="token punctuation">(</span>node<span class="token punctuation">[</span>idName<span class="token punctuation">]</span><span class="token punctuation">,</span> data<span class="token punctuation">,</span> pidName<span class="token punctuation">,</span> idName<span class="token punctuation">,</span> childrenName<span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6839\u636E-pid-\u751F\u6210\u6811\u5F62\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#\u6839\u636E-pid-\u751F\u6210\u6811\u5F62\u7ED3\u6784" aria-hidden="true">#</a> \u6839\u636E pid \u751F\u6210\u6811\u5F62\u7ED3\u6784</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 *  <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> object <span class="token punctuation">}</span></span> <span class="token parameter">items</span> \u540E\u53F0\u83B7\u53D6\u7684\u6570\u636E
 *  <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> <span class="token operator">*</span> <span class="token punctuation">}</span></span> <span class="token parameter">id</span> \u6570\u636E\u4E2D\u7684id
 *  <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> <span class="token operator">*</span> <span class="token punctuation">}</span></span> <span class="token parameter">link</span> \u751F\u6210\u6811\u5F62\u7ED3\u6784\u7684\u4F9D\u636E
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> createTree <span class="token operator">=</span> <span class="token punctuation">(</span>items<span class="token punctuation">,</span> id <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> link <span class="token operator">=</span> <span class="token string">&quot;pid&quot;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  items
    <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">[</span>link<span class="token punctuation">]</span> <span class="token operator">===</span> id<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token operator">...</span>item<span class="token punctuation">,</span> <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token function">createTree</span><span class="token punctuation">(</span>items<span class="token punctuation">,</span> item<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u67E5\u8BE2\u6570\u7EC4\u4E2D\u662F\u5426\u5B58\u5728\u67D0\u4E2A\u5143\u7D20\u5E76\u8FD4\u56DE\u5143\u7D20\u7B2C\u4E00\u6B21\u51FA\u73B0\u7684\u4E0B\u6807" tabindex="-1"><a class="header-anchor" href="#\u67E5\u8BE2\u6570\u7EC4\u4E2D\u662F\u5426\u5B58\u5728\u67D0\u4E2A\u5143\u7D20\u5E76\u8FD4\u56DE\u5143\u7D20\u7B2C\u4E00\u6B21\u51FA\u73B0\u7684\u4E0B\u6807" aria-hidden="true">#</a> \u67E5\u8BE2\u6570\u7EC4\u4E2D\u662F\u5426\u5B58\u5728\u67D0\u4E2A\u5143\u7D20\u5E76\u8FD4\u56DE\u5143\u7D20\u7B2C\u4E00\u6B21\u51FA\u73B0\u7684\u4E0B\u6807</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">item</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> array <span class="token punctuation">}</span></span> <span class="token parameter">data</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">inArray</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> data<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>item <span class="token operator">===</span> data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="windows-\u6839\u636E\u8BE6\u7EC6\u7248\u672C\u53F7\u5224\u65AD\u5F53\u524D\u7CFB\u7EDF\u540D\u79F0" tabindex="-1"><a class="header-anchor" href="#windows-\u6839\u636E\u8BE6\u7EC6\u7248\u672C\u53F7\u5224\u65AD\u5F53\u524D\u7CFB\u7EDF\u540D\u79F0" aria-hidden="true">#</a> Windows \u6839\u636E\u8BE6\u7EC6\u7248\u672C\u53F7\u5224\u65AD\u5F53\u524D\u7CFB\u7EDF\u540D\u79F0</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">osVersion</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">OutOsName</span><span class="token punctuation">(</span><span class="token parameter">osVersion</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>osVersion<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> str <span class="token operator">=</span> osVersion<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>str <span class="token operator">===</span> <span class="token string">&quot;5.0&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;Win 2000&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>str <span class="token operator">===</span> <span class="token string">&quot;5.1&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;Win XP&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>str <span class="token operator">===</span> <span class="token string">&quot;5.2&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;Win XP64&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>str <span class="token operator">===</span> <span class="token string">&quot;6.0&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;Win Vista&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>str <span class="token operator">===</span> <span class="token string">&quot;6.1&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;Win 7&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>str <span class="token operator">===</span> <span class="token string">&quot;6.2&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;Win 8&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>str <span class="token operator">===</span> <span class="token string">&quot;6.3&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;Win 8.1&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>str <span class="token operator">===</span> <span class="token string">&quot;10.&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;Win 10&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;Win&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5224\u65AD\u624B\u673A\u662F-andoird-\u8FD8\u662F-ios" tabindex="-1"><a class="header-anchor" href="#\u5224\u65AD\u624B\u673A\u662F-andoird-\u8FD8\u662F-ios" aria-hidden="true">#</a> \u5224\u65AD\u624B\u673A\u662F Andoird \u8FD8\u662F IOS</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 *  0: ios
 *  1: android
 *  2: \u5176\u5B83
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getOSType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> u <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">,</span>
    app <span class="token operator">=</span> navigator<span class="token punctuation">.</span>appVersion<span class="token punctuation">;</span>
  <span class="token keyword">let</span> isAndroid <span class="token operator">=</span> u<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;Android&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">||</span> u<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;Linux&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> isIOS <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>u<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\(i[^;]+;( U;)? CPU.+Mac OS X</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>isIOS<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>isAndroid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u51FD\u6570\u9632\u6296" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u9632\u6296" aria-hidden="true">#</a> \u51FD\u6570\u9632\u6296</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> <span class="token keyword">function</span> <span class="token punctuation">}</span></span> <span class="token parameter">func</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> number <span class="token punctuation">}</span></span> <span class="token parameter">wait</span> \u5EF6\u8FDF\u6267\u884C\u6BEB\u79D2\u6570
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> boolean <span class="token punctuation">}</span></span> <span class="token parameter">immediate</span>  true \u8868\u7ACB\u5373\u6267\u884C\uFF0Cfalse \u8868\u975E\u7ACB\u5373\u6267\u884C
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">debounce</span><span class="token punctuation">(</span><span class="token parameter">func<span class="token punctuation">,</span> wait<span class="token punctuation">,</span> immediate</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> timeout<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> context <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> args <span class="token operator">=</span> arguments<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>timeout<span class="token punctuation">)</span> <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>immediate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> callNow <span class="token operator">=</span> <span class="token operator">!</span>timeout<span class="token punctuation">;</span>
      timeout <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        timeout <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> wait<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>callNow<span class="token punctuation">)</span> <span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      timeout <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> wait<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u51FD\u6570\u8282\u6D41" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u8282\u6D41" aria-hidden="true">#</a> \u51FD\u6570\u8282\u6D41</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> <span class="token keyword">function</span> <span class="token punctuation">}</span></span> <span class="token parameter">func</span> \u51FD\u6570
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> number <span class="token punctuation">}</span></span> <span class="token parameter">wait</span> \u5EF6\u8FDF\u6267\u884C\u6BEB\u79D2\u6570
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> number <span class="token punctuation">}</span></span> <span class="token parameter">type</span> 1 \u8868\u65F6\u95F4\u6233\u7248\uFF0C2 \u8868\u5B9A\u65F6\u5668\u7248
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">throttle</span><span class="token punctuation">(</span><span class="token parameter">func<span class="token punctuation">,</span> wait<span class="token punctuation">,</span> type</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> previous<span class="token punctuation">,</span> timeout<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    previous <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    timeout <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> context <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> args <span class="token operator">=</span> arguments<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> now <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>now <span class="token operator">-</span> previous <span class="token operator">&gt;</span> wait<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
        previous <span class="token operator">=</span> now<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>timeout<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        timeout <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          timeout <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
          <span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> wait<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5224\u65AD\u6570\u636E\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u5224\u65AD\u6570\u636E\u7C7B\u578B" aria-hidden="true">#</a> \u5224\u65AD\u6570\u636E\u7C7B\u578B</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">target</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">type</span><span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> ret <span class="token operator">=</span> <span class="token keyword">typeof</span> target<span class="token punctuation">;</span>
  <span class="token keyword">let</span> template <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;[object Array]&quot;</span><span class="token operator">:</span> <span class="token string">&quot;array&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;[object Object]&quot;</span><span class="token operator">:</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;[object Number]&quot;</span><span class="token operator">:</span> <span class="token string">&quot;number - object&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;[object Boolean]&quot;</span><span class="token operator">:</span> <span class="token string">&quot;boolean - object&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;[object String]&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string-object&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;null&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ret <span class="token operator">==</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> template<span class="token punctuation">[</span>str<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u751F\u6210\u6307\u5B9A\u8303\u56F4\u968F\u673A\u6570" tabindex="-1"><a class="header-anchor" href="#\u751F\u6210\u6307\u5B9A\u8303\u56F4\u968F\u673A\u6570" aria-hidden="true">#</a> \u751F\u6210\u6307\u5B9A\u8303\u56F4\u968F\u673A\u6570</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> number <span class="token punctuation">}</span></span> <span class="token parameter">min</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> number <span class="token punctuation">}</span></span> <span class="token parameter">max</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">RandomNum</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">min<span class="token punctuation">,</span> max</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>max <span class="token operator">-</span> min <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> min<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6570\u7EC4\u4E71\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u4E71\u5E8F" aria-hidden="true">#</a> \u6570\u7EC4\u4E71\u5E8F</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>array<span class="token punctuation">}</span></span> <span class="token parameter">arr</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">arrScrambling</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> array <span class="token operator">=</span> arr<span class="token punctuation">;</span>
  <span class="token keyword">let</span> index <span class="token operator">=</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    index <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> randomIndex <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> middleware <span class="token operator">=</span> array<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
    array<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> array<span class="token punctuation">[</span>randomIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>
    array<span class="token punctuation">[</span>randomIndex<span class="token punctuation">]</span> <span class="token operator">=</span> middleware<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> array<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6570\u7EC4\u4EA4\u96C6" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u4EA4\u96C6" aria-hidden="true">#</a> \u6570\u7EC4\u4EA4\u96C6</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> array<span class="token punctuation">}</span></span> <span class="token parameter">arr1</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> array <span class="token punctuation">}</span></span> <span class="token parameter">arr2</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">similarity</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr1<span class="token punctuation">,</span> arr2</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> arr1<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> arr2<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6570\u7EC4\u4E2D\u67D0\u5143\u7D20\u51FA\u73B0\u7684\u6B21\u6570" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u4E2D\u67D0\u5143\u7D20\u51FA\u73B0\u7684\u6B21\u6570" aria-hidden="true">#</a> \u6570\u7EC4\u4E2D\u67D0\u5143\u7D20\u51FA\u73B0\u7684\u6B21\u6570</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> array <span class="token punctuation">}</span></span> <span class="token parameter">arr</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">value</span>
 */</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">countOccurrences</span><span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> v</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>v <span class="token operator">===</span> value <span class="token operator">?</span> a <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">:</span> a <span class="token operator">+</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u52A0\u6CD5\u51FD\u6570-\u7CBE\u5EA6\u4E22\u5931\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u52A0\u6CD5\u51FD\u6570-\u7CBE\u5EA6\u4E22\u5931\u95EE\u9898" aria-hidden="true">#</a> \u52A0\u6CD5\u51FD\u6570\uFF08\u7CBE\u5EA6\u4E22\u5931\u95EE\u9898\uFF09</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> number <span class="token punctuation">}</span></span> <span class="token parameter">arg1</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> number <span class="token punctuation">}</span></span> <span class="token parameter">arg2</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">arg1<span class="token punctuation">,</span> arg2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> r1<span class="token punctuation">,</span> r2<span class="token punctuation">,</span> m<span class="token punctuation">;</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    r1 <span class="token operator">=</span> arg1<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    r1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    r2 <span class="token operator">=</span> arg2<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    r2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  m <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>r1<span class="token punctuation">,</span> r2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>arg1 <span class="token operator">*</span> m <span class="token operator">+</span> arg2 <span class="token operator">*</span> m<span class="token punctuation">)</span> <span class="token operator">/</span> m<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u51CF\u6CD5\u51FD\u6570-\u7CBE\u5EA6\u4E22\u5931\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u51CF\u6CD5\u51FD\u6570-\u7CBE\u5EA6\u4E22\u5931\u95EE\u9898" aria-hidden="true">#</a> \u51CF\u6CD5\u51FD\u6570\uFF08\u7CBE\u5EA6\u4E22\u5931\u95EE\u9898\uFF09</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> number <span class="token punctuation">}</span></span> <span class="token parameter">arg1</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> number <span class="token punctuation">}</span></span> <span class="token parameter">arg2</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">sub</span><span class="token punctuation">(</span><span class="token parameter">arg1<span class="token punctuation">,</span> arg2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> r1<span class="token punctuation">,</span> r2<span class="token punctuation">,</span> m<span class="token punctuation">,</span> n<span class="token punctuation">;</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    r1 <span class="token operator">=</span> arg1<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    r1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    r2 <span class="token operator">=</span> arg2<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    r2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  m <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>r1<span class="token punctuation">,</span> r2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  n <span class="token operator">=</span> r1 <span class="token operator">&gt;=</span> r2 <span class="token operator">?</span> r1 <span class="token operator">:</span> r2<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">Number</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>arg1 <span class="token operator">*</span> m <span class="token operator">-</span> arg2 <span class="token operator">*</span> m<span class="token punctuation">)</span> <span class="token operator">/</span> m<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9664\u6CD5\u51FD\u6570-\u7CBE\u5EA6\u4E22\u5931\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u9664\u6CD5\u51FD\u6570-\u7CBE\u5EA6\u4E22\u5931\u95EE\u9898" aria-hidden="true">#</a> \u9664\u6CD5\u51FD\u6570\uFF08\u7CBE\u5EA6\u4E22\u5931\u95EE\u9898\uFF09</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> number <span class="token punctuation">}</span></span> <span class="token parameter">num1</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> number <span class="token punctuation">}</span></span> <span class="token parameter">num2</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">division</span><span class="token punctuation">(</span><span class="token parameter">num1<span class="token punctuation">,</span> num2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> t1<span class="token punctuation">,</span> t2<span class="token punctuation">,</span> r1<span class="token punctuation">,</span> r2<span class="token punctuation">;</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    t1 <span class="token operator">=</span> num1<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    t1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    t2 <span class="token operator">=</span> num2<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    t2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  r1 <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>num1<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  r2 <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>num2<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>r1 <span class="token operator">/</span> r2<span class="token punctuation">)</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> t2 <span class="token operator">-</span> t1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4E58\u6CD5\u51FD\u6570-\u7CBE\u5EA6\u4E22\u5931\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u4E58\u6CD5\u51FD\u6570-\u7CBE\u5EA6\u4E22\u5931\u95EE\u9898" aria-hidden="true">#</a> \u4E58\u6CD5\u51FD\u6570\uFF08\u7CBE\u5EA6\u4E22\u5931\u95EE\u9898\uFF09</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> number <span class="token punctuation">}</span></span> <span class="token parameter">num1</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> number <span class="token punctuation">}</span></span> <span class="token parameter">num2</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">mcl</span><span class="token punctuation">(</span><span class="token parameter">num1<span class="token punctuation">,</span> num2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> m <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    s1 <span class="token operator">=</span> num1<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    s2 <span class="token operator">=</span> num2<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    m <span class="token operator">+=</span> s1<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    m <span class="token operator">+=</span> s2<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span>s1<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token function">Number</span><span class="token punctuation">(</span>s2<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span>
    Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> m<span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9012\u5F52\u4F18\u5316-\u5C3E\u9012\u5F52" tabindex="-1"><a class="header-anchor" href="#\u9012\u5F52\u4F18\u5316-\u5C3E\u9012\u5F52" aria-hidden="true">#</a> \u9012\u5F52\u4F18\u5316\uFF08\u5C3E\u9012\u5F52\uFF09</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> <span class="token keyword">function</span> <span class="token punctuation">}</span></span> <span class="token parameter">f</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">tco</span><span class="token punctuation">(</span><span class="token parameter">f</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> value<span class="token punctuation">;</span>
  <span class="token keyword">let</span> active <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> accumulated <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">accumulator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    accumulated<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>active<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      active <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span>accumulated<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        value <span class="token operator">=</span> <span class="token function">f</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> accumulated<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      active <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u751F\u6210\u968F\u673A\u6574\u6570" tabindex="-1"><a class="header-anchor" href="#\u751F\u6210\u968F\u673A\u6574\u6570" aria-hidden="true">#</a> \u751F\u6210\u968F\u673A\u6574\u6570</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">randomNumInteger</span><span class="token punctuation">(</span><span class="token parameter">min<span class="token punctuation">,</span> max</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>arguments<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> min <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>max <span class="token operator">-</span> min <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> min<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">default</span><span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u53BB\u9664\u7A7A\u683C" tabindex="-1"><a class="header-anchor" href="#\u53BB\u9664\u7A7A\u683C" aria-hidden="true">#</a> \u53BB\u9664\u7A7A\u683C</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">str</span> \u5F85\u5904\u7406\u5B57\u7B26\u4E32
 * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token punctuation">{</span> number <span class="token punctuation">}</span></span> <span class="token parameter">type</span> \u53BB\u9664\u7A7A\u683C\u7C7B\u578B 1-\u6240\u6709\u7A7A\u683C  2-\u524D\u540E\u7A7A\u683C  3-\u524D\u7A7A\u683C 4-\u540E\u7A7A\u683C \u9ED8\u8BA4\u4E3A1
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token parameter">str<span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token number">1</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">&amp;&amp;</span> type <span class="token operator">!==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> type <span class="token operator">!==</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> type <span class="token operator">!==</span> <span class="token number">3</span> <span class="token operator">&amp;&amp;</span> type <span class="token operator">!==</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>
      <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\s</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>
      <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(^\\s)|(\\s*$)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>
      <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(^\\s)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>
      <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\s$)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">default</span><span class="token operator">:</span>
      <span class="token keyword">return</span> str<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5927\u5C0F\u5199\u8F6C\u6362" tabindex="-1"><a class="header-anchor" href="#\u5927\u5C0F\u5199\u8F6C\u6362" aria-hidden="true">#</a> \u5927\u5C0F\u5199\u8F6C\u6362</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">str</span> \u5F85\u8F6C\u6362\u7684\u5B57\u7B26\u4E32
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> number <span class="token punctuation">}</span></span> <span class="token parameter">type</span> 1-\u5168\u5927\u5199 2-\u5168\u5C0F\u5199 3-\u9996\u5B57\u6BCD\u5927\u5199 \u5176\u4ED6-\u4E0D\u8F6C\u6362
 */</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">turnCase</span><span class="token punctuation">(</span><span class="token parameter">str<span class="token punctuation">,</span> type</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>
      <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>
      <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>
      <span class="token keyword">return</span> str<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> str<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">default</span><span class="token operator">:</span>
      <span class="token keyword">return</span> str<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u968F\u673A-16-\u8FDB\u5236\u989C\u8272-hexcolor" tabindex="-1"><a class="header-anchor" href="#\u968F\u673A-16-\u8FDB\u5236\u989C\u8272-hexcolor" aria-hidden="true">#</a> \u968F\u673A 16 \u8FDB\u5236\u989C\u8272 hexColor</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * \u65B9\u6CD5\u4E00
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">hexColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&quot;#&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;B&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;C&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;D&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;E&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;F&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> index <span class="token operator">=</span> Number<span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    str <span class="token operator">+=</span> arr<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> str<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u968F\u673A-16-\u8FDB\u5236\u989C\u8272-randomhexcolorcode" tabindex="-1"><a class="header-anchor" href="#\u968F\u673A-16-\u8FDB\u5236\u989C\u8272-randomhexcolorcode" aria-hidden="true">#</a> \u968F\u673A 16 \u8FDB\u5236\u989C\u8272 randomHexColorCode</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * \u65B9\u6CD5\u4E8C
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">randomHexColorCode</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> n <span class="token operator">=</span> <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0xfffff</span> <span class="token operator">*</span> <span class="token number">1000000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token string">&quot;#&quot;</span> <span class="token operator">+</span> n<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8F6C\u4E49-html-\u9632-xss-\u653B\u51FB" tabindex="-1"><a class="header-anchor" href="#\u8F6C\u4E49-html-\u9632-xss-\u653B\u51FB" aria-hidden="true">#</a> \u8F6C\u4E49 html(\u9632 XSS \u653B\u51FB)</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">escapeHTML</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>
    <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[&amp;&lt;&gt;&#39;&quot;]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token parameter">tag</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
      <span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token string-property property">&quot;&amp;&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&amp;amp;&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;&lt;&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&amp;lt;&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;&gt;&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&amp;gt;&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;&#39;&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&amp;#39;&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&#39;&quot;&#39;</span><span class="token operator">:</span> <span class="token string">&quot;&amp;quot;&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">[</span>tag<span class="token punctuation">]</span> <span class="token operator">||</span> tag<span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u68C0\u6D4B\u79FB\u52A8-pc-\u8BBE\u5907" tabindex="-1"><a class="header-anchor" href="#\u68C0\u6D4B\u79FB\u52A8-pc-\u8BBE\u5907" aria-hidden="true">#</a> \u68C0\u6D4B\u79FB\u52A8/PC \u8BBE\u5907</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">detectDeviceType</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>
    navigator<span class="token punctuation">.</span>userAgent
  <span class="token punctuation">)</span>
    <span class="token operator">?</span> <span class="token string">&quot;Mobile&quot;</span>
    <span class="token operator">:</span> <span class="token string">&quot;Desktop&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9690\u85CF\u6240\u6709\u6307\u5B9A\u6807\u7B7E" tabindex="-1"><a class="header-anchor" href="#\u9690\u85CF\u6240\u6709\u6307\u5B9A\u6807\u7B7E" aria-hidden="true">#</a> \u9690\u85CF\u6240\u6709\u6307\u5B9A\u6807\u7B7E</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * \u4F8B: hide(document.querySelectorAll(&#39;img&#39;))
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">hideTag</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>el</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token punctuation">[</span><span class="token operator">...</span>el<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">&quot;none&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8FD4\u56DE\u6307\u5B9A\u5143\u7D20\u7684\u751F\u6548\u6837\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u8FD4\u56DE\u6307\u5B9A\u5143\u7D20\u7684\u751F\u6548\u6837\u5F0F" aria-hidden="true">#</a> \u8FD4\u56DE\u6307\u5B9A\u5143\u7D20\u7684\u751F\u6548\u6837\u5F0F</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> element<span class="token punctuation">}</span></span> <span class="token parameter">el</span>  \u5143\u7D20\u8282\u70B9
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> string <span class="token punctuation">}</span></span> <span class="token parameter">ruleName</span>  \u6307\u5B9A\u5143\u7D20\u7684\u540D\u79F0
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getStyle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> ruleName</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">getComputedStyle</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">[</span>ruleName<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u68C0\u67E5\u662F\u5426\u5305\u542B\u5B50\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#\u68C0\u67E5\u662F\u5426\u5305\u542B\u5B50\u5143\u7D20" aria-hidden="true">#</a> \u68C0\u67E5\u662F\u5426\u5305\u542B\u5B50\u5143\u7D20</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> element <span class="token punctuation">}</span></span> <span class="token parameter">parent</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> element <span class="token punctuation">}</span></span> <span class="token parameter">child</span>
 * \u4F8B\uFF1AelementContains(document.querySelector(&#39;head&#39;), document.querySelector(&#39;title&#39;)); // true
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">elementContains</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">parent<span class="token punctuation">,</span> child</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  parent <span class="token operator">!==</span> child <span class="token operator">&amp;&amp;</span> parent<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6570\u5B57\u8D85\u8FC7\u89C4\u5B9A\u5927\u5C0F\u52A0\u4E0A\u52A0\u53F7-\u5982\u6570\u5B57\u8D85\u8FC7-99-\u663E\u793A-99" tabindex="-1"><a class="header-anchor" href="#\u6570\u5B57\u8D85\u8FC7\u89C4\u5B9A\u5927\u5C0F\u52A0\u4E0A\u52A0\u53F7-\u5982\u6570\u5B57\u8D85\u8FC7-99-\u663E\u793A-99" aria-hidden="true">#</a> \u6570\u5B57\u8D85\u8FC7\u89C4\u5B9A\u5927\u5C0F\u52A0\u4E0A\u52A0\u53F7\u201C+\u201D\uFF0C\u5982\u6570\u5B57\u8D85\u8FC7 99 \u663E\u793A 99+</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> number <span class="token punctuation">}</span></span> <span class="token parameter">val</span> \u8F93\u5165\u7684\u6570\u5B57
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> number <span class="token punctuation">}</span></span> <span class="token parameter">maxNum</span> \u6570\u5B57\u89C4\u5B9A\u754C\u9650
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">outOfNum</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">val<span class="token punctuation">,</span> maxNum</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  val <span class="token operator">=</span> val <span class="token operator">?</span> val <span class="token operator">-</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>val <span class="token operator">&gt;</span> maxNum<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>maxNum<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">+</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> val<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8F93\u5165\u4E00\u4E2A\u503C-\u8FD4\u56DE\u5176\u6570\u636E\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u8F93\u5165\u4E00\u4E2A\u503C-\u8FD4\u56DE\u5176\u6570\u636E\u7C7B\u578B" aria-hidden="true">#</a> \u8F93\u5165\u4E00\u4E2A\u503C\uFF0C\u8FD4\u56DE\u5176\u6570\u636E\u7C7B\u578B</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">type</span><span class="token punctuation">(</span><span class="token parameter">para</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>para<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6570\u7EC4\u53BB\u91CD" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u53BB\u91CD" aria-hidden="true">#</a> \u6570\u7EC4\u53BB\u91CD</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">unique1</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">unique2</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">ele</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>obj<span class="token punctuation">[</span>ele<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      obj<span class="token punctuation">[</span>ele<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">unique3</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">ele</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5B57\u7B26\u4E32\u53BB\u91CD" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u4E32\u53BB\u91CD" aria-hidden="true">#</a> \u5B57\u7B26\u4E32\u53BB\u91CD</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">String</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">unique</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    str <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
    len <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>obj<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      str <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
      obj<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> str<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u53BB\u9664\u8FDE\u7EED\u7684\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#\u53BB\u9664\u8FDE\u7EED\u7684\u5B57\u7B26\u4E32" aria-hidden="true">#</a> \u53BB\u9664\u8FDE\u7EED\u7684\u5B57\u7B26\u4E32</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">uniq</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\w)\\1+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;$1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6DF1\u62F7\u8D1D-\u6D45\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#\u6DF1\u62F7\u8D1D-\u6D45\u62F7\u8D1D" aria-hidden="true">#</a> \u6DF1\u62F7\u8D1D \u6D45\u62F7\u8D1D</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u6DF1\u514B\u9686\uFF08\u6DF1\u514B\u9686\u4E0D\u8003\u8651\u51FD\u6570\uFF09</span>
<span class="token keyword">function</span> <span class="token function">deepClone</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> result</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> result <span class="token operator">=</span> result <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> prop <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>prop<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> obj<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&quot;object&quot;</span> <span class="token operator">&amp;&amp;</span> obj<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5F15\u7528\u503C(obj/array)\u4E14\u4E0D\u4E3Anull</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&quot;[object Object]&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u5BF9\u8C61</span>
          result<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u6570\u7EC4</span>
          result<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">deepClone</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">,</span> result<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u539F\u59CB\u503C\u6216func</span>
        result<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">=</span> obj<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6DF1\u6D45\u514B\u9686\u662F\u9488\u5BF9\u5F15\u7528\u503C</span>
<span class="token keyword">function</span> <span class="token function">deepClone</span><span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> target <span class="token operator">!==</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> target<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">var</span> result<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&quot;[object Array]&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6570\u7EC4</span>
    result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5BF9\u8C61</span>
    result <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> prop <span class="token keyword">in</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>prop<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      result<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>target<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u65E0\u6CD5\u590D\u5236\u51FD\u6570</span>
<span class="token keyword">var</span> o1 <span class="token operator">=</span> jsON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>jsON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="reverse-\u5E95\u5C42\u539F\u7406\u548C\u6269\u5C55" tabindex="-1"><a class="header-anchor" href="#reverse-\u5E95\u5C42\u539F\u7406\u548C\u6269\u5C55" aria-hidden="true">#</a> reverse \u5E95\u5C42\u539F\u7406\u548C\u6269\u5C55</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6539\u53D8\u539F\u6570\u7EC4</span>
<span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">myReverse</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> len <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> temp <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">[</span>len <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">[</span>len <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> i<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5723\u676F\u6A21\u5F0F\u7684\u7EE7\u627F" tabindex="-1"><a class="header-anchor" href="#\u5723\u676F\u6A21\u5F0F\u7684\u7EE7\u627F" aria-hidden="true">#</a> \u5723\u676F\u6A21\u5F0F\u7684\u7EE7\u627F</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">inherit</span><span class="token punctuation">(</span><span class="token parameter">Target<span class="token punctuation">,</span> Origin</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">function</span> <span class="token constant">F</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token class-name">F</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token class-name">Origin</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
  <span class="token class-name">Target</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">F</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">Target</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor <span class="token operator">=</span> Target<span class="token punctuation">;</span>
  <span class="token comment">// \u6700\u7EC8\u7684\u539F\u578B\u6307\u5411</span>
  Target<span class="token punctuation">.</span>prop<span class="token punctuation">.</span>uber <span class="token operator">=</span> <span class="token class-name">Origin</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u627E\u51FA\u5B57\u7B26\u4E32\u4E2D\u7B2C\u4E00\u6B21\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u5B57\u6BCD" tabindex="-1"><a class="header-anchor" href="#\u627E\u51FA\u5B57\u7B26\u4E32\u4E2D\u7B2C\u4E00\u6B21\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u5B57\u6BCD" aria-hidden="true">#</a> \u627E\u51FA\u5B57\u7B26\u4E32\u4E2D\u7B2C\u4E00\u6B21\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u5B57\u6BCD</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">String</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">firstAppear</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    len <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      obj<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      obj<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> prop <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> prop<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u627E\u5143\u7D20\u7684\u7B2C-n-\u7EA7\u7236\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#\u627E\u5143\u7D20\u7684\u7B2C-n-\u7EA7\u7236\u5143\u7D20" aria-hidden="true">#</a> \u627E\u5143\u7D20\u7684\u7B2C n \u7EA7\u7236\u5143\u7D20</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">parents</span><span class="token punctuation">(</span><span class="token parameter">ele<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>ele <span class="token operator">&amp;&amp;</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ele <span class="token operator">=</span> ele<span class="token punctuation">.</span>parentElement <span class="token operator">?</span> ele<span class="token punctuation">.</span>parentElement <span class="token operator">:</span> ele<span class="token punctuation">.</span>parentNode<span class="token punctuation">;</span>
    n<span class="token operator">--</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> ele<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8FD4\u56DE\u5143\u7D20\u7684\u7B2C-n-\u4E2A\u5144\u5F1F\u8282\u70B9" tabindex="-1"><a class="header-anchor" href="#\u8FD4\u56DE\u5143\u7D20\u7684\u7B2C-n-\u4E2A\u5144\u5F1F\u8282\u70B9" aria-hidden="true">#</a> \u8FD4\u56DE\u5143\u7D20\u7684\u7B2C n \u4E2A\u5144\u5F1F\u8282\u70B9</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">retSibling</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>e <span class="token operator">&amp;&amp;</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>nextElementSibling<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        e <span class="token operator">=</span> e<span class="token punctuation">.</span>nextElementSibling<span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span>e <span class="token operator">=</span> e<span class="token punctuation">.</span>nextSibling<span class="token punctuation">;</span> e <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>nodeType <span class="token operator">!==</span> <span class="token number">1</span><span class="token punctuation">;</span> e <span class="token operator">=</span> e<span class="token punctuation">.</span>nextSibling<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      n<span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>previousElementSibling<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        e <span class="token operator">=</span> e<span class="token punctuation">.</span>previousElementSibling<span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span>
          e <span class="token operator">=</span> e<span class="token punctuation">.</span>previousElementSibling<span class="token punctuation">;</span>
          e <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>nodeType <span class="token operator">!==</span> <span class="token number">1</span><span class="token punctuation">;</span>
          e <span class="token operator">=</span> e<span class="token punctuation">.</span>previousElementSibling
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      n<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> e<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5C01\u88C5-mychildren-\u89E3\u51B3\u6D4F\u89C8\u5668\u7684\u517C\u5BB9\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u5C01\u88C5-mychildren-\u89E3\u51B3\u6D4F\u89C8\u5668\u7684\u517C\u5BB9\u95EE\u9898" aria-hidden="true">#</a> \u5C01\u88C5 mychildren\uFF0C\u89E3\u51B3\u6D4F\u89C8\u5668\u7684\u517C\u5BB9\u95EE\u9898</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">myChildren</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> children <span class="token operator">=</span> e<span class="token punctuation">.</span>childNodes<span class="token punctuation">,</span>
    arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    len <span class="token operator">=</span> children<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>children<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>nodeType <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>children<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5224\u65AD\u5143\u7D20\u6709\u6CA1\u6709\u5B50\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#\u5224\u65AD\u5143\u7D20\u6709\u6CA1\u6709\u5B50\u5143\u7D20" aria-hidden="true">#</a> \u5224\u65AD\u5143\u7D20\u6709\u6CA1\u6709\u5B50\u5143\u7D20</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">hasChildren</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> children <span class="token operator">=</span> e<span class="token punctuation">.</span>childNodes<span class="token punctuation">,</span>
    len <span class="token operator">=</span> children<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>children<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>nodeType <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6211\u4E00\u4E2A\u5143\u7D20\u63D2\u5165\u5230\u53E6\u4E00\u4E2A\u5143\u7D20\u7684\u540E\u9762" tabindex="-1"><a class="header-anchor" href="#\u6211\u4E00\u4E2A\u5143\u7D20\u63D2\u5165\u5230\u53E6\u4E00\u4E2A\u5143\u7D20\u7684\u540E\u9762" aria-hidden="true">#</a> \u6211\u4E00\u4E2A\u5143\u7D20\u63D2\u5165\u5230\u53E6\u4E00\u4E2A\u5143\u7D20\u7684\u540E\u9762</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Element</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">insertAfter</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> elen</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> nextElen <span class="token operator">=</span> elen<span class="token punctuation">.</span>nextElenmentSibling<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>nextElen <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> nextElen<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8FD4\u56DE\u5F53\u524D\u7684\u65F6\u95F4-\u5E74\u6708\u65E5\u65F6\u5206\u79D2" tabindex="-1"><a class="header-anchor" href="#\u8FD4\u56DE\u5F53\u524D\u7684\u65F6\u95F4-\u5E74\u6708\u65E5\u65F6\u5206\u79D2" aria-hidden="true">#</a> \u8FD4\u56DE\u5F53\u524D\u7684\u65F6\u95F4\uFF08\u5E74\u6708\u65E5\u65F6\u5206\u79D2\uFF09</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getDateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    year <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    month <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>
    day <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    hour <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>
    minute <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    second <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  month <span class="token operator">=</span> <span class="token function">checkTime</span><span class="token punctuation">(</span>month<span class="token punctuation">)</span><span class="token punctuation">;</span>
  day <span class="token operator">=</span> <span class="token function">checkTime</span><span class="token punctuation">(</span>day<span class="token punctuation">)</span><span class="token punctuation">;</span>
  hour <span class="token operator">=</span> <span class="token function">checkTime</span><span class="token punctuation">(</span>hour<span class="token punctuation">)</span><span class="token punctuation">;</span>
  minute <span class="token operator">=</span> <span class="token function">checkTime</span><span class="token punctuation">(</span>minute<span class="token punctuation">)</span><span class="token punctuation">;</span>
  second <span class="token operator">=</span> <span class="token function">checkTime</span><span class="token punctuation">(</span>second<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">function</span> <span class="token function">checkTime</span><span class="token punctuation">(</span><span class="token parameter">i</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      i <span class="token operator">=</span> <span class="token string">&quot;0&quot;</span> <span class="token operator">+</span> i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> i<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;&quot;</span> <span class="token operator">+</span>
    year <span class="token operator">+</span>
    <span class="token string">&quot;\u5E74&quot;</span> <span class="token operator">+</span>
    month <span class="token operator">+</span>
    <span class="token string">&quot;\u6708&quot;</span> <span class="token operator">+</span>
    day <span class="token operator">+</span>
    <span class="token string">&quot;\u65E5&quot;</span> <span class="token operator">+</span>
    hour <span class="token operator">+</span>
    <span class="token string">&quot;\u65F6&quot;</span> <span class="token operator">+</span>
    minute <span class="token operator">+</span>
    <span class="token string">&quot;\u5206&quot;</span> <span class="token operator">+</span>
    second <span class="token operator">+</span>
    <span class="token string">&quot;\u79D2&quot;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u83B7\u5F97\u6EDA\u52A8\u6761\u7684\u6EDA\u52A8\u8DDD\u79BB" tabindex="-1"><a class="header-anchor" href="#\u83B7\u5F97\u6EDA\u52A8\u6761\u7684\u6EDA\u52A8\u8DDD\u79BB" aria-hidden="true">#</a> \u83B7\u5F97\u6EDA\u52A8\u6761\u7684\u6EDA\u52A8\u8DDD\u79BB</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getScrollOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>pageXOffset<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">x</span><span class="token operator">:</span> window<span class="token punctuation">.</span>pageXOffset<span class="token punctuation">,</span>
      <span class="token literal-property property">y</span><span class="token operator">:</span> window<span class="token punctuation">.</span>pageYOffset<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">x</span><span class="token operator">:</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollLeft <span class="token operator">+</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollLeft<span class="token punctuation">,</span>
      <span class="token literal-property property">y</span><span class="token operator">:</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollTop <span class="token operator">+</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollTop<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u83B7\u5F97\u89C6\u53E3\u7684\u5C3A\u5BF8" tabindex="-1"><a class="header-anchor" href="#\u83B7\u5F97\u89C6\u53E3\u7684\u5C3A\u5BF8" aria-hidden="true">#</a> \u83B7\u5F97\u89C6\u53E3\u7684\u5C3A\u5BF8</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getViewportOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">w</span><span class="token operator">:</span> window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">,</span>
      <span class="token literal-property property">h</span><span class="token operator">:</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// ie8\u53CA\u5176\u4EE5\u4E0B</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>compatMode <span class="token operator">===</span> <span class="token string">&quot;BackCompat&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u602A\u5F02\u6A21\u5F0F</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">w</span><span class="token operator">:</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>clientWidth<span class="token punctuation">,</span>
        <span class="token literal-property property">h</span><span class="token operator">:</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>clientHeight<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u6807\u51C6\u6A21\u5F0F</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">w</span><span class="token operator">:</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientWidth<span class="token punctuation">,</span>
        <span class="token literal-property property">h</span><span class="token operator">:</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientHeight<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u83B7\u53D6\u4EFB\u4E00\u5143\u7D20\u7684\u4EFB\u610F\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6\u4EFB\u4E00\u5143\u7D20\u7684\u4EFB\u610F\u5C5E\u6027" aria-hidden="true">#</a> \u83B7\u53D6\u4EFB\u4E00\u5143\u7D20\u7684\u4EFB\u610F\u5C5E\u6027</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getStyle</span><span class="token punctuation">(</span><span class="token parameter">elem<span class="token punctuation">,</span> prop</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> window<span class="token punctuation">.</span>getComputedStyle
    <span class="token operator">?</span> window<span class="token punctuation">.</span><span class="token function">getComputedStyle</span><span class="token punctuation">(</span>elem<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">[</span>prop<span class="token punctuation">]</span>
    <span class="token operator">:</span> elem<span class="token punctuation">.</span>currentStyle<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7ED1\u5B9A\u4E8B\u4EF6\u7684\u517C\u5BB9\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u7ED1\u5B9A\u4E8B\u4EF6\u7684\u517C\u5BB9\u4EE3\u7801" aria-hidden="true">#</a> \u7ED1\u5B9A\u4E8B\u4EF6\u7684\u517C\u5BB9\u4EE3\u7801</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">addEvent</span><span class="token punctuation">(</span><span class="token parameter">elem<span class="token punctuation">,</span> type<span class="token punctuation">,</span> handle</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>elem<span class="token punctuation">.</span>addEventListener<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u975Eie\u548C\u975Eie9</span>
    elem<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> handle<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>elem<span class="token punctuation">.</span>attachEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//ie6\u5230ie8</span>
    elem<span class="token punctuation">.</span><span class="token function">attachEvent</span><span class="token punctuation">(</span><span class="token string">&quot;on&quot;</span> <span class="token operator">+</span> type<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">handle</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>elem<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    elem<span class="token punctuation">[</span><span class="token string">&quot;on&quot;</span> <span class="token operator">+</span> type<span class="token punctuation">]</span> <span class="token operator">=</span> handle<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u89E3\u7ED1\u4E8B\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u89E3\u7ED1\u4E8B\u4EF6" aria-hidden="true">#</a> \u89E3\u7ED1\u4E8B\u4EF6</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">removeEvent</span><span class="token punctuation">(</span><span class="token parameter">elem<span class="token punctuation">,</span> type<span class="token punctuation">,</span> handle</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>elem<span class="token punctuation">.</span>removeEventListener<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u975Eie\u548C\u975Eie9</span>
    elem<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> handle<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>elem<span class="token punctuation">.</span>detachEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//ie6\u5230ie8</span>
    elem<span class="token punctuation">.</span><span class="token function">detachEvent</span><span class="token punctuation">(</span><span class="token string">&quot;on&quot;</span> <span class="token operator">+</span> type<span class="token punctuation">,</span> handle<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    elem<span class="token punctuation">[</span><span class="token string">&quot;on&quot;</span> <span class="token operator">+</span> type<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u53D6\u6D88\u5192\u6CE1\u7684\u517C\u5BB9\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u53D6\u6D88\u5192\u6CE1\u7684\u517C\u5BB9\u4EE3\u7801" aria-hidden="true">#</a> \u53D6\u6D88\u5192\u6CE1\u7684\u517C\u5BB9\u4EE3\u7801</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">stopBubble</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>stopPropagation<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    e<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    window<span class="token punctuation">.</span>event<span class="token punctuation">.</span>cancelBubble <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u68C0\u9A8C\u5B57\u7B26\u4E32\u662F\u5426\u662F\u56DE\u6587" tabindex="-1"><a class="header-anchor" href="#\u68C0\u9A8C\u5B57\u7B26\u4E32\u662F\u5426\u662F\u56DE\u6587" aria-hidden="true">#</a> \u68C0\u9A8C\u5B57\u7B26\u4E32\u662F\u5426\u662F\u56DE\u6587</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">isPalina</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token string">&quot;[object String]&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">var</span> len <span class="token operator">=</span> str<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> str<span class="token punctuation">[</span>len <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u68C0\u9A8C\u5B57\u7B26\u4E32\u662F\u5426\u662F\u56DE\u6587-1" tabindex="-1"><a class="header-anchor" href="#\u68C0\u9A8C\u5B57\u7B26\u4E32\u662F\u5426\u662F\u56DE\u6587-1" aria-hidden="true">#</a> \u68C0\u9A8C\u5B57\u7B26\u4E32\u662F\u5426\u662F\u56DE\u6587</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">isPalindrome</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  str <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\W</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> str <span class="token operator">==</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u517C\u5BB9-getelementsbyclassname-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u517C\u5BB9-getelementsbyclassname-\u65B9\u6CD5" aria-hidden="true">#</a> \u517C\u5BB9 getElementsByClassName \u65B9\u6CD5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Element</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>getElementsByClassName <span class="token operator">=</span>
  <span class="token class-name">Document</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">getElementsByClassName</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">_className</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> allDomArray <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> lastDomArray <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">trimSpace</span><span class="token punctuation">(</span><span class="token parameter">strClass</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\s+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> strClass<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>reg<span class="token punctuation">,</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> allDomArray<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> classArray <span class="token operator">=</span> <span class="token function">trimSpace</span><span class="token punctuation">(</span>allDomArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>className<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> classArray<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>classArray<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> _className<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          lastDomArray<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>allDomArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> lastDomArray<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8FD0\u52A8\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u8FD0\u52A8\u51FD\u6570" aria-hidden="true">#</a> \u8FD0\u52A8\u51FD\u6570</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">animate</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> json<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">clearInterval</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> speed<span class="token punctuation">,</span> current<span class="token punctuation">;</span>
  obj<span class="token punctuation">.</span>timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> lock <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> prop <span class="token keyword">in</span> json<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>prop <span class="token operator">==</span> <span class="token string">&quot;opacity&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        current <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span><span class="token function">getComputedStyle</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        current <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span><span class="token function">getComputedStyle</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      speed <span class="token operator">=</span> <span class="token punctuation">(</span>json<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">-</span> current<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">7</span><span class="token punctuation">;</span>
      speed <span class="token operator">=</span> speed <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>speed<span class="token punctuation">)</span> <span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>speed<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>prop <span class="token operator">==</span> <span class="token string">&quot;opacity&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        obj<span class="token punctuation">.</span>style<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>current <span class="token operator">+</span> speed<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        obj<span class="token punctuation">.</span>style<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">=</span> current <span class="token operator">+</span> speed <span class="token operator">+</span> <span class="token string">&quot;px&quot;</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">!=</span> json<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        lock <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>lock<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">clearInterval</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">typeof</span> callback <span class="token operator">==</span> <span class="token string">&quot;function&quot;</span> <span class="token operator">?</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5F39\u6027\u8FD0\u52A8" tabindex="-1"><a class="header-anchor" href="#\u5F39\u6027\u8FD0\u52A8" aria-hidden="true">#</a> \u5F39\u6027\u8FD0\u52A8</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">ElasticMovement</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">clearInterval</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> iSpeed <span class="token operator">=</span> <span class="token number">40</span><span class="token punctuation">,</span>
    a<span class="token punctuation">,</span>
    u <span class="token operator">=</span> <span class="token number">0.8</span><span class="token punctuation">;</span>
  obj<span class="token punctuation">.</span>timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    a <span class="token operator">=</span> <span class="token punctuation">(</span>target <span class="token operator">-</span> obj<span class="token punctuation">.</span>offsetLeft<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">8</span><span class="token punctuation">;</span>
    iSpeed <span class="token operator">=</span> iSpeed <span class="token operator">+</span> a<span class="token punctuation">;</span>
    iSpeed <span class="token operator">=</span> iSpeed <span class="token operator">*</span> u<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>iSpeed<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;over&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">clearInterval</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>
      obj<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> target <span class="token operator">+</span> <span class="token string">&quot;px&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      obj<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> obj<span class="token punctuation">.</span>offsetLeft <span class="token operator">+</span> iSpeed <span class="token operator">+</span> <span class="token string">&quot;px&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5C01\u88C5\u81EA\u5DF1\u7684-foreach-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5C01\u88C5\u81EA\u5DF1\u7684-foreach-\u65B9\u6CD5" aria-hidden="true">#</a> \u5C01\u88C5\u81EA\u5DF1\u7684 forEach \u65B9\u6CD5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">myForEach</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">func<span class="token punctuation">,</span> obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> len <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">var</span> _this <span class="token operator">=</span> arguments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">?</span> arguments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">:</span> window<span class="token punctuation">;</span>
  <span class="token comment">// var _this=arguments[1]||window;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">func</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>_this<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5C01\u88C5\u81EA\u5DF1\u7684-filter-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5C01\u88C5\u81EA\u5DF1\u7684-filter-\u65B9\u6CD5" aria-hidden="true">#</a> \u5C01\u88C5\u81EA\u5DF1\u7684 filter \u65B9\u6CD5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">myFilter</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">func<span class="token punctuation">,</span> obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> len <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> _this <span class="token operator">=</span> arguments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">||</span> window<span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">func</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>_this<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6570\u7EC4-map-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4-map-\u65B9\u6CD5" aria-hidden="true">#</a> \u6570\u7EC4 map \u65B9\u6CD5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">myMap</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">func</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> len <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">var</span> _this <span class="token operator">=</span> arguments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">||</span> window<span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">func</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>_this<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6570\u7EC4-every-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4-every-\u65B9\u6CD5" aria-hidden="true">#</a> \u6570\u7EC4 every \u65B9\u6CD5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">myEvery</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">func</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> len <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">var</span> _this <span class="token operator">=</span> arguments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">||</span> window<span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>_this<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> flag<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6570\u7EC4-reduce-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4-reduce-\u65B9\u6CD5" aria-hidden="true">#</a> \u6570\u7EC4 reduce \u65B9\u6CD5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">myReduce</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">func<span class="token punctuation">,</span> initialValue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> len <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">,</span>
    nextValue<span class="token punctuation">,</span>
    i<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>initialValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6CA1\u6709\u4F20\u7B2C\u4E8C\u4E2A\u53C2\u6570</span>
    nextValue <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4F20\u4E86\u7B2C\u4E8C\u4E2A\u53C2\u6570</span>
    nextValue <span class="token operator">=</span> initialValue<span class="token punctuation">;</span>
    i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    nextValue <span class="token operator">=</span> <span class="token function">func</span><span class="token punctuation">(</span>nextValue<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> nextValue<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u83B7\u53D6-url-\u4E2D\u7684\u53C2\u6570-1" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6-url-\u4E2D\u7684\u53C2\u6570-1" aria-hidden="true">#</a> \u83B7\u53D6 url \u4E2D\u7684\u53C2\u6570\uFF081\uFF09</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getWindonHref</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> sHref <span class="token operator">=</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href<span class="token punctuation">;</span>
  <span class="token keyword">var</span> args <span class="token operator">=</span> sHref<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;?&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> sHref<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">var</span> hrefarr <span class="token operator">=</span> args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;#&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;&amp;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> hrefarr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    hrefarr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> hrefarr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    obj<span class="token punctuation">[</span>hrefarr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> hrefarr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> obj<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6570\u7EC4\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u6392\u5E8F" aria-hidden="true">#</a> \u6570\u7EC4\u6392\u5E8F</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5FEB\u6392 [left] + min + [right]</span>
<span class="token keyword">function</span> <span class="token function">quickArr</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">var</span> left <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    right <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> pIndex <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> p <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>pIndex<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> p<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      left<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      right<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u9012\u5F52</span>
  <span class="token keyword">return</span> <span class="token function">quickArr</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token function">quickArr</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u5192\u6CE1</span>
<span class="token keyword">function</span> <span class="token function">bubbleSort</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
        arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">bubbleSort</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> len <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> len <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
        arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u904D\u5386-dom-\u6811" tabindex="-1"><a class="header-anchor" href="#\u904D\u5386-dom-\u6811" aria-hidden="true">#</a> \u904D\u5386 Dom \u6811</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7ED9\u5B9A\u9875\u9762\u4E0A\u7684DOM\u5143\u7D20,\u5C06\u8BBF\u95EE\u5143\u7D20\u672C\u8EAB\u53CA\u5176\u6240\u6709\u540E\u4EE3(\u4E0D\u4EC5\u4EC5\u662F\u5B83\u7684\u76F4\u63A5\u5B50\u5143\u7D20)</span>
<span class="token comment">// \u5BF9\u4E8E\u6BCF\u4E2A\u8BBF\u95EE\u7684\u5143\u7D20\uFF0C\u51FD\u6570\u8BB2\u5143\u7D20\u4F20\u9012\u7ED9\u63D0\u4F9B\u7684\u56DE\u8C03\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">traverse</span><span class="token punctuation">(</span><span class="token parameter">element<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">callback</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> list <span class="token operator">=</span> element<span class="token punctuation">.</span>children<span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> list<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">traverse</span><span class="token punctuation">(</span>list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u539F\u751F-js-\u5C01\u88C5-ajax" tabindex="-1"><a class="header-anchor" href="#\u539F\u751F-js-\u5C01\u88C5-ajax" aria-hidden="true">#</a> \u539F\u751F js \u5C01\u88C5 ajax</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">ajax</span><span class="token punctuation">(</span><span class="token parameter">method<span class="token punctuation">,</span> url<span class="token punctuation">,</span> callback<span class="token punctuation">,</span> data<span class="token punctuation">,</span> flag</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> xhr<span class="token punctuation">;</span>
  flag <span class="token operator">=</span> flag <span class="token operator">||</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  method <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>XMLHttpRequest<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ActiveXObject</span><span class="token punctuation">(</span><span class="token string">&quot;Microsoft.XMLHttp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">==</span> <span class="token number">4</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">callback</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>method <span class="token operator">==</span> <span class="token string">&quot;GET&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      timer <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span> url <span class="token operator">+</span> <span class="token string">&quot;?&quot;</span> <span class="token operator">+</span> data <span class="token operator">+</span> <span class="token string">&quot;&amp;timer&quot;</span> <span class="token operator">+</span> timer<span class="token punctuation">,</span> flag<span class="token punctuation">)</span><span class="token punctuation">;</span>
    xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>method <span class="token operator">==</span> <span class="token string">&quot;POST&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> flag<span class="token punctuation">)</span><span class="token punctuation">;</span>
    xhr<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;application/x-www-form-urlencoded&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5F02\u6B65\u52A0\u8F7D-script" tabindex="-1"><a class="header-anchor" href="#\u5F02\u6B65\u52A0\u8F7D-script" aria-hidden="true">#</a> \u5F02\u6B65\u52A0\u8F7D script</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">loadScript</span><span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> oscript <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;script&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>oscript<span class="token punctuation">.</span>readyState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ie8\u53CA\u4EE5\u4E0B\u7248\u672C</span>
    oscript<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>
        oscript<span class="token punctuation">.</span>readyState <span class="token operator">===</span> <span class="token string">&quot;complete&quot;</span> <span class="token operator">||</span>
        oscript<span class="token punctuation">.</span>readyState <span class="token operator">===</span> <span class="token string">&quot;loaded&quot;</span>
      <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    oscript<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  oscript<span class="token punctuation">.</span>src <span class="token operator">=</span> url<span class="token punctuation">;</span>
  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>oscript<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cookie-\u7BA1\u7406" tabindex="-1"><a class="header-anchor" href="#cookie-\u7BA1\u7406" aria-hidden="true">#</a> cookie \u7BA1\u7406</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> cookie <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> value<span class="token punctuation">,</span> time</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    document<span class="token punctuation">.</span>cookie <span class="token operator">=</span> name <span class="token operator">+</span> <span class="token string">&quot;=&quot;</span> <span class="token operator">+</span> value <span class="token operator">+</span> <span class="token string">&quot;; max-age=&quot;</span> <span class="token operator">+</span> time<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">remove</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setCookie</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> allCookieArr <span class="token operator">=</span> document<span class="token punctuation">.</span>cookie<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> allCookieArr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> itemCookieArr <span class="token operator">=</span> allCookieArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>itemCookieArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> itemCookieArr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5B9E\u73B0-bind-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0-bind-\u65B9\u6CD5" aria-hidden="true">#</a> \u5B9E\u73B0 bind()\u65B9\u6CD5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">myBind</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> target <span class="token operator">=</span> target <span class="token operator">||</span> window<span class="token punctuation">;</span>
  <span class="token keyword">var</span> _args1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> <span class="token function-variable function">temp</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> <span class="token function-variable function">F</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> _args2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> parasArr <span class="token operator">=</span> _args1<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>_args2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">self</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token keyword">instanceof</span> <span class="token class-name">temp</span> <span class="token operator">?</span> <span class="token keyword">this</span> <span class="token operator">:</span> target<span class="token punctuation">,</span> parasArr<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  temp<span class="token punctuation">.</span>prototype <span class="token operator">=</span> self<span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
  <span class="token class-name">F</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">temp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token constant">F</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5B9E\u73B0-call-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0-call-\u65B9\u6CD5" aria-hidden="true">#</a> \u5B9E\u73B0 call()\u65B9\u6CD5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">myCall</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> ctx <span class="token operator">=</span> arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">||</span> window<span class="token punctuation">;</span>
  ctx<span class="token punctuation">.</span>fn <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arguments<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    args<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arguments<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">var</span> result <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">delete</span> ctx<span class="token punctuation">.</span>fn<span class="token punctuation">;</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5B9E\u73B0-apply-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0-apply-\u65B9\u6CD5" aria-hidden="true">#</a> \u5B9E\u73B0 apply()\u65B9\u6CD5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">myApply</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> ctx <span class="token operator">=</span> arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">||</span> window<span class="token punctuation">;</span>
  ctx<span class="token punctuation">.</span>fn <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>arguments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> result <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">delete</span> ctx<span class="token punctuation">.</span>fn<span class="token punctuation">;</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">var</span> result <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>arguments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">delete</span> ctx<span class="token punctuation">.</span>fn<span class="token punctuation">;</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9632\u6296" tabindex="-1"><a class="header-anchor" href="#\u9632\u6296" aria-hidden="true">#</a> \u9632\u6296</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">debounce</span><span class="token punctuation">(</span><span class="token parameter">handle<span class="token punctuation">,</span> delay</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> timer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> _self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">,</span>
      _args <span class="token operator">=</span> arguments<span class="token punctuation">;</span>
    <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>
    timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">handle</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>_self<span class="token punctuation">,</span> _args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> delay<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8282\u6D41" tabindex="-1"><a class="header-anchor" href="#\u8282\u6D41" aria-hidden="true">#</a> \u8282\u6D41</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">throttle</span><span class="token punctuation">(</span><span class="token parameter">handler<span class="token punctuation">,</span> wait</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> lastTime <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> nowTime <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nowTime <span class="token operator">-</span> lastTime <span class="token operator">&gt;</span> wait<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">handler</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
      lastTime <span class="token operator">=</span> nowTime<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="requestanimframe-\u517C\u5BB9\u6027\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#requestanimframe-\u517C\u5BB9\u6027\u65B9\u6CD5" aria-hidden="true">#</a> requestAnimFrame \u517C\u5BB9\u6027\u65B9\u6CD5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>window<span class="token punctuation">.</span>requestAnimFrame <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    window<span class="token punctuation">.</span>requestAnimationFrame <span class="token operator">||</span>
    window<span class="token punctuation">.</span>webkitRequestAnimationFrame <span class="token operator">||</span>
    window<span class="token punctuation">.</span>mozRequestAnimationFrame <span class="token operator">||</span>
    <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      window<span class="token punctuation">.</span><span class="token function">setTimeout</span><span class="token punctuation">(</span>callback<span class="token punctuation">,</span> <span class="token number">1000</span> <span class="token operator">/</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cancelanimframe-\u517C\u5BB9\u6027\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#cancelanimframe-\u517C\u5BB9\u6027\u65B9\u6CD5" aria-hidden="true">#</a> cancelAnimFrame \u517C\u5BB9\u6027\u65B9\u6CD5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>window<span class="token punctuation">.</span>cancelAnimFrame <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    window<span class="token punctuation">.</span>cancelAnimationFrame <span class="token operator">||</span>
    window<span class="token punctuation">.</span>webkitCancelAnimationFrame <span class="token operator">||</span>
    window<span class="token punctuation">.</span>mozCancelAnimationFrame <span class="token operator">||</span>
    <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      window<span class="token punctuation">.</span><span class="token function">clearTimeout</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="jsonp-\u5E95\u5C42\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#jsonp-\u5E95\u5C42\u65B9\u6CD5" aria-hidden="true">#</a> jsonp \u5E95\u5C42\u65B9\u6CD5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">jsonp</span><span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> oscript <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;script&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>oscript<span class="token punctuation">.</span>readyState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ie8\u53CA\u4EE5\u4E0B\u7248\u672C</span>
    oscript<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>
        oscript<span class="token punctuation">.</span>readyState <span class="token operator">===</span> <span class="token string">&quot;complete&quot;</span> <span class="token operator">||</span>
        oscript<span class="token punctuation">.</span>readyState <span class="token operator">===</span> <span class="token string">&quot;loaded&quot;</span>
      <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    oscript<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  oscript<span class="token punctuation">.</span>src <span class="token operator">=</span> url<span class="token punctuation">;</span>
  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>oscript<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u83B7\u53D6-url-\u4E0A\u7684\u53C2\u6570-2" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6-url-\u4E0A\u7684\u53C2\u6570-2" aria-hidden="true">#</a> \u83B7\u53D6 url \u4E0A\u7684\u53C2\u6570\uFF082\uFF09</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getUrlParam</span><span class="token punctuation">(</span><span class="token parameter">sUrl<span class="token punctuation">,</span> sKey</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  sUrl<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\w+)=(\\w+)(?=[&amp;|#])</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">ele<span class="token punctuation">,</span> key<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>result<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      result<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> val<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> temp <span class="token operator">=</span> result<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
      result<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>temp<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>sKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> result<span class="token punctuation">[</span>sKey<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u683C\u5F0F\u5316\u65F6\u95F4" tabindex="-1"><a class="header-anchor" href="#\u683C\u5F0F\u5316\u65F6\u95F4" aria-hidden="true">#</a> \u683C\u5F0F\u5316\u65F6\u95F4</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">formatDate</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">yyyy</span><span class="token operator">:</span> t<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">yy</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token string">&quot;&quot;</span> <span class="token operator">+</span> t<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token constant">M</span><span class="token operator">:</span> t<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token constant">MM</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token string">&quot;0&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">d</span><span class="token operator">:</span> t<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dd</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token string">&quot;0&quot;</span> <span class="token operator">+</span> t<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token constant">H</span><span class="token operator">:</span> t<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token constant">HH</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token string">&quot;0&quot;</span> <span class="token operator">+</span> t<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">h</span><span class="token operator">:</span> t<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">12</span><span class="token punctuation">,</span>
    <span class="token literal-property property">hh</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token string">&quot;0&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">m</span><span class="token operator">:</span> t<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">mm</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token string">&quot;0&quot;</span> <span class="token operator">+</span> t<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">s</span><span class="token operator">:</span> t<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">ss</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token string">&quot;0&quot;</span> <span class="token operator">+</span> t<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">w</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;\u65E5&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u4E00&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u4E8C&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u4E09&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u56DB&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u4E94&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u516D&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>t<span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">([a-z]+)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">gi</span></span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">$1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> obj<span class="token punctuation">[</span>$1<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1\u90AE\u7BB1\u7684\u6B63\u5219\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1\u90AE\u7BB1\u7684\u6B63\u5219\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> \u9A8C\u8BC1\u90AE\u7BB1\u7684\u6B63\u5219\u8868\u8FBE\u5F0F</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">isAvailableEmail</span><span class="token punctuation">(</span><span class="token parameter">sEmail</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^([\\w+.])+@\\w+([.]\\w+)+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>sEmail<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u51FD\u6570\u67EF\u91CC\u5316" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u67EF\u91CC\u5316" aria-hidden="true">#</a> \u51FD\u6570\u67EF\u91CC\u5316</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u662F\u628A\u63A5\u53D7\u591A\u4E2A\u53C2\u6570\u7684\u51FD\u6570\u53D8\u6362\u6210\u63A5\u53D7\u4E00\u4E2A\u5355\u4E00\u53C2\u6570(\u6700\u521D\u51FD\u6570\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570)\u7684\u51FD\u6570\uFF0C\u5E76\u4E14\u8FD4\u56DE\u63A5\u53D7\u4F59\u4E0B\u7684\u53C2\u6570\u4E14\u8FD4\u56DE\u7ED3\u679C\u7684\u65B0\u51FD\u6570\u7684\u6280\u672F</span>

<span class="token keyword">function</span> <span class="token function">curryIt</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> length <span class="token operator">=</span> fn<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
    args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> <span class="token function-variable function">result</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">arg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    args<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    length<span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>length <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5927\u6570\u76F8\u52A0" tabindex="-1"><a class="header-anchor" href="#\u5927\u6570\u76F8\u52A0" aria-hidden="true">#</a> \u5927\u6570\u76F8\u52A0</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">sumBigNumber</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> res <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token comment">//\u7ED3\u679C</span>
    temp <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">//\u6309\u4F4D\u52A0\u7684\u7ED3\u679C\u53CA\u8FDB\u4F4D</span>
  a <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  b <span class="token operator">=</span> b<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>length <span class="token operator">||</span> b<span class="token punctuation">.</span>length <span class="token operator">||</span> temp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//~~\u6309\u4F4D\u975E 1.\u7C7B\u578B\u8F6C\u6362\uFF0C\u8F6C\u6362\u6210\u6570\u5B57 2.~~undefined==0</span>
    temp <span class="token operator">+=</span> <span class="token operator">~</span><span class="token operator">~</span>a<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token operator">~</span><span class="token operator">~</span>b<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    res <span class="token operator">=</span> <span class="token punctuation">(</span>temp <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">+</span> res<span class="token punctuation">;</span>
    temp <span class="token operator">=</span> temp <span class="token operator">&gt;</span> <span class="token number">9</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^0+</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5355\u4F8B\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u5355\u4F8B\u6A21\u5F0F" aria-hidden="true">#</a> \u5355\u4F8B\u6A21\u5F0F</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getSingle</span><span class="token punctuation">(</span><span class="token parameter">func</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> result<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">func</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u52A0\u8F7D-js-css-style" tabindex="-1"><a class="header-anchor" href="#\u52A0\u8F7D-js-css-style" aria-hidden="true">#</a> \u52A0\u8F7D js || css || style</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">loadRes</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> type<span class="token punctuation">,</span> fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u52A0\u8F7Djs || css || style</span>
  <span class="token keyword">let</span> ref<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&quot;js&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5916\u90E8js</span>
    ref <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;script&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ref<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;text/JavaScript&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ref<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;src&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&quot;css&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5916\u90E8css</span>
    ref <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;link&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ref<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;rel&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;stylesheet&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ref<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;text/css&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ref<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;href&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&quot;style&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// style</span>
    ref <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;style&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ref<span class="token punctuation">.</span>innerhtml <span class="token operator">=</span> name<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> ref <span class="token operator">!==</span> <span class="token string">&quot;undefined&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&quot;head&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>ref<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ref<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u52A0\u8F7D\u5B8C\u6210\u6267\u884C</span>
      <span class="token keyword">typeof</span> fn <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span> <span class="token operator">&amp;&amp;</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u83B7\u53D6-url-\u53C2\u6570-3" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6-url-\u53C2\u6570-3" aria-hidden="true">#</a> \u83B7\u53D6 url \u53C2\u6570\uFF083\uFF09</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">getUrlParam</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u83B7\u53D6url\u53C2\u6570</span>
  <span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&quot;(^|&amp;?)&quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&quot;=([^&amp;]*)(&amp;|$)&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;i&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> r <span class="token operator">=</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>reg<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>r <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">decodeURI</span><span class="token punctuation">(</span>r<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u672C\u5730\u5B58\u50A8" tabindex="-1"><a class="header-anchor" href="#\u672C\u5730\u5B58\u50A8" aria-hidden="true">#</a> \u672C\u5730\u5B58\u50A8</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u672C\u5730\u5B58\u50A8</span>
  <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> value<span class="token punctuation">,</span> day</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8BBE\u7F6E</span>
    <span class="token keyword">let</span> d <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> time <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    day <span class="token operator">=</span> <span class="token keyword">typeof</span> day <span class="token operator">===</span> <span class="token string">&quot;undefined&quot;</span> <span class="token operator">||</span> <span class="token operator">!</span>day <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> day<span class="token punctuation">;</span> <span class="token comment">// \u65F6\u95F4,\u9ED8\u8BA4\u5B58\u50A81\u5929</span>
    time <span class="token operator">=</span> d<span class="token punctuation">.</span><span class="token function">setHours</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">24</span> <span class="token operator">*</span> day<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6BEB\u79D2</span>
    localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span>
      name<span class="token punctuation">,</span>
      <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span> value<span class="token punctuation">,</span>
        <span class="token literal-property property">time</span><span class="token operator">:</span> time<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u83B7\u53D6</span>
    <span class="token keyword">let</span> data <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> obj<span class="token punctuation">.</span>time<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8FC7\u671F</span>
      localStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> obj<span class="token punctuation">.</span>data<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">clear</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6E05\u7A7A</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5220\u9664\u952E\u4E3Aname\u7684\u7F13\u5B58</span>
      localStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u6E05\u7A7A\u5168\u90E8</span>
      localStorage<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cookie-\u64CD\u4F5C\u3010set-get-del\u3011" tabindex="-1"><a class="header-anchor" href="#cookie-\u64CD\u4F5C\u3010set-get-del\u3011" aria-hidden="true">#</a> cookie \u64CD\u4F5C\u3010set\uFF0Cget\uFF0Cdel\u3011</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> cookie <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// cookie\u64CD\u4F5C\u3010set\uFF0Cget\uFF0Cdel\u3011</span>
  <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> value<span class="token punctuation">,</span> day</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> oDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    oDate<span class="token punctuation">.</span><span class="token function">setDate</span><span class="token punctuation">(</span>oDate<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>day <span class="token operator">||</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    document<span class="token punctuation">.</span>cookie <span class="token operator">=</span> name <span class="token operator">+</span> <span class="token string">&quot;=&quot;</span> <span class="token operator">+</span> value <span class="token operator">+</span> <span class="token string">&quot;;expires=&quot;</span> <span class="token operator">+</span> oDate <span class="token operator">+</span> <span class="token string">&quot;; path=/;&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> str <span class="token operator">=</span> document<span class="token punctuation">.</span>cookie<span class="token punctuation">;</span>
    <span class="token keyword">let</span> arr <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> newArr <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>newArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> newArr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">del</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="js-\u83B7\u53D6\u5143\u7D20\u6837\u5F0F\u3010\u652F\u6301\u5185\u8054\u3011" tabindex="-1"><a class="header-anchor" href="#js-\u83B7\u53D6\u5143\u7D20\u6837\u5F0F\u3010\u652F\u6301\u5185\u8054\u3011" aria-hidden="true">#</a> Js \u83B7\u53D6\u5143\u7D20\u6837\u5F0F\u3010\u652F\u6301\u5185\u8054\u3011</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">getRealStyle</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> styleName</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Js\u83B7\u53D6\u5143\u7D20\u6837\u5F0F\u3010\u652F\u6301\u5185\u8054\u3011</span>
  <span class="token keyword">var</span> realStyle <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span>currentStyle<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    realStyle <span class="token operator">=</span> obj<span class="token punctuation">.</span>currentStyle<span class="token punctuation">[</span>styleName<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>getComputedStyle<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    realStyle <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">getComputedStyle</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">[</span>styleName<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> realStyle<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u65F6\u95F4\u683C\u5F0F\u5316" tabindex="-1"><a class="header-anchor" href="#\u65F6\u95F4\u683C\u5F0F\u5316" aria-hidden="true">#</a> \u65F6\u95F4\u683C\u5F0F\u5316</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">formatDate</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">fmt<span class="token punctuation">,</span> date</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u65F6\u95F4\u683C\u5F0F\u5316 \u3010&#39;yyyy-MM-dd hh:mm:ss&#39;,\u65F6\u95F4\u3011</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> date <span class="token operator">!==</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    date <span class="token operator">=</span> <span class="token operator">!</span>date <span class="token operator">?</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">var</span> o <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;M+&quot;</span><span class="token operator">:</span> date<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// \u6708\u4EFD</span>
    <span class="token string-property property">&quot;d+&quot;</span><span class="token operator">:</span> date<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// \u65E5</span>
    <span class="token string-property property">&quot;h+&quot;</span><span class="token operator">:</span> date<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// \u5C0F\u65F6</span>
    <span class="token string-property property">&quot;m+&quot;</span><span class="token operator">:</span> date<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// \u5206</span>
    <span class="token string-property property">&quot;s+&quot;</span><span class="token operator">:</span> date<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// \u79D2</span>
    <span class="token string-property property">&quot;q+&quot;</span><span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// \u5B63\u5EA6</span>
    <span class="token constant">S</span><span class="token operator">:</span> date<span class="token punctuation">.</span><span class="token function">getMilliseconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// \u6BEB\u79D2</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(y+)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>fmt<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fmt <span class="token operator">=</span> fmt<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>
      RegExp<span class="token punctuation">.</span>$1<span class="token punctuation">,</span>
      <span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">4</span> <span class="token operator">-</span> RegExp<span class="token punctuation">.</span>$1<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> k <span class="token keyword">in</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&quot;(&quot;</span> <span class="token operator">+</span> k <span class="token operator">+</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>fmt<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      fmt <span class="token operator">=</span> fmt<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>
        RegExp<span class="token punctuation">.</span>$1<span class="token punctuation">,</span>
        RegExp<span class="token punctuation">.</span>$1<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">?</span> o<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token string">&quot;00&quot;</span> <span class="token operator">+</span> o<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span> <span class="token operator">+</span> o<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> fmt<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u539F\u751F-ajax-\u64CD\u4F5C-2" tabindex="-1"><a class="header-anchor" href="#\u539F\u751F-ajax-\u64CD\u4F5C-2" aria-hidden="true">#</a> \u539F\u751F ajax \u64CD\u4F5C\uFF082\uFF09</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">ajax</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">conf</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ajax\u64CD\u4F5C</span>
  <span class="token keyword">let</span> url <span class="token operator">=</span> conf<span class="token punctuation">.</span>url<span class="token punctuation">,</span>
    data <span class="token operator">=</span> conf<span class="token punctuation">.</span>data<span class="token punctuation">,</span>
    senData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// \u5C01\u88C5\u540E\u7684\u6570\u636E</span>
    async <span class="token operator">=</span> conf<span class="token punctuation">.</span>async <span class="token operator">!==</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> conf<span class="token punctuation">.</span>async <span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// ture\u4E3A\u5F02\u6B65\u8BF7\u6C42</span>
    type <span class="token operator">=</span> conf<span class="token punctuation">.</span>type <span class="token operator">||</span> <span class="token string">&quot;get&quot;</span><span class="token punctuation">,</span> <span class="token comment">// \u9ED8\u8BA4\u8BF7\u6C42\u65B9\u5F0Fget</span>
    dataType <span class="token operator">=</span> conf<span class="token punctuation">.</span>dataType <span class="token operator">||</span> <span class="token string">&quot;json&quot;</span><span class="token punctuation">,</span>
    contenType <span class="token operator">=</span> conf<span class="token punctuation">.</span>contenType <span class="token operator">||</span> <span class="token string">&quot;application/x-www-form-urlencoded&quot;</span><span class="token punctuation">,</span>
    success <span class="token operator">=</span> conf<span class="token punctuation">.</span>success<span class="token punctuation">,</span>
    error <span class="token operator">=</span> conf<span class="token punctuation">.</span>error<span class="token punctuation">,</span>
    isForm <span class="token operator">=</span> conf<span class="token punctuation">.</span>isForm <span class="token operator">||</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// \u662F\u5426formdata</span>
    header <span class="token operator">=</span> conf<span class="token punctuation">.</span>header <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// \u5934\u90E8\u4FE1\u606F</span>
    xhr <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span> <span class="token comment">// \u521B\u5EFAajax\u5F15\u64CE\u5BF9\u8C61</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    senData <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> data <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>isForm<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679Cdata\u662F\u5BF9\u8C61\uFF0C\u8F6C\u6362\u4E3A\u5B57\u7B26\u4E32</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> k <span class="token keyword">in</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      senData<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;=&quot;</span> <span class="token operator">+</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    senData <span class="token operator">=</span> senData<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;&amp;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    senData <span class="token operator">=</span> data<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ActiveXObject</span><span class="token punctuation">(</span><span class="token string">&quot;microsoft.xmlhttp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// IE\u5185\u6838\u7CFB\u5217\u6D4F\u89C8\u5668</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u975EIE\u5185\u6838\u6D4F\u89C8\u5668</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>error <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E0D\u652F\u6301ajax\u8BF7\u6C42&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> type <span class="token operator">!==</span> <span class="token string">&quot;get&quot;</span> <span class="token operator">?</span> url <span class="token operator">:</span> url <span class="token operator">+</span> <span class="token string">&quot;?&quot;</span> <span class="token operator">+</span> senData<span class="token punctuation">,</span> async<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">!==</span> <span class="token string">&quot;get&quot;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>isForm<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    xhr<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span><span class="token string">&quot;content-type&quot;</span><span class="token punctuation">,</span> contenType<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> h <span class="token keyword">in</span> header<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    xhr<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> header<span class="token punctuation">[</span>h<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>type <span class="token operator">!==</span> <span class="token string">&quot;get&quot;</span> <span class="token operator">?</span> senData <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">===</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">&gt;=</span> <span class="token number">200</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token punctuation">.</span>status <span class="token operator">&lt;</span> <span class="token number">300</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>dataType <span class="token operator">===</span> <span class="token string">&quot;json&quot;</span> <span class="token operator">&amp;&amp;</span> success <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
          <span class="token keyword">try</span> <span class="token punctuation">{</span>
            res <span class="token operator">=</span> <span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">&quot;(&quot;</span> <span class="token operator">+</span> xhr<span class="token punctuation">.</span>responseText <span class="token operator">+</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token function">success</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5C06json\u5B57\u7B26\u4E32\u8F6C\u6362\u4E3Ajs\u5BF9\u8C61</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>error <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;\u901A\u8BAF\u5931\u8D25!&quot;</span> <span class="token operator">+</span> xhr<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fetch-\u8BF7\u6C42\u7684\u5C01\u88C5" tabindex="-1"><a class="header-anchor" href="#fetch-\u8BF7\u6C42\u7684\u5C01\u88C5" aria-hidden="true">#</a> fetch \u8BF7\u6C42\u7684\u5C01\u88C5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">fetch</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> setting</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// fetch\u8BF7\u6C42\u7684\u5C01\u88C5</span>
  <span class="token keyword">let</span> opts <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8BBE\u7F6E\u53C2\u6570\u7684\u521D\u59CB\u503C</span>
    <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token punctuation">(</span>setting<span class="token punctuation">.</span>method <span class="token operator">||</span> <span class="token string">&quot;GET&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// \u8BF7\u6C42\u65B9\u5F0F</span>
    <span class="token literal-property property">headers</span><span class="token operator">:</span> setting<span class="token punctuation">.</span>headers <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// \u8BF7\u6C42\u5934\u8BBE\u7F6E</span>
    <span class="token literal-property property">credentials</span><span class="token operator">:</span> setting<span class="token punctuation">.</span>credentials <span class="token operator">||</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// \u8BBE\u7F6Ecookie\u662F\u5426\u4E00\u8D77\u53D1\u9001</span>
    <span class="token literal-property property">body</span><span class="token operator">:</span> setting<span class="token punctuation">.</span>body <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">mode</span><span class="token operator">:</span> setting<span class="token punctuation">.</span>mode <span class="token operator">||</span> <span class="token string">&quot;no-cors&quot;</span><span class="token punctuation">,</span> <span class="token comment">// \u53EF\u4EE5\u8BBE\u7F6E cors, no-cors, same-origin</span>
    <span class="token literal-property property">redirect</span><span class="token operator">:</span> setting<span class="token punctuation">.</span>redirect <span class="token operator">||</span> <span class="token string">&quot;follow&quot;</span><span class="token punctuation">,</span> <span class="token comment">// follow, error, manual</span>
    <span class="token literal-property property">cache</span><span class="token operator">:</span> setting<span class="token punctuation">.</span>cache <span class="token operator">||</span> <span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span> <span class="token comment">// \u8BBE\u7F6E cache \u6A21\u5F0F (default, reload, no-cache)</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> dataType <span class="token operator">=</span> setting<span class="token punctuation">.</span>dataType <span class="token operator">||</span> <span class="token string">&quot;json&quot;</span><span class="token punctuation">;</span> <span class="token comment">// \u89E3\u6790\u65B9\u5F0F</span>
  <span class="token keyword">let</span> data <span class="token operator">=</span> setting<span class="token punctuation">.</span>data <span class="token operator">||</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span> <span class="token comment">// \u53C2\u6570</span>
  <span class="token keyword">let</span> <span class="token function-variable function">paramsFormat</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u53C2\u6570\u683C\u5F0F</span>
    <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      str <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>method <span class="token operator">===</span> <span class="token string">&quot;GET&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    url <span class="token operator">=</span> url <span class="token operator">+</span> <span class="token punctuation">(</span>data <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">?</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">paramsFormat</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    setting<span class="token punctuation">.</span>body <span class="token operator">=</span> data <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> opts<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> data <span class="token operator">=</span>
          dataType <span class="token operator">===</span> <span class="token string">&quot;text&quot;</span>
            <span class="token operator">?</span> <span class="token keyword">await</span> res<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token operator">:</span> dataType <span class="token operator">===</span> <span class="token string">&quot;blob&quot;</span>
            <span class="token operator">?</span> <span class="token keyword">await</span> res<span class="token punctuation">.</span><span class="token function">blob</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token operator">:</span> <span class="token keyword">await</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">reject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8BBE\u5907\u5224\u65AD-android\u3001ios\u3001web" tabindex="-1"><a class="header-anchor" href="#\u8BBE\u5907\u5224\u65AD-android\u3001ios\u3001web" aria-hidden="true">#</a> \u8BBE\u5907\u5224\u65AD\uFF1Aandroid\u3001ios\u3001web</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">isDevice</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5224\u65AD\u662Fandroid\u8FD8\u662Fios\u8FD8\u662Fweb</span>
  <span class="token keyword">var</span> ua <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>ua<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">iPhone\\sOS</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;iphone os&quot;</span> <span class="token operator">||</span> ua<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">iPad</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;ipad&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ios</span>
    <span class="token keyword">return</span> <span class="token string">&quot;iOS&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>ua<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">Android</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;android&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;Android&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token string">&quot;Web&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5224\u65AD\u662F\u5426\u4E3A\u5FAE\u4FE1" tabindex="-1"><a class="header-anchor" href="#\u5224\u65AD\u662F\u5426\u4E3A\u5FAE\u4FE1" aria-hidden="true">#</a> \u5224\u65AD\u662F\u5426\u4E3A\u5FAE\u4FE1</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">isWx</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5224\u65AD\u662F\u5426\u4E3A\u5FAE\u4FE1</span>
  <span class="token keyword">var</span> ua <span class="token operator">=</span> window<span class="token punctuation">.</span>navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>ua<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">MicroMessenger</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;micromessenger&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6587\u672C\u590D\u5236\u529F\u80FD" tabindex="-1"><a class="header-anchor" href="#\u6587\u672C\u590D\u5236\u529F\u80FD" aria-hidden="true">#</a> \u6587\u672C\u590D\u5236\u529F\u80FD</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">copyTxt</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">text<span class="token punctuation">,</span> fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u590D\u5236\u529F\u80FD</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> document<span class="token punctuation">.</span>execCommand <span class="token operator">!==</span> <span class="token string">&quot;function&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u590D\u5236\u5931\u8D25\uFF0C\u8BF7\u957F\u6309\u590D\u5236&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">var</span> dom <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;textarea&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  dom<span class="token punctuation">.</span>value <span class="token operator">=</span> text<span class="token punctuation">;</span>
  dom<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;style&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;display: block;width: 1px;height: 1px;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>dom<span class="token punctuation">)</span><span class="token punctuation">;</span>
  dom<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> result <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">execCommand</span><span class="token punctuation">(</span><span class="token string">&quot;copy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>dom<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u590D\u5236\u6210\u529F&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">typeof</span> fn <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span> <span class="token operator">&amp;&amp;</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> document<span class="token punctuation">.</span>createRange <span class="token operator">!==</span> <span class="token string">&quot;function&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u590D\u5236\u5931\u8D25\uFF0C\u8BF7\u957F\u6309\u590D\u5236&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">var</span> range <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createRange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  div<span class="token punctuation">.</span>innerhtml <span class="token operator">=</span> text<span class="token punctuation">;</span>
  div<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;style&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;height: 1px;fontSize: 1px;overflow: hidden;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>div<span class="token punctuation">)</span><span class="token punctuation">;</span>
  range<span class="token punctuation">.</span><span class="token function">selectNode</span><span class="token punctuation">(</span>div<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> selection <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">getSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>selection<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>selection<span class="token punctuation">.</span>rangeCount <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    selection<span class="token punctuation">.</span><span class="token function">removeAllRanges</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  selection<span class="token punctuation">.</span><span class="token function">addRange</span><span class="token punctuation">(</span>range<span class="token punctuation">)</span><span class="token punctuation">;</span>
  document<span class="token punctuation">.</span><span class="token function">execCommand</span><span class="token punctuation">(</span><span class="token string">&quot;copy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">typeof</span> fn <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span> <span class="token operator">&amp;&amp;</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u590D\u5236\u6210\u529F&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5224\u65AD\u662F\u5426\u662F\u4E00\u4E2A\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u5224\u65AD\u662F\u5426\u662F\u4E00\u4E2A\u6570\u7EC4" aria-hidden="true">#</a> \u5224\u65AD\u662F\u5426\u662F\u4E00\u4E2A\u6570\u7EC4</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">isArray</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5224\u65AD\u662F\u5426\u662F\u4E00\u4E2A\u6570\u7EC4</span>
  <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;[object Array]&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5224\u65AD\u4E24\u4E2A\u6570\u7EC4\u662F\u5426\u76F8\u7B49" tabindex="-1"><a class="header-anchor" href="#\u5224\u65AD\u4E24\u4E2A\u6570\u7EC4\u662F\u5426\u76F8\u7B49" aria-hidden="true">#</a> \u5224\u65AD\u4E24\u4E2A\u6570\u7EC4\u662F\u5426\u76F8\u7B49</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">arrayEqual</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">arr1<span class="token punctuation">,</span> arr2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//\u5224\u65AD\u4E24\u4E2A\u6570\u7EC4\u662F\u5426\u76F8\u7B49</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>arr1 <span class="token operator">===</span> arr2<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>arr1<span class="token punctuation">.</span>length <span class="token operator">!=</span> arr2<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr1<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>arr1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!==</span> arr2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u65F6\u95F4\u4E0E\u65F6\u95F4\u6233\u8F6C\u6362" tabindex="-1"><a class="header-anchor" href="#\u65F6\u95F4\u4E0E\u65F6\u95F4\u6233\u8F6C\u6362" aria-hidden="true">#</a> \u65F6\u95F4\u4E0E\u65F6\u95F4\u6233\u8F6C\u6362</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> stamp <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u65F6\u95F4\uFF0C\u65F6\u95F4\u6233\u8F6C\u6362</span>
  <span class="token function-variable function">getTime</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">time</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u65F6\u95F4\u8F6C10\u4F4D\u65F6\u95F4\u6233</span>
    <span class="token keyword">let</span> date <span class="token operator">=</span> time <span class="token operator">?</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">timeToStr</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">time<span class="token punctuation">,</span> fmt</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 10\u4F4D\u65F6\u95F4\u6233\u8F6C\u65F6\u95F4</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>time <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pattern</span><span class="token punctuation">(</span>fmt <span class="token operator">||</span> <span class="token string">&quot;yyyy-MM-dd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5E38\u7528\u6B63\u5219\u9A8C\u8BC1" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u6B63\u5219\u9A8C\u8BC1" aria-hidden="true">#</a> \u5E38\u7528\u6B63\u5219\u9A8C\u8BC1</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">checkStr</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">str<span class="token punctuation">,</span> type</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5E38\u7528\u6B63\u5219\u9A8C\u8BC1\uFF0C\u6CE8\u610Ftype\u5927\u5C0F\u5199</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token string">&#39;phone&#39;</span><span class="token operator">:</span> <span class="token comment">// \u624B\u673A\u53F7\u7801</span>
      <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^1[3|4|5|6|7|8|9][0-9]{9}$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
    <span class="token keyword">case</span> <span class="token string">&#39;tel&#39;</span><span class="token operator">:</span> <span class="token comment">// \u5EA7\u673A</span>
      <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(0\\d{2,3}-\\d{7,8})(-\\d{1,4})?$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
    <span class="token keyword">case</span> <span class="token string">&#39;card&#39;</span><span class="token operator">:</span> <span class="token comment">// SFZ</span>
      <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
    <span class="token keyword">case</span> <span class="token string">&#39;pwd&#39;</span><span class="token operator">:</span> <span class="token comment">// \u5BC6\u7801\u4EE5\u5B57\u6BCD\u5F00\u5934\uFF0C\u957F\u5EA6\u57286~18\u4E4B\u95F4\uFF0C\u53EA\u80FD\u5305\u542B\u5B57\u6BCD\u3001\u6570\u5B57\u548C\u4E0B\u5212\u7EBF</span>
      <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z]\\w{5,17}$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
    <span class="token keyword">case</span> <span class="token string">&#39;postal&#39;</span><span class="token operator">:</span> <span class="token comment">// \u90AE\u653F\u7F16\u7801</span>
      <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[1-9]\\d{5}(?!\\d)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
    <span class="token keyword">case</span> <span class="token string">&#39;QQ&#39;</span><span class="token operator">:</span> <span class="token comment">// QQ\u53F7</span>
      <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[1-9][0-9]{4,9}$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
    <span class="token keyword">case</span> <span class="token string">&#39;email&#39;</span><span class="token operator">:</span> <span class="token comment">// \u90AE\u7BB1</span>
      <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[\\w-]+(.[\\w-]+)*@[\\w-]+(.[\\w-]+)+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
    <span class="token keyword">case</span> <span class="token string">&#39;money&#39;</span><span class="token operator">:</span> <span class="token comment">// \u91D1\u989D(\u5C0F\u6570\u70B92\u4F4D)</span>
      <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\d*(?:.\\d{0,2})?$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
    <span class="token keyword">case</span> <span class="token string">&#39;URL&#39;</span><span class="token operator">:</span> <span class="token comment">// \u7F51\u5740</span>
      <span class="token keyword">return</span> <span class="token operator">/</span><span class="token punctuation">(</span>http<span class="token operator">|</span>ftp<span class="token operator">|</span>https<span class="token punctuation">)</span><span class="token operator">:</span><span class="token operator">/</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[\\w-_]+(.[\\w-_]+)+([\\w-.,@?^=%&amp;:/~+#]*[\\w-@?^=%&amp;/~+#])?</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
    <span class="token keyword">case</span> <span class="token string">&#39;IP&#39;</span><span class="token operator">:</span> <span class="token comment">// IP</span>
      <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">((?:(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d))</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
    <span class="token keyword">case</span> <span class="token string">&#39;date&#39;</span><span class="token operator">:</span> <span class="token comment">// \u65E5\u671F\u65F6\u95F4</span>
      <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(\\d{4})-(\\d{2})-(\\d{2}) (\\d{2})(?::\\d{2}|:(\\d{2}):(\\d{2}))$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token operator">||</span>
        <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(\\d{4})-(\\d{2})-(\\d{2})$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
    <span class="token keyword">case</span> <span class="token string">&#39;number&#39;</span><span class="token operator">:</span> <span class="token comment">// \u6570\u5B57</span>
      <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[0-9]$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
    <span class="token keyword">case</span> <span class="token string">&#39;english&#39;</span><span class="token operator">:</span> <span class="token comment">// \u82F1\u6587</span>
      <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z]+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
    <span class="token keyword">case</span> <span class="token string">&#39;chinese&#39;</span><span class="token operator">:</span> <span class="token comment">// \u4E2D\u6587</span>
      <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[\\u4E00-\\u9FA5]+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
    <span class="token keyword">case</span> <span class="token string">&#39;lower&#39;</span><span class="token operator">:</span> <span class="token comment">// \u5C0F\u5199</span>
      <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-z]+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
    <span class="token keyword">case</span> <span class="token string">&#39;upper&#39;</span><span class="token operator">:</span> <span class="token comment">// \u5927\u5199</span>
      <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[A-Z]+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
    <span class="token keyword">case</span> <span class="token string">&#39;HTML&#39;</span><span class="token operator">:</span> <span class="token comment">// HTML\u6807\u8BB0</span>
      <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;(&quot;[^&quot;]*&quot;|&#39;[^&#39;]*&#39;|[^&#39;&quot;&gt;])*&gt;</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
    <span class="token keyword">default</span><span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u662F\u5426\u4E3A-pc-\u7AEF" tabindex="-1"><a class="header-anchor" href="#\u662F\u5426\u4E3A-pc-\u7AEF" aria-hidden="true">#</a> \u662F\u5426\u4E3A PC \u7AEF</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">isPC</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u662F\u5426\u4E3APC\u7AEF</span>
  <span class="token keyword">let</span> userAgentInfo <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">;</span>
  <span class="token keyword">let</span> Agents <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;Android&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;iPhone&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;SymbianOS&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Windows Phone&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;iPad&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;iPod&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> v <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> v <span class="token operator">&lt;</span> Agents<span class="token punctuation">.</span>length<span class="token punctuation">;</span> v<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>userAgentInfo<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>Agents<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> flag<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u53BB\u9664\u5B57\u7B26\u4E32\u7A7A\u683C" tabindex="-1"><a class="header-anchor" href="#\u53BB\u9664\u5B57\u7B26\u4E32\u7A7A\u683C" aria-hidden="true">#</a> \u53BB\u9664\u5B57\u7B26\u4E32\u7A7A\u683C</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">trim</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">str<span class="token punctuation">,</span> type</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u53BB\u9664\u7A7A\u683C\uFF0C type:  1-\u6240\u6709\u7A7A\u683C  2-\u524D\u540E\u7A7A\u683C  3-\u524D\u7A7A\u683C 4-\u540E\u7A7A\u683C</span>
  type <span class="token operator">=</span> type <span class="token operator">||</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>
      <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\s+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>
      <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(^\\s*)|(\\s*$)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>
      <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(^\\s*)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>
      <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\s*$)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">default</span><span class="token operator">:</span>
      <span class="token keyword">return</span> str<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5B57\u7B26\u4E32\u5927\u5C0F\u5199\u8F6C\u6362" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u4E32\u5927\u5C0F\u5199\u8F6C\u6362" aria-hidden="true">#</a> \u5B57\u7B26\u4E32\u5927\u5C0F\u5199\u8F6C\u6362</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">changeCase</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">str<span class="token punctuation">,</span> type</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5B57\u7B26\u4E32\u5927\u5C0F\u5199\u8F6C\u6362 type:  1:\u9996\u5B57\u6BCD\u5927\u5199  2\uFF1A\u9996\u9875\u6BCD\u5C0F\u5199  3\uFF1A\u5927\u5C0F\u5199\u8F6C\u6362  4\uFF1A\u5168\u90E8\u5927\u5199  5\uFF1A\u5168\u90E8\u5C0F\u5199</span>
  type <span class="token operator">=</span> type <span class="token operator">||</span> <span class="token number">4</span><span class="token punctuation">;</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>
      <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\b\\w+\\b</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">word</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>
          word<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> word<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>
      <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\b\\w+\\b</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">word</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>
          word<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> word<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>
      <span class="token keyword">return</span> str
        <span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">word</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[a-z]</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> word<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> word<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>
      <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span>
      <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">default</span><span class="token operator">:</span>
      <span class="token keyword">return</span> str<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8FC7\u6EE4-html-\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u8FC7\u6EE4-html-\u4EE3\u7801" aria-hidden="true">#</a> \u8FC7\u6EE4 html \u4EE3\u7801</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">filterTag</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u8FC7\u6EE4html\u4EE3\u7801(\u628A&lt;&gt;\u8F6C\u6362)</span>
  str <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&amp;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">gi</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&amp;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  str <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">gi</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&lt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  str <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&gt;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">gi</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  str <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">,</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> str<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u751F\u6210\u968F\u673A\u6570\u8303\u56F4" tabindex="-1"><a class="header-anchor" href="#\u751F\u6210\u968F\u673A\u6570\u8303\u56F4" aria-hidden="true">#</a> \u751F\u6210\u968F\u673A\u6570\u8303\u56F4</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">random</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">min<span class="token punctuation">,</span> max</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u751F\u6210\u968F\u673A\u6570\u8303\u56F4</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>arguments<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>min <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>max <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">-</span> min<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u963F\u62C9\u4F2F\u6570\u5B57\u8F6C\u4E2D\u6587\u5927\u5199\u6570\u5B57" tabindex="-1"><a class="header-anchor" href="#\u963F\u62C9\u4F2F\u6570\u5B57\u8F6C\u4E2D\u6587\u5927\u5199\u6570\u5B57" aria-hidden="true">#</a> \u963F\u62C9\u4F2F\u6570\u5B57\u8F6C\u4E2D\u6587\u5927\u5199\u6570\u5B57</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">numberToChinese</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5C06\u963F\u62C9\u4F2F\u6570\u5B57\u7FFB\u8BD1\u6210\u4E2D\u6587\u7684\u5927\u5199\u6570\u5B57</span>
  <span class="token keyword">let</span> <span class="token constant">AA</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>
    <span class="token string">&quot;\u96F6&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;\u4E00&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;\u4E8C&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;\u4E09&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;\u56DB&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;\u4E94&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;\u516D&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;\u4E03&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;\u516B&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;\u4E5D&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;\u5341&quot;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> <span class="token constant">BB</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u5341&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u767E&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u4EDF&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u842C&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u5104&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u70B9&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&quot;&quot;</span> <span class="token operator">+</span> num<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(^0*)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> re <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>
        re <span class="token operator">=</span> <span class="token constant">BB</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">+</span> re<span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&quot;0{4}//d{&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">-</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;}$&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          re <span class="token operator">=</span> <span class="token constant">BB</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> re<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token number">8</span><span class="token operator">:</span>
        re <span class="token operator">=</span> <span class="token constant">BB</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">+</span> re<span class="token punctuation">;</span>
        <span class="token constant">BB</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant">BB</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">%</span> <span class="token number">4</span> <span class="token operator">===</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      re <span class="token operator">=</span> <span class="token constant">AA</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> re<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      re <span class="token operator">=</span> <span class="token constant">AA</span><span class="token punctuation">[</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token constant">BB</span><span class="token punctuation">[</span>k <span class="token operator">%</span> <span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> re<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    k<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u52A0\u4E0A\u5C0F\u6570\u90E8\u5206(\u5982\u679C\u6709\u5C0F\u6570\u90E8\u5206)</span>
    re <span class="token operator">+=</span> <span class="token constant">BB</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      re <span class="token operator">+=</span> <span class="token constant">AA</span><span class="token punctuation">[</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>re <span class="token operator">===</span> <span class="token string">&quot;\u4E00\u5341&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    re <span class="token operator">=</span> <span class="token string">&quot;\u5341&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>re<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\u4E00</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> re<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    re <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E00&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> re<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u539F\u751F-dom-\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u539F\u751F-dom-\u64CD\u4F5C" aria-hidden="true">#</a> \u539F\u751F dom \u64CD\u4F5C</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> dom <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">$</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">selector</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> type <span class="token operator">=</span> selector<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&quot;#&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>querySelecotor<span class="token punctuation">)</span> <span class="token keyword">return</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>selector<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>querySelecotorAll<span class="token punctuation">)</span>
        <span class="token keyword">return</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span>selector<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> document<span class="token punctuation">[</span>
        <span class="token string">&quot;querySelectorAll&quot;</span> <span class="token operator">?</span> <span class="token string">&quot;querySelectorAll&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;getElementsByTagName&quot;</span>
      <span class="token punctuation">]</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">hasClass</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">ele<span class="token punctuation">,</span> name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/* \u68C0\u6D4B\u7C7B\u540D */</span>
    <span class="token keyword">return</span> ele<span class="token punctuation">.</span>className<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&quot;(s|^)&quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&quot;(s|$)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">addClass</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">ele<span class="token punctuation">,</span> name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/* \u6DFB\u52A0\u7C7B\u540D */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">hasClass</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">)</span> ele<span class="token punctuation">.</span>className <span class="token operator">+=</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> name<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">removeClass</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">ele<span class="token punctuation">,</span> name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/* \u5220\u9664\u7C7B\u540D */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">hasClass</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&quot;(s|^)&quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&quot;(s|$)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      ele<span class="token punctuation">.</span>className <span class="token operator">=</span> ele<span class="token punctuation">.</span>className<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>reg<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">replaceClass</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">ele<span class="token punctuation">,</span> newName<span class="token punctuation">,</span> oldName</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/* \u66FF\u6362\u7C7B\u540D */</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> oldName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> newName<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">siblings</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">ele</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/* \u83B7\u53D6\u5144\u5F1F\u8282\u70B9 */</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ele<span class="token punctuation">.</span>parentNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> chid <span class="token operator">=</span> ele<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span>children<span class="token punctuation">,</span>
      eleMatch <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> chid<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>chid<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!==</span> ele<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        eleMatch<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>chid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> eleMatch<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">getByStyle</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/* \u83B7\u53D6\u884C\u95F4\u6837\u5F0F\u5C5E\u6027 */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span>currentStyle<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> obj<span class="token punctuation">.</span>currentStyle<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">getComputedStyle</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">domToStirng</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">htmlDOM</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/* DOM\u8F6C\u5B57\u7B26\u4E32 */</span>
    <span class="token keyword">var</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    div<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>htmlDOM<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> div<span class="token punctuation">.</span>innerHTML<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">stringToDom</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">htmlString</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/* \u5B57\u7B26\u4E32\u8F6CDOM */</span>
    <span class="token keyword">var</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    div<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> htmlString<span class="token punctuation">;</span>
    <span class="token keyword">return</span> div<span class="token punctuation">.</span>children<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5224\u65AD\u56FE\u7247\u52A0\u8F7D\u5B8C\u6210" tabindex="-1"><a class="header-anchor" href="#\u5224\u65AD\u56FE\u7247\u52A0\u8F7D\u5B8C\u6210" aria-hidden="true">#</a> \u5224\u65AD\u56FE\u7247\u52A0\u8F7D\u5B8C\u6210</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">imgLoadAll</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u56FE\u7247\u52A0\u8F7D</span>
  <span class="token keyword">let</span> arrImg <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> img <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    img<span class="token punctuation">.</span>src <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    img<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      arrImg<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>arrImg<span class="token punctuation">.</span>length <span class="token operator">==</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        callback <span class="token operator">&amp;&amp;</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u97F3\u9891\u52A0\u8F7D\u5B8C\u6210\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u97F3\u9891\u52A0\u8F7D\u5B8C\u6210\u64CD\u4F5C" aria-hidden="true">#</a> \u97F3\u9891\u52A0\u8F7D\u5B8C\u6210\u64CD\u4F5C</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">loadAudio</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">src<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u97F3\u9891\u52A0\u8F7D</span>
  <span class="token keyword">var</span> audio <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Audio</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">;</span>
  audio<span class="token punctuation">.</span>onloadedmetadata <span class="token operator">=</span> callback<span class="token punctuation">;</span>
  audio<span class="token punctuation">.</span>src <span class="token operator">=</span> src<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5149\u6807\u6240\u5728\u4F4D\u7F6E\u63D2\u5165\u5B57\u7B26" tabindex="-1"><a class="header-anchor" href="#\u5149\u6807\u6240\u5728\u4F4D\u7F6E\u63D2\u5165\u5B57\u7B26" aria-hidden="true">#</a> \u5149\u6807\u6240\u5728\u4F4D\u7F6E\u63D2\u5165\u5B57\u7B26</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">insertAtCursor</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">dom<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5149\u6807\u6240\u5728\u4F4D\u7F6E\u63D2\u5165\u5B57\u7B26</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>selection<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    dom<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> sel <span class="token operator">=</span> document<span class="token punctuation">.</span>selection<span class="token punctuation">.</span><span class="token function">createRange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    sel<span class="token punctuation">.</span>text <span class="token operator">=</span> val<span class="token punctuation">;</span>
    sel<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>dom<span class="token punctuation">.</span>selectionStart <span class="token operator">||</span> dom<span class="token punctuation">.</span>selectionStart <span class="token operator">==</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> startPos <span class="token operator">=</span> dom<span class="token punctuation">.</span>selectionStart<span class="token punctuation">;</span>
    <span class="token keyword">let</span> endPos <span class="token operator">=</span> dom<span class="token punctuation">.</span>selectionEnd<span class="token punctuation">;</span>
    <span class="token keyword">let</span> restoreTop <span class="token operator">=</span> dom<span class="token punctuation">.</span>scrollTop<span class="token punctuation">;</span>
    dom<span class="token punctuation">.</span>value <span class="token operator">=</span>
      dom<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> startPos<span class="token punctuation">)</span> <span class="token operator">+</span>
      val <span class="token operator">+</span>
      dom<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>endPos<span class="token punctuation">,</span> dom<span class="token punctuation">.</span>value<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>restoreTop <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      dom<span class="token punctuation">.</span>scrollTop <span class="token operator">=</span> restoreTop<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    dom<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    dom<span class="token punctuation">.</span>selectionStart <span class="token operator">=</span> startPos <span class="token operator">+</span> val<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    dom<span class="token punctuation">.</span>selectionEnd <span class="token operator">=</span> startPos <span class="token operator">+</span> val<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    dom<span class="token punctuation">.</span>value <span class="token operator">+=</span> val<span class="token punctuation">;</span>
    dom<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u56FE\u7247\u5730\u5740\u8F6C-base64" tabindex="-1"><a class="header-anchor" href="#\u56FE\u7247\u5730\u5740\u8F6C-base64" aria-hidden="true">#</a> \u56FE\u7247\u5730\u5740\u8F6C base64</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">getBase64</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">img</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//\u4F20\u5165\u56FE\u7247\u8DEF\u5F84\uFF0C\u8FD4\u56DEbase64\uFF0C\u4F7F\u7528getBase64(url).then(function(base64){},function(err){});</span>
  <span class="token keyword">let</span> <span class="token function-variable function">getBase64Image</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">img<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//width\u3001height\u8C03\u7528\u65F6\u4F20\u5165\u5177\u4F53\u50CF\u7D20\u503C\uFF0C\u63A7\u5236\u5927\u5C0F,\u4E0D\u4F20\u5219\u9ED8\u8BA4\u56FE\u50CF\u5927\u5C0F</span>
    <span class="token keyword">let</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;canvas&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> width <span class="token operator">?</span> width <span class="token operator">:</span> img<span class="token punctuation">.</span>width<span class="token punctuation">;</span>
    canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> height <span class="token operator">?</span> height <span class="token operator">:</span> img<span class="token punctuation">.</span>height<span class="token punctuation">;</span>
    <span class="token keyword">let</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&quot;2d&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>width<span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> dataURL <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> dataURL<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  image<span class="token punctuation">.</span>crossOrigin <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
  image<span class="token punctuation">.</span>src <span class="token operator">=</span> img<span class="token punctuation">;</span>
  <span class="token keyword">let</span> deferred <span class="token operator">=</span> $<span class="token punctuation">.</span><span class="token function">Deferred</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>img<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    image<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      deferred<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">getBase64Image</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> deferred<span class="token punctuation">.</span><span class="token function">promise</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="base64-\u56FE\u7247\u4E0B\u8F7D\u529F\u80FD" tabindex="-1"><a class="header-anchor" href="#base64-\u56FE\u7247\u4E0B\u8F7D\u529F\u80FD" aria-hidden="true">#</a> base64 \u56FE\u7247\u4E0B\u8F7D\u529F\u80FD</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">downloadFile</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">base64<span class="token punctuation">,</span> fileName</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//base64\u56FE\u7247\u4E0B\u8F7D\u529F\u80FD</span>
  <span class="token keyword">let</span> <span class="token function-variable function">base64ToBlob</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">code</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> parts <span class="token operator">=</span> code<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;;base64,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> contentType <span class="token operator">=</span> parts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> raw <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">atob</span><span class="token punctuation">(</span>parts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> rawLength <span class="token operator">=</span> raw<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">let</span> uInt8Array <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>rawLength<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> rawLength<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      uInt8Array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> raw<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span>uInt8Array<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> contentType<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> aLink <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> blob <span class="token operator">=</span> <span class="token function">base64ToBlob</span><span class="token punctuation">(</span>base64<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//new Blob([content]);</span>
  <span class="token keyword">let</span> evt <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createEvent</span><span class="token punctuation">(</span><span class="token string">&quot;HTMLEvents&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  evt<span class="token punctuation">.</span><span class="token function">initEvent</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//initEvent\u4E0D\u52A0\u540E\u4E24\u4E2A\u53C2\u6570\u5728FF\u4E0B\u4F1A\u62A5\u9519  \u4E8B\u4EF6\u7C7B\u578B\uFF0C\u662F\u5426\u5192\u6CE1\uFF0C\u662F\u5426\u963B\u6B62\u6D4F\u89C8\u5668\u7684\u9ED8\u8BA4\u884C\u4E3A</span>
  aLink<span class="token punctuation">.</span>download <span class="token operator">=</span> fileName<span class="token punctuation">;</span>
  aLink<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>blob<span class="token punctuation">)</span><span class="token punctuation">;</span>
  aLink<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6D4F\u89C8\u5668\u662F\u5426\u652F\u6301-webp-\u683C\u5F0F\u56FE\u7247" tabindex="-1"><a class="header-anchor" href="#\u6D4F\u89C8\u5668\u662F\u5426\u652F\u6301-webp-\u683C\u5F0F\u56FE\u7247" aria-hidden="true">#</a> \u6D4F\u89C8\u5668\u662F\u5426\u652F\u6301 webP \u683C\u5F0F\u56FE\u7247</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">isSupportWebP</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//\u5224\u65AD\u6D4F\u89C8\u5668\u662F\u5426\u652F\u6301webP\u683C\u5F0F\u56FE\u7247</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span>map <span class="token operator">&amp;&amp;</span>
    document
      <span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;canvas&quot;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span><span class="token string">&quot;image/webp&quot;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;data:image/webp&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="url-\u53C2\u6570\u8F6C\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#url-\u53C2\u6570\u8F6C\u5BF9\u8C61" aria-hidden="true">#</a> url \u53C2\u6570\u8F6C\u5BF9\u8C61</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">parseQueryString</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//url\u53C2\u6570\u8F6C\u5BF9\u8C61</span>
  url <span class="token operator">=</span> <span class="token operator">!</span>url <span class="token operator">?</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href <span class="token operator">:</span> url<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;?&quot;</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> search <span class="token operator">=</span>
    url<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&quot;?&quot;</span> <span class="token operator">?</span> url<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">:</span> url<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">&quot;?&quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>search <span class="token operator">===</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  search <span class="token operator">=</span> search<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;&amp;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> query <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> search<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> pair <span class="token operator">=</span> search<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    query<span class="token punctuation">[</span><span class="token function">decodeURIComponent</span><span class="token punctuation">(</span>pair<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">decodeURIComponent</span><span class="token punctuation">(</span>pair<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> query<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5BF9\u8C61\u5E8F\u5217\u5316\u3010\u5BF9\u8C61\u8F6C-url-\u53C2\u6570\u3011" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u8C61\u5E8F\u5217\u5316\u3010\u5BF9\u8C61\u8F6C-url-\u53C2\u6570\u3011" aria-hidden="true">#</a> \u5BF9\u8C61\u5E8F\u5217\u5316\u3010\u5BF9\u8C61\u8F6C url \u53C2\u6570\u3011</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">stringfyQueryString</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//\u5BF9\u8C61\u5E8F\u5217\u5316\u3010\u5BF9\u8C61\u8F6Curl\u53C2\u6570\u3011</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>obj<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> pairs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> value <span class="token operator">=</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> value<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        pairs<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
          <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>key <span class="token operator">+</span> <span class="token string">&quot;[&quot;</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">&quot;]&quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span>
            <span class="token string">&quot;=&quot;</span> <span class="token operator">+</span>
            <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>value<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">continue</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    pairs<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;=&quot;</span> <span class="token operator">+</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> pairs<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;&amp;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="h5-\u8F6F\u952E\u76D8\u7F29\u56DE\u3001\u5F39\u8D77\u56DE\u8C03" tabindex="-1"><a class="header-anchor" href="#h5-\u8F6F\u952E\u76D8\u7F29\u56DE\u3001\u5F39\u8D77\u56DE\u8C03" aria-hidden="true">#</a> H5 \u8F6F\u952E\u76D8\u7F29\u56DE\u3001\u5F39\u8D77\u56DE\u8C03</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">h5Resize</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">downCb<span class="token punctuation">,</span> upCb</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//\u5F53\u8F6F\u4EF6\u952E\u76D8\u5F39\u8D77\u4F1A\u6539\u53D8\u5F53\u524D window.innerHeight\uFF0C\u76D1\u542C\u8FD9\u4E2A\u503C\u53D8\u5316 [downCb \u5F53\u8F6F\u952E\u76D8\u5F39\u8D77\u540E\uFF0C\u7F29\u56DE\u7684\u56DE\u8C03,upCb \u5F53\u8F6F\u952E\u76D8\u5F39\u8D77\u7684\u56DE\u8C03]</span>
  <span class="token keyword">var</span> clientHeight <span class="token operator">=</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">;</span>
  downCb <span class="token operator">=</span> <span class="token keyword">typeof</span> downCb <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span> <span class="token operator">?</span> <span class="token function-variable function">downCb</span> <span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  upCb <span class="token operator">=</span> <span class="token keyword">typeof</span> upCb <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span> <span class="token operator">?</span> <span class="token function-variable function">upCb</span> <span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;resize&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> height <span class="token operator">=</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>height <span class="token operator">===</span> clientHeight<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">downCb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>height <span class="token operator">&lt;</span> clientHeight<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">upCb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u51FD\u6570\u9632\u6296-1" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u9632\u6296-1" aria-hidden="true">#</a> \u51FD\u6570\u9632\u6296</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">debounce</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">func<span class="token punctuation">,</span> wait<span class="token punctuation">,</span> immediate</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//\u51FD\u6570\u9632\u6296[func \u51FD\u6570,wait \u5EF6\u8FDF\u6267\u884C\u6BEB\u79D2\u6570,immediate true \u8868\u7ACB\u5373\u6267\u884C,false \u8868\u975E\u7ACB\u5373\u6267\u884C,\u7ACB\u5373\u6267\u884C\u662F\u89E6\u53D1\u4E8B\u4EF6\u540E\u51FD\u6570\u4F1A\u7ACB\u5373\u6267\u884C\uFF0C\u7136\u540En\u79D2\u5185\u4E0D\u89E6\u53D1\u4E8B\u4EF6\u624D\u80FD\u7EE7\u7EED\u6267\u884C\u51FD\u6570\u7684\u6548\u679C]</span>
  <span class="token keyword">let</span> timeout<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> context <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> args <span class="token operator">=</span> arguments<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>timeout<span class="token punctuation">)</span> <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>immediate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> callNow <span class="token operator">=</span> <span class="token operator">!</span>timeout<span class="token punctuation">;</span>
      timeout <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        timeout <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> wait<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>callNow<span class="token punctuation">)</span> <span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      timeout <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> wait<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u51FD\u6570\u8282\u6D41-1" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u8282\u6D41-1" aria-hidden="true">#</a> \u51FD\u6570\u8282\u6D41</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">throttle</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">func<span class="token punctuation">,</span> wait <span class="token punctuation">,</span>type</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//\u51FD\u6570\u8282\u6D41 [func \u51FD\u6570 wait \u5EF6\u8FDF\u6267\u884C\u6BEB\u79D2\u6570 type 1 \u8868\u65F6\u95F4\u6233\u7248\uFF0C2 \u8868\u5B9A\u65F6\u5668\u7248]</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>type<span class="token operator">===</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">let</span> previous <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>type<span class="token operator">===</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">let</span> timeout<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> context <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> args <span class="token operator">=</span> arguments<span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>type<span class="token operator">===</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">let</span> now <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>now <span class="token operator">-</span> previous <span class="token operator">&gt;</span> wait<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
                previous <span class="token operator">=</span> now<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>type<span class="token operator">===</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>timeout<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                timeout <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    timeout <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                    <span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> args<span class="token punctuation">)</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span> wait<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,523);function v(m,b){const a=u("router-link");return o(),c("div",null,[r,n("nav",k,[n("ul",null,[n("li",null,[p(a,{to:"#_1-\u90AE\u7BB1"},{default:t(()=>[s("1.\u90AE\u7BB1")]),_:1})]),n("li",null,[p(a,{to:"#_2-\u624B\u673A\u53F7\u7801"},{default:t(()=>[s("2.\u624B\u673A\u53F7\u7801")]),_:1})]),n("li",null,[p(a,{to:"#_3-\u7535\u8BDD\u53F7\u7801"},{default:t(()=>[s("3.\u7535\u8BDD\u53F7\u7801")]),_:1})]),n("li",null,[p(a,{to:"#_4-\u662F\u5426-url-\u5730\u5740"},{default:t(()=>[s("4.\u662F\u5426 url \u5730\u5740")]),_:1})]),n("li",null,[p(a,{to:"#_5-\u662F\u5426\u5B57\u7B26\u4E32"},{default:t(()=>[s("5.\u662F\u5426\u5B57\u7B26\u4E32")]),_:1})]),n("li",null,[p(a,{to:"#_6-\u662F\u5426\u6570\u5B57"},{default:t(()=>[s("6.\u662F\u5426\u6570\u5B57")]),_:1})]),n("li",null,[p(a,{to:"#_7-\u662F\u5426-boolean"},{default:t(()=>[s("7.\u662F\u5426 boolean")]),_:1})]),n("li",null,[p(a,{to:"#_8-\u662F\u5426\u51FD\u6570"},{default:t(()=>[s("8.\u662F\u5426\u51FD\u6570")]),_:1})]),n("li",null,[p(a,{to:"#_9-\u662F\u5426\u4E3A-null"},{default:t(()=>[s("9.\u662F\u5426\u4E3A null")]),_:1})]),n("li",null,[p(a,{to:"#_10-\u662F\u5426-undefined"},{default:t(()=>[s("10.\u662F\u5426 undefined")]),_:1})]),n("li",null,[p(a,{to:"#_11-\u662F\u5426\u5BF9\u8C61"},{default:t(()=>[s("11.\u662F\u5426\u5BF9\u8C61")]),_:1})]),n("li",null,[p(a,{to:"#_12-\u662F\u5426\u6570\u7EC4"},{default:t(()=>[s("12.\u662F\u5426\u6570\u7EC4")]),_:1})]),n("li",null,[p(a,{to:"#_13-\u662F\u5426\u65F6\u95F4"},{default:t(()=>[s("13.\u662F\u5426\u65F6\u95F4")]),_:1})]),n("li",null,[p(a,{to:"#_14-\u662F\u5426\u6B63\u5219"},{default:t(()=>[s("14.\u662F\u5426\u6B63\u5219")]),_:1})]),n("li",null,[p(a,{to:"#_15-\u662F\u5426\u9519\u8BEF\u5BF9\u8C61"},{default:t(()=>[s("15.\u662F\u5426\u9519\u8BEF\u5BF9\u8C61")]),_:1})]),n("li",null,[p(a,{to:"#_16-\u662F\u5426-symbol-\u51FD\u6570"},{default:t(()=>[s("16.\u662F\u5426 Symbol \u51FD\u6570")]),_:1})]),n("li",null,[p(a,{to:"#_17-\u662F\u5426-promise-\u5BF9\u8C61"},{default:t(()=>[s("17.\u662F\u5426 Promise \u5BF9\u8C61")]),_:1})]),n("li",null,[p(a,{to:"#_18-\u662F\u5426-set-\u5BF9\u8C61"},{default:t(()=>[s("18.\u662F\u5426 Set \u5BF9\u8C61")]),_:1})]),n("li",null,[p(a,{to:"#_19-\u662F\u5426\u662F\u5FAE\u4FE1\u6D4F\u89C8\u5668"},{default:t(()=>[s("19.\u662F\u5426\u662F\u5FAE\u4FE1\u6D4F\u89C8\u5668")]),_:1})]),n("li",null,[p(a,{to:"#_20-\u662F\u5426\u662F\u79FB\u52A8\u7AEF"},{default:t(()=>[s("20.\u662F\u5426\u662F\u79FB\u52A8\u7AEF")]),_:1})]),n("li",null,[p(a,{to:"#_21-\u662F\u5426\u662F-qq-\u6D4F\u89C8\u5668"},{default:t(()=>[s("21.\u662F\u5426\u662F QQ \u6D4F\u89C8\u5668")]),_:1})]),n("li",null,[p(a,{to:"#_22-\u662F\u5426\u662F\u722C\u866B"},{default:t(()=>[s("22.\u662F\u5426\u662F\u722C\u866B")]),_:1})]),n("li",null,[p(a,{to:"#_23-\u662F\u5426-ios"},{default:t(()=>[s("23.\u662F\u5426 ios")]),_:1})]),n("li",null,[p(a,{to:"#_24-\u662F\u5426-pc-\u7AEF"},{default:t(()=>[s("24.\u662F\u5426 PC \u7AEF")]),_:1})]),n("li",null,[p(a,{to:"#_25-\u53BB\u9664-html-\u6807\u7B7E"},{default:t(()=>[s("25.\u53BB\u9664 html \u6807\u7B7E")]),_:1})]),n("li",null,[p(a,{to:"#_26-\u83B7\u53D6-url-\u53C2\u6570"},{default:t(()=>[s("26.\u83B7\u53D6 url \u53C2\u6570")]),_:1})]),n("li",null,[p(a,{to:"#_27-\u52A8\u6001\u5F15\u5165-js"},{default:t(()=>[s("27.\u52A8\u6001\u5F15\u5165 js")]),_:1})]),n("li",null,[p(a,{to:"#_28-\u6839\u636E-url-\u5730\u5740\u4E0B\u8F7D"},{default:t(()=>[s("28.\u6839\u636E url \u5730\u5740\u4E0B\u8F7D")]),_:1})]),n("li",null,[p(a,{to:"#_29-el-\u662F\u5426\u5305\u542B\u67D0\u4E2A-class"},{default:t(()=>[s("29.el \u662F\u5426\u5305\u542B\u67D0\u4E2A class")]),_:1})]),n("li",null,[p(a,{to:"#_30-el-\u6DFB\u52A0\u67D0\u4E2A-class"},{default:t(()=>[s("30.el \u6DFB\u52A0\u67D0\u4E2A class")]),_:1})]),n("li",null,[p(a,{to:"#_31-el-\u53BB\u9664\u67D0\u4E2A-class"},{default:t(()=>[s("31.el \u53BB\u9664\u67D0\u4E2A class")]),_:1})]),n("li",null,[p(a,{to:"#_32-\u83B7\u53D6\u6EDA\u52A8\u7684\u5750\u6807"},{default:t(()=>[s("32.\u83B7\u53D6\u6EDA\u52A8\u7684\u5750\u6807")]),_:1})]),n("li",null,[p(a,{to:"#_33-\u6EDA\u52A8\u5230\u9876\u90E8"},{default:t(()=>[s("33.\u6EDA\u52A8\u5230\u9876\u90E8")]),_:1})]),n("li",null,[p(a,{to:"#_34-el-\u662F\u5426\u5728\u89C6\u53E3\u8303\u56F4"},{default:t(()=>[s("34.el \u662F\u5426\u5728\u89C6\u53E3\u8303\u56F4")]),_:1})]),n("li",null,[p(a,{to:"#_35-\u6D17\u724C\u7B97\u6CD5\u968F\u673A"},{default:t(()=>[s("35.\u6D17\u724C\u7B97\u6CD5\u968F\u673A")]),_:1})]),n("li",null,[p(a,{to:"#_36-\u62E6\u622A\u7C98\u8D34\u677F"},{default:t(()=>[s("36.\u62E6\u622A\u7C98\u8D34\u677F")]),_:1})]),n("li",null,[p(a,{to:"#_37-\u5224\u65AD\u7C7B\u578B\u96C6\u5408"},{default:t(()=>[s("37.\u5224\u65AD\u7C7B\u578B\u96C6\u5408")]),_:1})]),n("li",null,[p(a,{to:"#_38-\u4E25\u683C\u7684sfz\u6821\u9A8C"},{default:t(()=>[s("38.\u4E25\u683C\u7684SFZ\u6821\u9A8C")]),_:1})]),n("li",null,[p(a,{to:"#_39-\u968F\u673A\u6570\u8303\u56F4"},{default:t(()=>[s("39.\u968F\u673A\u6570\u8303\u56F4")]),_:1})]),n("li",null,[p(a,{to:"#_40-\u5C06\u963F\u62C9\u4F2F\u6570\u5B57\u7FFB\u8BD1\u6210\u4E2D\u6587\u7684\u5927\u5199\u6570\u5B57"},{default:t(()=>[s("40.\u5C06\u963F\u62C9\u4F2F\u6570\u5B57\u7FFB\u8BD1\u6210\u4E2D\u6587\u7684\u5927\u5199\u6570\u5B57")]),_:1})]),n("li",null,[p(a,{to:"#_41-\u5C06\u6570\u5B57\u8F6C\u6362\u4E3A\u5927\u5199\u91D1\u989D"},{default:t(()=>[s("41.\u5C06\u6570\u5B57\u8F6C\u6362\u4E3A\u5927\u5199\u91D1\u989D")]),_:1})]),n("li",null,[p(a,{to:"#_42-\u5224\u65AD\u4E00\u4E2A\u5143\u7D20\u662F\u5426\u5728\u6570\u7EC4\u4E2D"},{default:t(()=>[s("42.\u5224\u65AD\u4E00\u4E2A\u5143\u7D20\u662F\u5426\u5728\u6570\u7EC4\u4E2D")]),_:1})]),n("li",null,[p(a,{to:"#_43-\u6570\u7EC4\u6392\u5E8F-type-1-\u4ECE\u5C0F\u5230\u5927-2-\u4ECE\u5927\u5230\u5C0F-3-\u968F\u673A"},{default:t(()=>[s("43.\u6570\u7EC4\u6392\u5E8F\uFF0C{type} 1\uFF1A\u4ECE\u5C0F\u5230\u5927 2\uFF1A\u4ECE\u5927\u5230\u5C0F 3\uFF1A\u968F\u673A")]),_:1})]),n("li",null,[p(a,{to:"#_44-\u53BB\u91CD"},{default:t(()=>[s("44.\u53BB\u91CD")]),_:1})]),n("li",null,[p(a,{to:"#_45-\u6C42\u4E24\u4E2A\u96C6\u5408\u7684\u5E76\u96C6"},{default:t(()=>[s("45.\u6C42\u4E24\u4E2A\u96C6\u5408\u7684\u5E76\u96C6")]),_:1})]),n("li",null,[p(a,{to:"#_46-\u6C42\u4E24\u4E2A\u96C6\u5408\u7684\u4EA4\u96C6"},{default:t(()=>[s("46.\u6C42\u4E24\u4E2A\u96C6\u5408\u7684\u4EA4\u96C6")]),_:1})]),n("li",null,[p(a,{to:"#_47-\u5220\u9664\u5176\u4E2D\u4E00\u4E2A\u5143\u7D20"},{default:t(()=>[s("47.\u5220\u9664\u5176\u4E2D\u4E00\u4E2A\u5143\u7D20")]),_:1})]),n("li",null,[p(a,{to:"#_48-\u5C06\u7C7B\u6570\u7EC4\u8F6C\u6362\u4E3A\u6570\u7EC4"},{default:t(()=>[s("48.\u5C06\u7C7B\u6570\u7EC4\u8F6C\u6362\u4E3A\u6570\u7EC4")]),_:1})]),n("li",null,[p(a,{to:"#_49-\u6700\u5927\u503C"},{default:t(()=>[s("49.\u6700\u5927\u503C")]),_:1})]),n("li",null,[p(a,{to:"#_50-\u6700\u5C0F\u503C"},{default:t(()=>[s("50.\u6700\u5C0F\u503C")]),_:1})]),n("li",null,[p(a,{to:"#_51-\u6C42\u548C"},{default:t(()=>[s("51.\u6C42\u548C")]),_:1})]),n("li",null,[p(a,{to:"#_52-\u5E73\u5747\u503C"},{default:t(()=>[s("52.\u5E73\u5747\u503C")]),_:1})]),n("li",null,[p(a,{to:"#_53-\u53BB\u9664\u7A7A\u683C-type-1-\u6240\u6709\u7A7A\u683C-2-\u524D\u540E\u7A7A\u683C-3-\u524D\u7A7A\u683C-4-\u540E\u7A7A\u683C"},{default:t(()=>[s("53.\u53BB\u9664\u7A7A\u683C,type: 1-\u6240\u6709\u7A7A\u683C 2-\u524D\u540E\u7A7A\u683C 3-\u524D\u7A7A\u683C 4-\u540E\u7A7A\u683C")]),_:1})]),n("li",null,[p(a,{to:"#_54-\u5B57\u7B26\u8F6C\u6362-type-1-\u9996\u5B57\u6BCD\u5927\u5199-2-\u9996\u5B57\u6BCD\u5C0F\u5199-3-\u5927\u5C0F\u5199\u8F6C\u6362-4-\u5168\u90E8\u5927\u5199-5-\u5168\u90E8\u5C0F\u5199"},{default:t(()=>[s("54.\u5B57\u7B26\u8F6C\u6362\uFF0Ctype: 1:\u9996\u5B57\u6BCD\u5927\u5199 2\uFF1A\u9996\u5B57\u6BCD\u5C0F\u5199 3\uFF1A\u5927\u5C0F\u5199\u8F6C\u6362 4\uFF1A\u5168\u90E8\u5927\u5199 5\uFF1A\u5168\u90E8\u5C0F\u5199")]),_:1})]),n("li",null,[p(a,{to:"#_55-\u68C0\u6D4B\u5BC6\u7801\u5F3A\u5EA6"},{default:t(()=>[s("55.\u68C0\u6D4B\u5BC6\u7801\u5F3A\u5EA6")]),_:1})]),n("li",null,[p(a,{to:"#_56-\u51FD\u6570\u8282\u6D41\u5668"},{default:t(()=>[s("56.\u51FD\u6570\u8282\u6D41\u5668")]),_:1})]),n("li",null,[p(a,{to:"#_57-\u5728\u5B57\u7B26\u4E32\u4E2D\u63D2\u5165\u65B0\u5B57\u7B26\u4E32"},{default:t(()=>[s("57.\u5728\u5B57\u7B26\u4E32\u4E2D\u63D2\u5165\u65B0\u5B57\u7B26\u4E32")]),_:1})]),n("li",null,[p(a,{to:"#_58-\u5224\u65AD\u4E24\u4E2A\u5BF9\u8C61\u662F\u5426\u952E\u503C\u76F8\u540C"},{default:t(()=>[s("58.\u5224\u65AD\u4E24\u4E2A\u5BF9\u8C61\u662F\u5426\u952E\u503C\u76F8\u540C")]),_:1})]),n("li",null,[p(a,{to:"#_59-16-\u8FDB\u5236\u989C\u8272\u8F6C-rgbrgba-\u5B57\u7B26\u4E32"},{default:t(()=>[s("59.16 \u8FDB\u5236\u989C\u8272\u8F6C RGBRGBA \u5B57\u7B26\u4E32")]),_:1})]),n("li",null,[p(a,{to:"#_60-\u8FFD\u52A0-url-\u53C2\u6570"},{default:t(()=>[s("60.\u8FFD\u52A0 url \u53C2\u6570")]),_:1})]),n("li",null,[p(a,{to:"#\u6B63\u5219\u6821\u9A8C-check-\u5DE5\u5177\u51FD\u6570"},{default:t(()=>[s("\u6B63\u5219\u6821\u9A8C check \u5DE5\u5177\u51FD\u6570")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1\u4E0D\u80FD\u5305\u542B\u5B57\u6BCD"},{default:t(()=>[s("\u9A8C\u8BC1\u4E0D\u80FD\u5305\u542B\u5B57\u6BCD")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1\u4E2D\u6587\u548C\u6570\u5B57"},{default:t(()=>[s("\u9A8C\u8BC1\u4E2D\u6587\u548C\u6570\u5B57")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1\u90AE\u653F\u7F16\u7801-\u4E2D\u56FD"},{default:t(()=>[s("\u9A8C\u8BC1\u90AE\u653F\u7F16\u7801(\u4E2D\u56FD)")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1\u5FAE\u4FE1\u53F7-6-\u81F3-20-\u4F4D-\u4EE5\u5B57\u6BCD\u5F00\u5934-\u5B57\u6BCD-\u6570\u5B57-\u51CF\u53F7-\u4E0B\u5212\u7EBF"},{default:t(()=>[s("\u9A8C\u8BC1\u5FAE\u4FE1\u53F7\uFF0C6 \u81F3 20 \u4F4D\uFF0C\u4EE5\u5B57\u6BCD\u5F00\u5934\uFF0C\u5B57\u6BCD\uFF0C\u6570\u5B57\uFF0C\u51CF\u53F7\uFF0C\u4E0B\u5212\u7EBF")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1-16-\u8FDB\u5236\u989C\u8272"},{default:t(()=>[s("\u9A8C\u8BC1 16 \u8FDB\u5236\u989C\u8272")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1\u706B\u8F66\u8F66\u6B21"},{default:t(()=>[s("\u9A8C\u8BC1\u706B\u8F66\u8F66\u6B21")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1\u624B\u673A\u673A\u8EAB\u7801-imei"},{default:t(()=>[s("\u9A8C\u8BC1\u624B\u673A\u673A\u8EAB\u7801(IMEI)")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1\u5FC5\u987B\u5E26\u7AEF\u53E3\u53F7\u7684\u7F51\u5740-\u6216-ip"},{default:t(()=>[s("\u9A8C\u8BC1\u5FC5\u987B\u5E26\u7AEF\u53E3\u53F7\u7684\u7F51\u5740(\u6216 ip)")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1\u7F51\u5740-\u652F\u6301\u7AEF\u53E3\u548C-\u53C2\u6570-\u548C-\u53C2\u6570"},{default:t(()=>[s('\u9A8C\u8BC1\u7F51\u5740(\u652F\u6301\u7AEF\u53E3\u548C"?+\u53C2\u6570"\u548C"#+\u53C2\u6570)')]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1\u7EDF\u4E00\u793E\u4F1A\u4FE1\u7528\u4EE3\u7801"},{default:t(()=>[s("\u9A8C\u8BC1\u7EDF\u4E00\u793E\u4F1A\u4FE1\u7528\u4EE3\u7801")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1\u8FC5\u96F7\u94FE\u63A5"},{default:t(()=>[s("\u9A8C\u8BC1\u8FC5\u96F7\u94FE\u63A5")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1-ed2k-\u94FE\u63A5-\u5BBD\u677E\u5339\u914D"},{default:t(()=>[s("\u9A8C\u8BC1 ed2k \u94FE\u63A5(\u5BBD\u677E\u5339\u914D)")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1\u78C1\u529B\u94FE\u63A5-\u5BBD\u677E\u5339\u914D"},{default:t(()=>[s("\u9A8C\u8BC1\u78C1\u529B\u94FE\u63A5(\u5BBD\u677E\u5339\u914D)")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1\u5B50\u7F51\u63A9\u7801"},{default:t(()=>[s("\u9A8C\u8BC1\u5B50\u7F51\u63A9\u7801")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1-linux-\u6587\u4EF6\u5939-\u8DEF\u5F84"},{default:t(()=>[s('\u9A8C\u8BC1 linux"\u6587\u4EF6\u5939"\u8DEF\u5F84')]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1-linux-\u6587\u4EF6-\u8DEF\u5F84"},{default:t(()=>[s('\u9A8C\u8BC1 linux"\u6587\u4EF6"\u8DEF\u5F84')]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1-window-\u6587\u4EF6\u5939-\u8DEF\u5F84"},{default:t(()=>[s('\u9A8C\u8BC1 window"\u6587\u4EF6\u5939"\u8DEF\u5F84')]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1-window-\u4E0B-\u6587\u4EF6-\u8DEF\u5F84"},{default:t(()=>[s('\u9A8C\u8BC1 window \u4E0B"\u6587\u4EF6"\u8DEF\u5F84')]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1\u80A1\u7968\u4EE3\u7801-a-\u80A1"},{default:t(()=>[s("\u9A8C\u8BC1\u80A1\u7968\u4EE3\u7801(A \u80A1)")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1\u7248\u672C\u53F7\u683C\u5F0F\u5FC5\u987B\u4E3A-x-y-z"},{default:t(()=>[s("\u9A8C\u8BC1\u7248\u672C\u53F7\u683C\u5F0F\u5FC5\u987B\u4E3A X.Y.Z")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1\u89C6\u9891\u94FE\u63A5\u5730\u5740-\u89C6\u9891\u683C\u5F0F\u53EF\u6309\u9700\u589E\u5220"},{default:t(()=>[s("\u9A8C\u8BC1\u89C6\u9891\u94FE\u63A5\u5730\u5740\uFF08\u89C6\u9891\u683C\u5F0F\u53EF\u6309\u9700\u589E\u5220\uFF09")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1\u56FE\u7247\u94FE\u63A5\u5730\u5740-\u56FE\u7247\u683C\u5F0F\u53EF\u6309\u9700\u589E\u5220"},{default:t(()=>[s("\u9A8C\u8BC1\u56FE\u7247\u94FE\u63A5\u5730\u5740\uFF08\u56FE\u7247\u683C\u5F0F\u53EF\u6309\u9700\u589E\u5220\uFF09")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1\u94F6\u884C\u5361\u53F7-10-\u5230-30-\u4F4D-\u8986\u76D6\u5BF9\u516C-\u79C1\u8D26\u6237-\u53C2\u8003\u5FAE\u4FE1\u652F\u4ED8"},{default:t(()=>[s("\u9A8C\u8BC1\u94F6\u884C\u5361\u53F7\uFF0810 \u5230 30 \u4F4D, \u8986\u76D6\u5BF9\u516C/\u79C1\u8D26\u6237, \u53C2\u8003\u5FAE\u4FE1\u652F\u4ED8\uFF09")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1\u4E2D\u6587\u59D3\u540D"},{default:t(()=>[s("\u9A8C\u8BC1\u4E2D\u6587\u59D3\u540D")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1\u82F1\u6587\u59D3\u540D"},{default:t(()=>[s("\u9A8C\u8BC1\u82F1\u6587\u59D3\u540D")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1\u8F66\u724C\u53F7-\u65B0\u80FD\u6E90"},{default:t(()=>[s("\u9A8C\u8BC1\u8F66\u724C\u53F7(\u65B0\u80FD\u6E90)")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1\u8F66\u724C\u53F7-\u975E\u65B0\u80FD\u6E90"},{default:t(()=>[s("\u9A8C\u8BC1\u8F66\u724C\u53F7(\u975E\u65B0\u80FD\u6E90)")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1\u8F66\u724C\u53F7-\u65B0\u80FD\u6E90-\u975E\u65B0\u80FD\u6E90"},{default:t(()=>[s("\u9A8C\u8BC1\u8F66\u724C\u53F7(\u65B0\u80FD\u6E90+\u975E\u65B0\u80FD\u6E90)")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1\u624B\u673A\u53F7\u4E2D\u56FD-\u4E25\u8C28-\u6839\u636E\u5DE5\u4FE1\u90E8-2019-\u5E74\u6700\u65B0\u516C\u5E03\u7684\u624B\u673A\u53F7\u6BB5"},{default:t(()=>[s("\u9A8C\u8BC1\u624B\u673A\u53F7\u4E2D\u56FD(\u4E25\u8C28), \u6839\u636E\u5DE5\u4FE1\u90E8 2019 \u5E74\u6700\u65B0\u516C\u5E03\u7684\u624B\u673A\u53F7\u6BB5")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1\u624B\u673A\u53F7\u4E2D\u56FD-\u5BBD\u677E-\u53EA\u8981\u662F-13-14-15-16-17-18-19-\u5F00\u5934\u5373\u53EF"},{default:t(()=>[s("\u9A8C\u8BC1\u624B\u673A\u53F7\u4E2D\u56FD(\u5BBD\u677E), \u53EA\u8981\u662F 13,14,15,16,17,18,19 \u5F00\u5934\u5373\u53EF")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1-email-\u90AE\u7BB1"},{default:t(()=>[s("\u9A8C\u8BC1 email(\u90AE\u7BB1)")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1\u5EA7\u673A\u7535\u8BDD-\u56FD\u5185-\u5982-0341-86091234"},{default:t(()=>[s("\u9A8C\u8BC1\u5EA7\u673A\u7535\u8BDD(\u56FD\u5185),\u5982: 0341-86091234")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1sfz\u53F7-1-\u4EE3-15-\u4F4D\u6570\u5B57"},{default:t(()=>[s("\u9A8C\u8BC1SFZ\u53F7(1 \u4EE3,15 \u4F4D\u6570\u5B57)")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1sfz\u53F7-2-\u4EE3-18-\u4F4D\u6570\u5B57-\u6700\u540E\u4E00\u4F4D\u662F\u6821\u9A8C\u4F4D-\u53EF\u80FD\u4E3A\u6570\u5B57\u6216\u5B57\u7B26-x"},{default:t(()=>[s("\u9A8C\u8BC1SFZ\u53F7(2 \u4EE3,18 \u4F4D\u6570\u5B57),\u6700\u540E\u4E00\u4F4D\u662F\u6821\u9A8C\u4F4D,\u53EF\u80FD\u4E3A\u6570\u5B57\u6216\u5B57\u7B26 X")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1sfz\u53F7-\u652F\u6301-1-2-\u4EE3-15-\u4F4D-18-\u4F4D\u6570\u5B57"},{default:t(()=>[s("\u9A8C\u8BC1SFZ\u53F7, \u652F\u6301 1/2 \u4EE3(15 \u4F4D/18 \u4F4D\u6570\u5B57)")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1\u62A4\u7167-\u5305\u542B\u9999\u6E2F\u3001\u6FB3\u95E8"},{default:t(()=>[s("\u9A8C\u8BC1\u62A4\u7167\uFF08\u5305\u542B\u9999\u6E2F\u3001\u6FB3\u95E8\uFF09")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1\u5E10\u53F7\u662F\u5426\u5408\u6CD5-\u5B57\u6BCD\u5F00\u5934-\u5141\u8BB8-5-16-\u5B57\u8282-\u5141\u8BB8\u5B57\u6BCD\u6570\u5B57\u4E0B\u5212\u7EBF\u7EC4\u5408"},{default:t(()=>[s("\u9A8C\u8BC1\u5E10\u53F7\u662F\u5426\u5408\u6CD5(\u5B57\u6BCD\u5F00\u5934\uFF0C\u5141\u8BB8 5-16 \u5B57\u8282\uFF0C\u5141\u8BB8\u5B57\u6BCD\u6570\u5B57\u4E0B\u5212\u7EBF\u7EC4\u5408")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1\u4E2D\u6587-\u6C49\u5B57"},{default:t(()=>[s("\u9A8C\u8BC1\u4E2D\u6587/\u6C49\u5B57")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1\u5C0F\u6570"},{default:t(()=>[s("\u9A8C\u8BC1\u5C0F\u6570")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1\u6570\u5B57"},{default:t(()=>[s("\u9A8C\u8BC1\u6570\u5B57")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1-qq-\u53F7\u683C\u5F0F"},{default:t(()=>[s("\u9A8C\u8BC1 qq \u53F7\u683C\u5F0F")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1\u6570\u5B57\u548C\u5B57\u6BCD\u7EC4\u6210"},{default:t(()=>[s("\u9A8C\u8BC1\u6570\u5B57\u548C\u5B57\u6BCD\u7EC4\u6210")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1\u82F1\u6587\u5B57\u6BCD"},{default:t(()=>[s("\u9A8C\u8BC1\u82F1\u6587\u5B57\u6BCD")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1\u5927\u5199\u82F1\u6587\u5B57\u6BCD"},{default:t(()=>[s("\u9A8C\u8BC1\u5927\u5199\u82F1\u6587\u5B57\u6BCD")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1\u5C0F\u5199\u82F1\u6587\u5B57\u6BCD"},{default:t(()=>[s("\u9A8C\u8BC1\u5C0F\u5199\u82F1\u6587\u5B57\u6BCD")]),_:1})]),n("li",null,[p(a,{to:"#\u6D4F\u89C8\u5668\u64CD\u4F5C\u76F8\u5173-browser-\u5DE5\u5177\u51FD\u6570"},{default:t(()=>[s("\u6D4F\u89C8\u5668\u64CD\u4F5C\u76F8\u5173 browser \u5DE5\u5177\u51FD\u6570")]),_:1})]),n("li",null,[p(a,{to:"#\u8FD4\u56DE\u5F53\u524D-url"},{default:t(()=>[s("\u8FD4\u56DE\u5F53\u524D url")]),_:1})]),n("li",null,[p(a,{to:"#\u83B7\u53D6-url-\u53C2\u6570-\u7B2C\u4E00\u79CD"},{default:t(()=>[s("\u83B7\u53D6 url \u53C2\u6570\uFF08\u7B2C\u4E00\u79CD\uFF09")]),_:1})]),n("li",null,[p(a,{to:"#\u83B7\u53D6-url-\u53C2\u6570-\u7B2C\u4E8C\u79CD"},{default:t(()=>[s("\u83B7\u53D6 url \u53C2\u6570\uFF08\u7B2C\u4E8C\u79CD\uFF09")]),_:1})]),n("li",null,[p(a,{to:"#\u4FEE\u6539-url-\u4E2D\u7684\u53C2\u6570"},{default:t(()=>[s("\u4FEE\u6539 url \u4E2D\u7684\u53C2\u6570")]),_:1})]),n("li",null,[p(a,{to:"#\u5220\u9664-url-\u4E2D\u6307\u5B9A\u7684\u53C2\u6570"},{default:t(()=>[s("\u5220\u9664 url \u4E2D\u6307\u5B9A\u7684\u53C2\u6570")]),_:1})]),n("li",null,[p(a,{to:"#\u83B7\u53D6\u7A97\u53E3\u53EF\u89C6\u8303\u56F4\u7684\u9AD8\u5EA6"},{default:t(()=>[s("\u83B7\u53D6\u7A97\u53E3\u53EF\u89C6\u8303\u56F4\u7684\u9AD8\u5EA6")]),_:1})]),n("li",null,[p(a,{to:"#\u83B7\u53D6\u7A97\u53E3\u53EF\u89C6\u8303\u56F4\u5BBD\u5EA6"},{default:t(()=>[s("\u83B7\u53D6\u7A97\u53E3\u53EF\u89C6\u8303\u56F4\u5BBD\u5EA6")]),_:1})]),n("li",null,[p(a,{to:"#\u83B7\u53D6\u7A97\u53E3\u5BBD\u5EA6"},{default:t(()=>[s("\u83B7\u53D6\u7A97\u53E3\u5BBD\u5EA6")]),_:1})]),n("li",null,[p(a,{to:"#\u83B7\u53D6\u7A97\u53E3\u5C3A\u5BF8"},{default:t(()=>[s("\u83B7\u53D6\u7A97\u53E3\u5C3A\u5BF8")]),_:1})]),n("li",null,[p(a,{to:"#\u83B7\u53D6\u6EDA\u52A8\u6761\u8DDD\u9876\u90E8\u9AD8\u5EA6"},{default:t(()=>[s("\u83B7\u53D6\u6EDA\u52A8\u6761\u8DDD\u9876\u90E8\u9AD8\u5EA6")]),_:1})]),n("li",null,[p(a,{to:"#\u83B7\u53D6\u6EDA\u52A8\u6761\u8DDD\u5DE6\u8FB9\u7684\u9AD8\u5EA6"},{default:t(()=>[s("\u83B7\u53D6\u6EDA\u52A8\u6761\u8DDD\u5DE6\u8FB9\u7684\u9AD8\u5EA6")]),_:1})]),n("li",null,[p(a,{to:"#\u5F00\u542F\u5168\u5C4F"},{default:t(()=>[s("\u5F00\u542F\u5168\u5C4F")]),_:1})]),n("li",null,[p(a,{to:"#\u5173\u95ED\u5168\u5C4F"},{default:t(()=>[s("\u5173\u95ED\u5168\u5C4F")]),_:1})]),n("li",null,[p(a,{to:"#\u8FD4\u56DE\u5F53\u524D\u6EDA\u52A8\u6761\u4F4D\u7F6E"},{default:t(()=>[s("\u8FD4\u56DE\u5F53\u524D\u6EDA\u52A8\u6761\u4F4D\u7F6E")]),_:1})]),n("li",null,[p(a,{to:"#\u6EDA\u52A8\u5230\u6307\u5B9A\u5143\u7D20\u533A\u57DF"},{default:t(()=>[s("\u6EDA\u52A8\u5230\u6307\u5B9A\u5143\u7D20\u533A\u57DF")]),_:1})]),n("li",null,[p(a,{to:"#\u5E73\u6ED1\u6EDA\u52A8\u5230\u9875\u9762\u9876\u90E8"},{default:t(()=>[s("\u5E73\u6ED1\u6EDA\u52A8\u5230\u9875\u9762\u9876\u90E8")]),_:1})]),n("li",null,[p(a,{to:"#http-\u8DF3\u8F6C-https"},{default:t(()=>[s("http \u8DF3\u8F6C https")]),_:1})]),n("li",null,[p(a,{to:"#\u68C0\u67E5\u9875\u9762\u5E95\u90E8\u662F\u5426\u53EF\u89C1"},{default:t(()=>[s("\u68C0\u67E5\u9875\u9762\u5E95\u90E8\u662F\u5426\u53EF\u89C1")]),_:1})]),n("li",null,[p(a,{to:"#\u6253\u5F00\u4E00\u4E2A\u7A97\u53E3"},{default:t(()=>[s("\u6253\u5F00\u4E00\u4E2A\u7A97\u53E3")]),_:1})]),n("li",null,[p(a,{to:"#\u81EA\u9002\u5E94\u9875\u9762-rem"},{default:t(()=>[s("\u81EA\u9002\u5E94\u9875\u9762\uFF08rem\uFF09")]),_:1})]),n("li",null,[p(a,{to:"#\u65E5\u671F\u5DE5\u5177-date-\u5DE5\u5177\u51FD\u6570"},{default:t(()=>[s("\u65E5\u671F\u5DE5\u5177 date \u5DE5\u5177\u51FD\u6570")]),_:1})]),n("li",null,[p(a,{to:"#localstorage-\u5B58\u8D2E"},{default:t(()=>[s("localStorage \u5B58\u8D2E")]),_:1})]),n("li",null,[p(a,{to:"#localstorage-\u83B7\u53D6"},{default:t(()=>[s("localStorage \u83B7\u53D6")]),_:1})]),n("li",null,[p(a,{to:"#localstorage-\u79FB\u9664"},{default:t(()=>[s("localStorage \u79FB\u9664")]),_:1})]),n("li",null,[p(a,{to:"#localstorage-\u5B58\u8D2E\u67D0\u4E00\u6BB5\u65F6\u95F4\u5931\u6548"},{default:t(()=>[s("localStorage \u5B58\u8D2E\u67D0\u4E00\u6BB5\u65F6\u95F4\u5931\u6548")]),_:1})]),n("li",null,[p(a,{to:"#sessionstorage-\u5B58\u8D2E"},{default:t(()=>[s("sessionStorage \u5B58\u8D2E")]),_:1})]),n("li",null,[p(a,{to:"#sessionstorage-\u83B7\u53D6"},{default:t(()=>[s("sessionStorage \u83B7\u53D6")]),_:1})]),n("li",null,[p(a,{to:"#sessionstorage-\u5220\u9664"},{default:t(()=>[s("sessionStorage \u5220\u9664")]),_:1})]),n("li",null,[p(a,{to:"#sessionstorage-\u5B58\u8D2E\u67D0\u4E00\u6BB5\u65F6\u95F4\u5931\u6548"},{default:t(()=>[s("sessionStorage \u5B58\u8D2E\u67D0\u4E00\u6BB5\u65F6\u95F4\u5931\u6548")]),_:1})]),n("li",null,[p(a,{to:"#cookie-\u5B58\u8D2E"},{default:t(()=>[s("cookie \u5B58\u8D2E")]),_:1})]),n("li",null,[p(a,{to:"#cookie-\u83B7\u53D6"},{default:t(()=>[s("cookie \u83B7\u53D6")]),_:1})]),n("li",null,[p(a,{to:"#cookie-\u5220\u9664"},{default:t(()=>[s("cookie \u5220\u9664")]),_:1})]),n("li",null,[p(a,{to:"#\u66F4\u591A\u7684\u5DE5\u5177\u51FD\u6570"},{default:t(()=>[s("\u66F4\u591A\u7684\u5DE5\u5177\u51FD\u6570")]),_:1})]),n("li",null,[p(a,{to:"#\u91D1\u94B1\u683C\u5F0F\u5316-\u4E09\u4F4D\u52A0\u9017\u53F7"},{default:t(()=>[s("\u91D1\u94B1\u683C\u5F0F\u5316\uFF0C\u4E09\u4F4D\u52A0\u9017\u53F7")]),_:1})]),n("li",null,[p(a,{to:"#\u83B7\u53D6\u6587\u4EF6-base64-\u7F16\u7801"},{default:t(()=>[s("\u83B7\u53D6\u6587\u4EF6 base64 \u7F16\u7801")]),_:1})]),n("li",null,[p(a,{to:"#b-\u8F6C\u6362\u5230-kb-mb-gb-\u5E76\u4FDD\u7559\u4E24\u4F4D\u5C0F\u6570"},{default:t(()=>[s("B \u8F6C\u6362\u5230 KB,MB,GB \u5E76\u4FDD\u7559\u4E24\u4F4D\u5C0F\u6570")]),_:1})]),n("li",null,[p(a,{to:"#base64-\u8F6C-file"},{default:t(()=>[s("base64 \u8F6C file")]),_:1})]),n("li",null,[p(a,{to:"#base64-\u8F6C-blob"},{default:t(()=>[s("base64 \u8F6C blob")]),_:1})]),n("li",null,[p(a,{to:"#blob-\u8F6C-file"},{default:t(()=>[s("blob \u8F6C file")]),_:1})]),n("li",null,[p(a,{to:"#file-\u8F6C-base64"},{default:t(()=>[s("file \u8F6C base64")]),_:1})]),n("li",null,[p(a,{to:"#\u9012\u5F52\u751F\u6210\u6811\u5F62\u7ED3\u6784"},{default:t(()=>[s("\u9012\u5F52\u751F\u6210\u6811\u5F62\u7ED3\u6784")]),_:1})]),n("li",null,[p(a,{to:"#\u904D\u5386\u6811\u8282\u70B9"},{default:t(()=>[s("\u904D\u5386\u6811\u8282\u70B9")]),_:1})]),n("li",null,[p(a,{to:"#\u8FFD\u6EAF\u7236\u8282\u70B9"},{default:t(()=>[s("\u8FFD\u6EAF\u7236\u8282\u70B9")]),_:1})]),n("li",null,[p(a,{to:"#\u5BFB\u627E\u6240\u6709\u5B50\u8282\u70B9"},{default:t(()=>[s("\u5BFB\u627E\u6240\u6709\u5B50\u8282\u70B9")]),_:1})]),n("li",null,[p(a,{to:"#\u6839\u636E-pid-\u751F\u6210\u6811\u5F62\u7ED3\u6784"},{default:t(()=>[s("\u6839\u636E pid \u751F\u6210\u6811\u5F62\u7ED3\u6784")]),_:1})]),n("li",null,[p(a,{to:"#\u67E5\u8BE2\u6570\u7EC4\u4E2D\u662F\u5426\u5B58\u5728\u67D0\u4E2A\u5143\u7D20\u5E76\u8FD4\u56DE\u5143\u7D20\u7B2C\u4E00\u6B21\u51FA\u73B0\u7684\u4E0B\u6807"},{default:t(()=>[s("\u67E5\u8BE2\u6570\u7EC4\u4E2D\u662F\u5426\u5B58\u5728\u67D0\u4E2A\u5143\u7D20\u5E76\u8FD4\u56DE\u5143\u7D20\u7B2C\u4E00\u6B21\u51FA\u73B0\u7684\u4E0B\u6807")]),_:1})]),n("li",null,[p(a,{to:"#windows-\u6839\u636E\u8BE6\u7EC6\u7248\u672C\u53F7\u5224\u65AD\u5F53\u524D\u7CFB\u7EDF\u540D\u79F0"},{default:t(()=>[s("Windows \u6839\u636E\u8BE6\u7EC6\u7248\u672C\u53F7\u5224\u65AD\u5F53\u524D\u7CFB\u7EDF\u540D\u79F0")]),_:1})]),n("li",null,[p(a,{to:"#\u5224\u65AD\u624B\u673A\u662F-andoird-\u8FD8\u662F-ios"},{default:t(()=>[s("\u5224\u65AD\u624B\u673A\u662F Andoird \u8FD8\u662F IOS")]),_:1})]),n("li",null,[p(a,{to:"#\u51FD\u6570\u9632\u6296"},{default:t(()=>[s("\u51FD\u6570\u9632\u6296")]),_:1})]),n("li",null,[p(a,{to:"#\u51FD\u6570\u8282\u6D41"},{default:t(()=>[s("\u51FD\u6570\u8282\u6D41")]),_:1})]),n("li",null,[p(a,{to:"#\u5224\u65AD\u6570\u636E\u7C7B\u578B"},{default:t(()=>[s("\u5224\u65AD\u6570\u636E\u7C7B\u578B")]),_:1})]),n("li",null,[p(a,{to:"#\u751F\u6210\u6307\u5B9A\u8303\u56F4\u968F\u673A\u6570"},{default:t(()=>[s("\u751F\u6210\u6307\u5B9A\u8303\u56F4\u968F\u673A\u6570")]),_:1})]),n("li",null,[p(a,{to:"#\u6570\u7EC4\u4E71\u5E8F"},{default:t(()=>[s("\u6570\u7EC4\u4E71\u5E8F")]),_:1})]),n("li",null,[p(a,{to:"#\u6570\u7EC4\u4EA4\u96C6"},{default:t(()=>[s("\u6570\u7EC4\u4EA4\u96C6")]),_:1})]),n("li",null,[p(a,{to:"#\u6570\u7EC4\u4E2D\u67D0\u5143\u7D20\u51FA\u73B0\u7684\u6B21\u6570"},{default:t(()=>[s("\u6570\u7EC4\u4E2D\u67D0\u5143\u7D20\u51FA\u73B0\u7684\u6B21\u6570")]),_:1})]),n("li",null,[p(a,{to:"#\u52A0\u6CD5\u51FD\u6570-\u7CBE\u5EA6\u4E22\u5931\u95EE\u9898"},{default:t(()=>[s("\u52A0\u6CD5\u51FD\u6570\uFF08\u7CBE\u5EA6\u4E22\u5931\u95EE\u9898\uFF09")]),_:1})]),n("li",null,[p(a,{to:"#\u51CF\u6CD5\u51FD\u6570-\u7CBE\u5EA6\u4E22\u5931\u95EE\u9898"},{default:t(()=>[s("\u51CF\u6CD5\u51FD\u6570\uFF08\u7CBE\u5EA6\u4E22\u5931\u95EE\u9898\uFF09")]),_:1})]),n("li",null,[p(a,{to:"#\u9664\u6CD5\u51FD\u6570-\u7CBE\u5EA6\u4E22\u5931\u95EE\u9898"},{default:t(()=>[s("\u9664\u6CD5\u51FD\u6570\uFF08\u7CBE\u5EA6\u4E22\u5931\u95EE\u9898\uFF09")]),_:1})]),n("li",null,[p(a,{to:"#\u4E58\u6CD5\u51FD\u6570-\u7CBE\u5EA6\u4E22\u5931\u95EE\u9898"},{default:t(()=>[s("\u4E58\u6CD5\u51FD\u6570\uFF08\u7CBE\u5EA6\u4E22\u5931\u95EE\u9898\uFF09")]),_:1})]),n("li",null,[p(a,{to:"#\u9012\u5F52\u4F18\u5316-\u5C3E\u9012\u5F52"},{default:t(()=>[s("\u9012\u5F52\u4F18\u5316\uFF08\u5C3E\u9012\u5F52\uFF09")]),_:1})]),n("li",null,[p(a,{to:"#\u751F\u6210\u968F\u673A\u6574\u6570"},{default:t(()=>[s("\u751F\u6210\u968F\u673A\u6574\u6570")]),_:1})]),n("li",null,[p(a,{to:"#\u53BB\u9664\u7A7A\u683C"},{default:t(()=>[s("\u53BB\u9664\u7A7A\u683C")]),_:1})]),n("li",null,[p(a,{to:"#\u5927\u5C0F\u5199\u8F6C\u6362"},{default:t(()=>[s("\u5927\u5C0F\u5199\u8F6C\u6362")]),_:1})]),n("li",null,[p(a,{to:"#\u968F\u673A-16-\u8FDB\u5236\u989C\u8272-hexcolor"},{default:t(()=>[s("\u968F\u673A 16 \u8FDB\u5236\u989C\u8272 hexColor")]),_:1})]),n("li",null,[p(a,{to:"#\u968F\u673A-16-\u8FDB\u5236\u989C\u8272-randomhexcolorcode"},{default:t(()=>[s("\u968F\u673A 16 \u8FDB\u5236\u989C\u8272 randomHexColorCode")]),_:1})]),n("li",null,[p(a,{to:"#\u8F6C\u4E49-html-\u9632-xss-\u653B\u51FB"},{default:t(()=>[s("\u8F6C\u4E49 html(\u9632 XSS \u653B\u51FB)")]),_:1})]),n("li",null,[p(a,{to:"#\u68C0\u6D4B\u79FB\u52A8-pc-\u8BBE\u5907"},{default:t(()=>[s("\u68C0\u6D4B\u79FB\u52A8/PC \u8BBE\u5907")]),_:1})]),n("li",null,[p(a,{to:"#\u9690\u85CF\u6240\u6709\u6307\u5B9A\u6807\u7B7E"},{default:t(()=>[s("\u9690\u85CF\u6240\u6709\u6307\u5B9A\u6807\u7B7E")]),_:1})]),n("li",null,[p(a,{to:"#\u8FD4\u56DE\u6307\u5B9A\u5143\u7D20\u7684\u751F\u6548\u6837\u5F0F"},{default:t(()=>[s("\u8FD4\u56DE\u6307\u5B9A\u5143\u7D20\u7684\u751F\u6548\u6837\u5F0F")]),_:1})]),n("li",null,[p(a,{to:"#\u68C0\u67E5\u662F\u5426\u5305\u542B\u5B50\u5143\u7D20"},{default:t(()=>[s("\u68C0\u67E5\u662F\u5426\u5305\u542B\u5B50\u5143\u7D20")]),_:1})]),n("li",null,[p(a,{to:"#\u6570\u5B57\u8D85\u8FC7\u89C4\u5B9A\u5927\u5C0F\u52A0\u4E0A\u52A0\u53F7-\u5982\u6570\u5B57\u8D85\u8FC7-99-\u663E\u793A-99"},{default:t(()=>[s("\u6570\u5B57\u8D85\u8FC7\u89C4\u5B9A\u5927\u5C0F\u52A0\u4E0A\u52A0\u53F7\u201C+\u201D\uFF0C\u5982\u6570\u5B57\u8D85\u8FC7 99 \u663E\u793A 99+")]),_:1})]),n("li",null,[p(a,{to:"#\u8F93\u5165\u4E00\u4E2A\u503C-\u8FD4\u56DE\u5176\u6570\u636E\u7C7B\u578B"},{default:t(()=>[s("\u8F93\u5165\u4E00\u4E2A\u503C\uFF0C\u8FD4\u56DE\u5176\u6570\u636E\u7C7B\u578B")]),_:1})]),n("li",null,[p(a,{to:"#\u6570\u7EC4\u53BB\u91CD"},{default:t(()=>[s("\u6570\u7EC4\u53BB\u91CD")]),_:1})]),n("li",null,[p(a,{to:"#\u5B57\u7B26\u4E32\u53BB\u91CD"},{default:t(()=>[s("\u5B57\u7B26\u4E32\u53BB\u91CD")]),_:1})]),n("li",null,[p(a,{to:"#\u53BB\u9664\u8FDE\u7EED\u7684\u5B57\u7B26\u4E32"},{default:t(()=>[s("\u53BB\u9664\u8FDE\u7EED\u7684\u5B57\u7B26\u4E32")]),_:1})]),n("li",null,[p(a,{to:"#\u6DF1\u62F7\u8D1D-\u6D45\u62F7\u8D1D"},{default:t(()=>[s("\u6DF1\u62F7\u8D1D \u6D45\u62F7\u8D1D")]),_:1})]),n("li",null,[p(a,{to:"#reverse-\u5E95\u5C42\u539F\u7406\u548C\u6269\u5C55"},{default:t(()=>[s("reverse \u5E95\u5C42\u539F\u7406\u548C\u6269\u5C55")]),_:1})]),n("li",null,[p(a,{to:"#\u5723\u676F\u6A21\u5F0F\u7684\u7EE7\u627F"},{default:t(()=>[s("\u5723\u676F\u6A21\u5F0F\u7684\u7EE7\u627F")]),_:1})]),n("li",null,[p(a,{to:"#\u627E\u51FA\u5B57\u7B26\u4E32\u4E2D\u7B2C\u4E00\u6B21\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u5B57\u6BCD"},{default:t(()=>[s("\u627E\u51FA\u5B57\u7B26\u4E32\u4E2D\u7B2C\u4E00\u6B21\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u5B57\u6BCD")]),_:1})]),n("li",null,[p(a,{to:"#\u627E\u5143\u7D20\u7684\u7B2C-n-\u7EA7\u7236\u5143\u7D20"},{default:t(()=>[s("\u627E\u5143\u7D20\u7684\u7B2C n \u7EA7\u7236\u5143\u7D20")]),_:1})]),n("li",null,[p(a,{to:"#\u8FD4\u56DE\u5143\u7D20\u7684\u7B2C-n-\u4E2A\u5144\u5F1F\u8282\u70B9"},{default:t(()=>[s("\u8FD4\u56DE\u5143\u7D20\u7684\u7B2C n \u4E2A\u5144\u5F1F\u8282\u70B9")]),_:1})]),n("li",null,[p(a,{to:"#\u5C01\u88C5-mychildren-\u89E3\u51B3\u6D4F\u89C8\u5668\u7684\u517C\u5BB9\u95EE\u9898"},{default:t(()=>[s("\u5C01\u88C5 mychildren\uFF0C\u89E3\u51B3\u6D4F\u89C8\u5668\u7684\u517C\u5BB9\u95EE\u9898")]),_:1})]),n("li",null,[p(a,{to:"#\u5224\u65AD\u5143\u7D20\u6709\u6CA1\u6709\u5B50\u5143\u7D20"},{default:t(()=>[s("\u5224\u65AD\u5143\u7D20\u6709\u6CA1\u6709\u5B50\u5143\u7D20")]),_:1})]),n("li",null,[p(a,{to:"#\u6211\u4E00\u4E2A\u5143\u7D20\u63D2\u5165\u5230\u53E6\u4E00\u4E2A\u5143\u7D20\u7684\u540E\u9762"},{default:t(()=>[s("\u6211\u4E00\u4E2A\u5143\u7D20\u63D2\u5165\u5230\u53E6\u4E00\u4E2A\u5143\u7D20\u7684\u540E\u9762")]),_:1})]),n("li",null,[p(a,{to:"#\u8FD4\u56DE\u5F53\u524D\u7684\u65F6\u95F4-\u5E74\u6708\u65E5\u65F6\u5206\u79D2"},{default:t(()=>[s("\u8FD4\u56DE\u5F53\u524D\u7684\u65F6\u95F4\uFF08\u5E74\u6708\u65E5\u65F6\u5206\u79D2\uFF09")]),_:1})]),n("li",null,[p(a,{to:"#\u83B7\u5F97\u6EDA\u52A8\u6761\u7684\u6EDA\u52A8\u8DDD\u79BB"},{default:t(()=>[s("\u83B7\u5F97\u6EDA\u52A8\u6761\u7684\u6EDA\u52A8\u8DDD\u79BB")]),_:1})]),n("li",null,[p(a,{to:"#\u83B7\u5F97\u89C6\u53E3\u7684\u5C3A\u5BF8"},{default:t(()=>[s("\u83B7\u5F97\u89C6\u53E3\u7684\u5C3A\u5BF8")]),_:1})]),n("li",null,[p(a,{to:"#\u83B7\u53D6\u4EFB\u4E00\u5143\u7D20\u7684\u4EFB\u610F\u5C5E\u6027"},{default:t(()=>[s("\u83B7\u53D6\u4EFB\u4E00\u5143\u7D20\u7684\u4EFB\u610F\u5C5E\u6027")]),_:1})]),n("li",null,[p(a,{to:"#\u7ED1\u5B9A\u4E8B\u4EF6\u7684\u517C\u5BB9\u4EE3\u7801"},{default:t(()=>[s("\u7ED1\u5B9A\u4E8B\u4EF6\u7684\u517C\u5BB9\u4EE3\u7801")]),_:1})]),n("li",null,[p(a,{to:"#\u89E3\u7ED1\u4E8B\u4EF6"},{default:t(()=>[s("\u89E3\u7ED1\u4E8B\u4EF6")]),_:1})]),n("li",null,[p(a,{to:"#\u53D6\u6D88\u5192\u6CE1\u7684\u517C\u5BB9\u4EE3\u7801"},{default:t(()=>[s("\u53D6\u6D88\u5192\u6CE1\u7684\u517C\u5BB9\u4EE3\u7801")]),_:1})]),n("li",null,[p(a,{to:"#\u68C0\u9A8C\u5B57\u7B26\u4E32\u662F\u5426\u662F\u56DE\u6587"},{default:t(()=>[s("\u68C0\u9A8C\u5B57\u7B26\u4E32\u662F\u5426\u662F\u56DE\u6587")]),_:1})]),n("li",null,[p(a,{to:"#\u68C0\u9A8C\u5B57\u7B26\u4E32\u662F\u5426\u662F\u56DE\u6587-1"},{default:t(()=>[s("\u68C0\u9A8C\u5B57\u7B26\u4E32\u662F\u5426\u662F\u56DE\u6587")]),_:1})]),n("li",null,[p(a,{to:"#\u517C\u5BB9-getelementsbyclassname-\u65B9\u6CD5"},{default:t(()=>[s("\u517C\u5BB9 getElementsByClassName \u65B9\u6CD5")]),_:1})]),n("li",null,[p(a,{to:"#\u8FD0\u52A8\u51FD\u6570"},{default:t(()=>[s("\u8FD0\u52A8\u51FD\u6570")]),_:1})]),n("li",null,[p(a,{to:"#\u5F39\u6027\u8FD0\u52A8"},{default:t(()=>[s("\u5F39\u6027\u8FD0\u52A8")]),_:1})]),n("li",null,[p(a,{to:"#\u5C01\u88C5\u81EA\u5DF1\u7684-foreach-\u65B9\u6CD5"},{default:t(()=>[s("\u5C01\u88C5\u81EA\u5DF1\u7684 forEach \u65B9\u6CD5")]),_:1})]),n("li",null,[p(a,{to:"#\u5C01\u88C5\u81EA\u5DF1\u7684-filter-\u65B9\u6CD5"},{default:t(()=>[s("\u5C01\u88C5\u81EA\u5DF1\u7684 filter \u65B9\u6CD5")]),_:1})]),n("li",null,[p(a,{to:"#\u6570\u7EC4-map-\u65B9\u6CD5"},{default:t(()=>[s("\u6570\u7EC4 map \u65B9\u6CD5")]),_:1})]),n("li",null,[p(a,{to:"#\u6570\u7EC4-every-\u65B9\u6CD5"},{default:t(()=>[s("\u6570\u7EC4 every \u65B9\u6CD5")]),_:1})]),n("li",null,[p(a,{to:"#\u6570\u7EC4-reduce-\u65B9\u6CD5"},{default:t(()=>[s("\u6570\u7EC4 reduce \u65B9\u6CD5")]),_:1})]),n("li",null,[p(a,{to:"#\u83B7\u53D6-url-\u4E2D\u7684\u53C2\u6570-1"},{default:t(()=>[s("\u83B7\u53D6 url \u4E2D\u7684\u53C2\u6570\uFF081\uFF09")]),_:1})]),n("li",null,[p(a,{to:"#\u6570\u7EC4\u6392\u5E8F"},{default:t(()=>[s("\u6570\u7EC4\u6392\u5E8F")]),_:1})]),n("li",null,[p(a,{to:"#\u904D\u5386-dom-\u6811"},{default:t(()=>[s("\u904D\u5386 Dom \u6811")]),_:1})]),n("li",null,[p(a,{to:"#\u539F\u751F-js-\u5C01\u88C5-ajax"},{default:t(()=>[s("\u539F\u751F js \u5C01\u88C5 ajax")]),_:1})]),n("li",null,[p(a,{to:"#\u5F02\u6B65\u52A0\u8F7D-script"},{default:t(()=>[s("\u5F02\u6B65\u52A0\u8F7D script")]),_:1})]),n("li",null,[p(a,{to:"#cookie-\u7BA1\u7406"},{default:t(()=>[s("cookie \u7BA1\u7406")]),_:1})]),n("li",null,[p(a,{to:"#\u5B9E\u73B0-bind-\u65B9\u6CD5"},{default:t(()=>[s("\u5B9E\u73B0 bind()\u65B9\u6CD5")]),_:1})]),n("li",null,[p(a,{to:"#\u5B9E\u73B0-call-\u65B9\u6CD5"},{default:t(()=>[s("\u5B9E\u73B0 call()\u65B9\u6CD5")]),_:1})]),n("li",null,[p(a,{to:"#\u5B9E\u73B0-apply-\u65B9\u6CD5"},{default:t(()=>[s("\u5B9E\u73B0 apply()\u65B9\u6CD5")]),_:1})]),n("li",null,[p(a,{to:"#\u9632\u6296"},{default:t(()=>[s("\u9632\u6296")]),_:1})]),n("li",null,[p(a,{to:"#\u8282\u6D41"},{default:t(()=>[s("\u8282\u6D41")]),_:1})]),n("li",null,[p(a,{to:"#requestanimframe-\u517C\u5BB9\u6027\u65B9\u6CD5"},{default:t(()=>[s("requestAnimFrame \u517C\u5BB9\u6027\u65B9\u6CD5")]),_:1})]),n("li",null,[p(a,{to:"#cancelanimframe-\u517C\u5BB9\u6027\u65B9\u6CD5"},{default:t(()=>[s("cancelAnimFrame \u517C\u5BB9\u6027\u65B9\u6CD5")]),_:1})]),n("li",null,[p(a,{to:"#jsonp-\u5E95\u5C42\u65B9\u6CD5"},{default:t(()=>[s("jsonp \u5E95\u5C42\u65B9\u6CD5")]),_:1})]),n("li",null,[p(a,{to:"#\u83B7\u53D6-url-\u4E0A\u7684\u53C2\u6570-2"},{default:t(()=>[s("\u83B7\u53D6 url \u4E0A\u7684\u53C2\u6570\uFF082\uFF09")]),_:1})]),n("li",null,[p(a,{to:"#\u683C\u5F0F\u5316\u65F6\u95F4"},{default:t(()=>[s("\u683C\u5F0F\u5316\u65F6\u95F4")]),_:1})]),n("li",null,[p(a,{to:"#\u9A8C\u8BC1\u90AE\u7BB1\u7684\u6B63\u5219\u8868\u8FBE\u5F0F"},{default:t(()=>[s("\u9A8C\u8BC1\u90AE\u7BB1\u7684\u6B63\u5219\u8868\u8FBE\u5F0F")]),_:1})]),n("li",null,[p(a,{to:"#\u51FD\u6570\u67EF\u91CC\u5316"},{default:t(()=>[s("\u51FD\u6570\u67EF\u91CC\u5316")]),_:1})]),n("li",null,[p(a,{to:"#\u5927\u6570\u76F8\u52A0"},{default:t(()=>[s("\u5927\u6570\u76F8\u52A0")]),_:1})]),n("li",null,[p(a,{to:"#\u5355\u4F8B\u6A21\u5F0F"},{default:t(()=>[s("\u5355\u4F8B\u6A21\u5F0F")]),_:1})]),n("li",null,[p(a,{to:"#\u52A0\u8F7D-js-css-style"},{default:t(()=>[s("\u52A0\u8F7D js || css || style")]),_:1})]),n("li",null,[p(a,{to:"#\u83B7\u53D6-url-\u53C2\u6570-3"},{default:t(()=>[s("\u83B7\u53D6 url \u53C2\u6570\uFF083\uFF09")]),_:1})]),n("li",null,[p(a,{to:"#\u672C\u5730\u5B58\u50A8"},{default:t(()=>[s("\u672C\u5730\u5B58\u50A8")]),_:1})]),n("li",null,[p(a,{to:"#cookie-\u64CD\u4F5C\u3010set-get-del\u3011"},{default:t(()=>[s("cookie \u64CD\u4F5C\u3010set\uFF0Cget\uFF0Cdel\u3011")]),_:1})]),n("li",null,[p(a,{to:"#js-\u83B7\u53D6\u5143\u7D20\u6837\u5F0F\u3010\u652F\u6301\u5185\u8054\u3011"},{default:t(()=>[s("Js \u83B7\u53D6\u5143\u7D20\u6837\u5F0F\u3010\u652F\u6301\u5185\u8054\u3011")]),_:1})]),n("li",null,[p(a,{to:"#\u65F6\u95F4\u683C\u5F0F\u5316"},{default:t(()=>[s("\u65F6\u95F4\u683C\u5F0F\u5316")]),_:1})]),n("li",null,[p(a,{to:"#\u539F\u751F-ajax-\u64CD\u4F5C-2"},{default:t(()=>[s("\u539F\u751F ajax \u64CD\u4F5C\uFF082\uFF09")]),_:1})]),n("li",null,[p(a,{to:"#fetch-\u8BF7\u6C42\u7684\u5C01\u88C5"},{default:t(()=>[s("fetch \u8BF7\u6C42\u7684\u5C01\u88C5")]),_:1})]),n("li",null,[p(a,{to:"#\u8BBE\u5907\u5224\u65AD-android\u3001ios\u3001web"},{default:t(()=>[s("\u8BBE\u5907\u5224\u65AD\uFF1Aandroid\u3001ios\u3001web")]),_:1})]),n("li",null,[p(a,{to:"#\u5224\u65AD\u662F\u5426\u4E3A\u5FAE\u4FE1"},{default:t(()=>[s("\u5224\u65AD\u662F\u5426\u4E3A\u5FAE\u4FE1")]),_:1})]),n("li",null,[p(a,{to:"#\u6587\u672C\u590D\u5236\u529F\u80FD"},{default:t(()=>[s("\u6587\u672C\u590D\u5236\u529F\u80FD")]),_:1})]),n("li",null,[p(a,{to:"#\u5224\u65AD\u662F\u5426\u662F\u4E00\u4E2A\u6570\u7EC4"},{default:t(()=>[s("\u5224\u65AD\u662F\u5426\u662F\u4E00\u4E2A\u6570\u7EC4")]),_:1})]),n("li",null,[p(a,{to:"#\u5224\u65AD\u4E24\u4E2A\u6570\u7EC4\u662F\u5426\u76F8\u7B49"},{default:t(()=>[s("\u5224\u65AD\u4E24\u4E2A\u6570\u7EC4\u662F\u5426\u76F8\u7B49")]),_:1})]),n("li",null,[p(a,{to:"#\u65F6\u95F4\u4E0E\u65F6\u95F4\u6233\u8F6C\u6362"},{default:t(()=>[s("\u65F6\u95F4\u4E0E\u65F6\u95F4\u6233\u8F6C\u6362")]),_:1})]),n("li",null,[p(a,{to:"#\u5E38\u7528\u6B63\u5219\u9A8C\u8BC1"},{default:t(()=>[s("\u5E38\u7528\u6B63\u5219\u9A8C\u8BC1")]),_:1})]),n("li",null,[p(a,{to:"#\u662F\u5426\u4E3A-pc-\u7AEF"},{default:t(()=>[s("\u662F\u5426\u4E3A PC \u7AEF")]),_:1})]),n("li",null,[p(a,{to:"#\u53BB\u9664\u5B57\u7B26\u4E32\u7A7A\u683C"},{default:t(()=>[s("\u53BB\u9664\u5B57\u7B26\u4E32\u7A7A\u683C")]),_:1})]),n("li",null,[p(a,{to:"#\u5B57\u7B26\u4E32\u5927\u5C0F\u5199\u8F6C\u6362"},{default:t(()=>[s("\u5B57\u7B26\u4E32\u5927\u5C0F\u5199\u8F6C\u6362")]),_:1})]),n("li",null,[p(a,{to:"#\u8FC7\u6EE4-html-\u4EE3\u7801"},{default:t(()=>[s("\u8FC7\u6EE4 html \u4EE3\u7801")]),_:1})]),n("li",null,[p(a,{to:"#\u751F\u6210\u968F\u673A\u6570\u8303\u56F4"},{default:t(()=>[s("\u751F\u6210\u968F\u673A\u6570\u8303\u56F4")]),_:1})]),n("li",null,[p(a,{to:"#\u963F\u62C9\u4F2F\u6570\u5B57\u8F6C\u4E2D\u6587\u5927\u5199\u6570\u5B57"},{default:t(()=>[s("\u963F\u62C9\u4F2F\u6570\u5B57\u8F6C\u4E2D\u6587\u5927\u5199\u6570\u5B57")]),_:1})]),n("li",null,[p(a,{to:"#\u539F\u751F-dom-\u64CD\u4F5C"},{default:t(()=>[s("\u539F\u751F dom \u64CD\u4F5C")]),_:1})]),n("li",null,[p(a,{to:"#\u5224\u65AD\u56FE\u7247\u52A0\u8F7D\u5B8C\u6210"},{default:t(()=>[s("\u5224\u65AD\u56FE\u7247\u52A0\u8F7D\u5B8C\u6210")]),_:1})]),n("li",null,[p(a,{to:"#\u97F3\u9891\u52A0\u8F7D\u5B8C\u6210\u64CD\u4F5C"},{default:t(()=>[s("\u97F3\u9891\u52A0\u8F7D\u5B8C\u6210\u64CD\u4F5C")]),_:1})]),n("li",null,[p(a,{to:"#\u5149\u6807\u6240\u5728\u4F4D\u7F6E\u63D2\u5165\u5B57\u7B26"},{default:t(()=>[s("\u5149\u6807\u6240\u5728\u4F4D\u7F6E\u63D2\u5165\u5B57\u7B26")]),_:1})]),n("li",null,[p(a,{to:"#\u56FE\u7247\u5730\u5740\u8F6C-base64"},{default:t(()=>[s("\u56FE\u7247\u5730\u5740\u8F6C base64")]),_:1})]),n("li",null,[p(a,{to:"#base64-\u56FE\u7247\u4E0B\u8F7D\u529F\u80FD"},{default:t(()=>[s("base64 \u56FE\u7247\u4E0B\u8F7D\u529F\u80FD")]),_:1})]),n("li",null,[p(a,{to:"#\u6D4F\u89C8\u5668\u662F\u5426\u652F\u6301-webp-\u683C\u5F0F\u56FE\u7247"},{default:t(()=>[s("\u6D4F\u89C8\u5668\u662F\u5426\u652F\u6301 webP \u683C\u5F0F\u56FE\u7247")]),_:1})]),n("li",null,[p(a,{to:"#url-\u53C2\u6570\u8F6C\u5BF9\u8C61"},{default:t(()=>[s("url \u53C2\u6570\u8F6C\u5BF9\u8C61")]),_:1})]),n("li",null,[p(a,{to:"#\u5BF9\u8C61\u5E8F\u5217\u5316\u3010\u5BF9\u8C61\u8F6C-url-\u53C2\u6570\u3011"},{default:t(()=>[s("\u5BF9\u8C61\u5E8F\u5217\u5316\u3010\u5BF9\u8C61\u8F6C url \u53C2\u6570\u3011")]),_:1})]),n("li",null,[p(a,{to:"#h5-\u8F6F\u952E\u76D8\u7F29\u56DE\u3001\u5F39\u8D77\u56DE\u8C03"},{default:t(()=>[s("H5 \u8F6F\u952E\u76D8\u7F29\u56DE\u3001\u5F39\u8D77\u56DE\u8C03")]),_:1})]),n("li",null,[p(a,{to:"#\u51FD\u6570\u9632\u6296-1"},{default:t(()=>[s("\u51FD\u6570\u9632\u6296")]),_:1})]),n("li",null,[p(a,{to:"#\u51FD\u6570\u8282\u6D41-1"},{default:t(()=>[s("\u51FD\u6570\u8282\u6D41")]),_:1})])])]),d])}var f=e(i,[["render",v],["__file","jsOftenUsehandle.html.vue"]]);export{f as default};
